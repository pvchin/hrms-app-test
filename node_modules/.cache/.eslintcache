[{"D:\\react-myprojects\\hrms-airtable-july2\\src\\index.js":"1","D:\\react-myprojects\\hrms-airtable-july2\\src\\reportWebVitals.js":"2","D:\\react-myprojects\\hrms-airtable-july2\\src\\App.js":"3","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\employees_context.js":"4","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\expenses_context.js":"5","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\leaves_context.js":"6","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\dailyallowances_context.js":"7","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\payslips_context.js":"8","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\trainings_context.js":"9","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\tables_context.js":"10","D:\\react-myprojects\\hrms-airtable-july2\\src\\actions.js":"11","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Main.js":"12","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardMain.js":"13","D:\\react-myprojects\\hrms-airtable-july2\\src\\utils\\constants.js":"14","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\dailyallowances_reducer.js":"15","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\employees_reducer.js":"16","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\expenses_reducer.js":"17","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\trainings_reducer.js":"18","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\leaves_reducer.js":"19","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\payslips_reducer.js":"20","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\tables_reducer.js":"21","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LoginForm.js":"22","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardAdmin.js":"23","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardManager.js":"24","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardStaff.js":"25","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Appbanner.js":"26","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Example7.js":"27","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardAdminManager.js":"28","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SideDrawer.js":"29","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleEmployee.js":"30","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleLeave.js":"31","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleDailyAllowance.js":"32","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleExpense.js":"33","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleDailyAllowsDetls.js":"34","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\BatchDailyAllowances.js":"35","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SinglePayslip.js":"36","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payrun.js":"37","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payrunbatch.js":"38","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\data\\atomdata.js":"39","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\index.js":"40","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SigninForm.js":"41","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleDailyAllowsDetlsStaff.js":"42","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Example8.js":"43","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItemsStaff.js":"44","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItems.js":"45","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItemsManager.js":"46","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItemsAdmin.js":"47","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeForm.js":"48","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveForm.js":"49","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItemsAdminManager.js":"50","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseForm.js":"51","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DaiylAllowanceForm.js":"52","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowsDetlsTable.js":"53","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesTableStaff.js":"54","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipForm.js":"55","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PaySummary.js":"56","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\ErrorPage.js":"57","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowsDetlsTableStaff.js":"58","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeViewStaff.js":"59","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpExperiences.js":"60","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\data\\selectordata.js":"61","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payslip_Deductions.js":"62","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PrintPDFTest.js":"63","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payslip_Earnings.js":"64","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payslip_ViewDeductions.js":"65","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payslip_ViewEarnings.js":"66","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesAddPeriod.js":"67","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\CardLayout.js":"68","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\CustomDialog.js":"69","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\CardLayout2.js":"70","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTable.js":"71","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpTrainings.js":"72","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpFamily.js":"73","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpEducations.js":"74","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpPersonal.js":"75","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewTrainings.js":"76","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewExperiences.js":"77","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewLeaves.js":"78","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewEducations.js":"79","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewFamily.js":"80","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\AlertDialog.js":"81","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeFormStaff.js":"82","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\ClientsPage.js":"83","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\PrivateRoute.js":"84","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\TablesPage.js":"85","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DailyAllowancesStaffPage.js":"86","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DesignationPage.js":"87","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DailyAllowancesPage.js":"88","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\AllowancesPage.js":"89","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DepartmentsPage.js":"90","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\BatchPayslipsPage.js":"91","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\PayslipPage.js":"92","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\PayrollPage.js":"93","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\ExpensesStaffPage.js":"94","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\ExpensesPage.js":"95","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\LeaveStaffPage.js":"96","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\LeavePage.js":"97","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\AllEmployeesPage.js":"98","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DashboardPage.js":"99","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\HomePage.js":"100","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayForm.js":"101","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpExperiencesStaff.js":"102","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpFamilyStaff.js":"103","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpEducationsStaff.js":"104","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesPeriods.js":"105","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\TablesUpdate.js":"106","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\TableForm.js":"107","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Example.js":"108","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTable.js":"109","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipsPeriods.js":"110","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTableStaff.js":"111","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableStaff.js":"112","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTable.js":"113","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\AllEmployeesTable.js":"114","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\CardLayout3.js":"115","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\HomeAdmin.js":"116","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Copyright.js":"117","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\HomeManager.js":"118","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\HomeStaff.js":"119","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\HomeAdminManager.js":"120","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DeductionsTable.js":"121","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DesignationsTable.js":"122","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\AllowancesTable.js":"123","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DepartmentsTable.js":"124","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\BatchPayslips.js":"125","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableAdmin.js":"126","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeView.js":"127","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableView.js":"128","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTableView.js":"129","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesTableView.js":"130","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTableAdmin.js":"131","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesTableAdmin.js":"132","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableView.js":"133","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\WPExpiryView.js":"134","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableAdmin.js":"135","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\OnLeavesView.js":"136","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableViewStaff.js":"137","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesTableViewStaff.js":"138","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTableViewStaff.js":"139","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableViewStaff.js":"140","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\WPExpiryViewStaff.js":"141","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\OnLeavesViewStaff.js":"142","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeFormNew.js":"143","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\react-query\\constants.js":"144","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useEmployees.js":"145","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\departments\\useDepartments.js":"146","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\designations\\useDesignations.js":"147","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\allowances\\useAllowances.js":"148","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\deductions\\useDeductions.js":"149","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\app\\Loading.tsx":"150","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\departments\\useUpdateDepartments.js":"151","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\departments\\useDeleteDepartments.js":"152","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\departments\\useAddDepartments.js":"153","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\useCustomToast.ts":"154","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\theme\\index.js":"155","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\deductions\\useUpdateDeductions.js":"156","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\deductions\\useDeleteDeductions.js":"157","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\deductions\\useAddDeductions.js":"158","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\designations\\useUpdateDesignations.js":"159","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\designations\\useDeleteDesignations.js":"160","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\designations\\useAddDesignations.js":"161","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\allowances\\useUpdateAllowances.js":"162","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\allowances\\useDeleteAllowances.js":"163","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\allowances\\useAddAllowances.js":"164","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useDeleteEmployees.js":"165","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useAddEmployees.js":"166","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useUpdateEmployees.js":"167","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\useFamily.js":"168","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\utils.js":"169","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\useUpdateFamily.js":"170","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\useAddFamily.js":"171","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\useDeleteFamily.js":"172","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\useEducations.js":"173","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\useUpdateEducations.js":"174","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\useAddEducations.js":"175","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\useDeleteEducations.js":"176","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\utils.js":"177","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\useExperiences.js":"178","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\utils.js":"179","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\useUpdateExperiences.js":"180","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\useAddExperiences.js":"181","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\useDeleteExperiences.js":"182","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\useTrainings.js":"183","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\utils.js":"184","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\useUpdateTrainings.js":"185","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\useAddTrainings.js":"186","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\useDeleteTrainings.js":"187","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\useLeaves.js":"188","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\useAddLeaves.js":"189","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\useDeleteLeaves.js":"190","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\useUpdateLeaves.js":"191","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\utils.js":"192","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\user-storage\\index.js":"193","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\user\\useUser.js":"194","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\useAddExpenses.js":"195","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\useDeleteExpenses.js":"196","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\useUpdateExpenses.js":"197","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\useExpenses.js":"198","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\utils.js":"199","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleEmployeeStaff old.js":"200","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleEmployeeStaff.js":"201","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\utils.js":"202","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useSingleEmployee.js":"203","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\useDailyAllows.js":"204","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\utils.js":"205","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\useAddDailyAllows.js":"206","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\useUpdateDailyAllows.js":"207","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\useDeleteDailyAllows.js":"208","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\useDailyAllowsDetls.js":"209","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\utils.js":"210","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\useAddDailyAllowsDetls.js":"211","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\useUpdateDailyAllowsDetls.js":"212","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\useDeleteDailyAllowsDetls.js":"213","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableStaff.js":"214","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\payslips\\usePayslips.js":"215","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\payslips\\utils.js":"216","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\PayslipStaffPage.js":"217","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\TrainingsStaffPage.js":"218","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\TrainingsTableViewStaff.js":"219","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableViewAdmin.js":"220","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\WPExpiryViewAdmin.js":"221","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\TrainingsTableViewAdmin.js":"222","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableViewAdmin Copy.js":"223","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableViewAdmin.js":"224","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\payrun\\usePayrun.js":"225","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\payrun\\utils.js":"226","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\UserAccessPage.js":"227","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\UserAccessTable.js":"228","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PrintPaySummary.js":"229","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ComponentToPrint.js":"230","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\Utils.js":"231","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PrintPayslip.js":"232"},{"size":2367,"mtime":1625750449290,"results":"233","hashOfConfig":"234"},{"size":362,"mtime":1612573013334,"results":"235","hashOfConfig":"234"},{"size":1693,"mtime":1625799284304,"results":"236","hashOfConfig":"234"},{"size":5109,"mtime":1622455758272,"results":"237","hashOfConfig":"234"},{"size":6806,"mtime":1624942731129,"results":"238","hashOfConfig":"234"},{"size":6104,"mtime":1624718011778,"results":"239","hashOfConfig":"234"},{"size":14576,"mtime":1624896248553,"results":"240","hashOfConfig":"234"},{"size":21503,"mtime":1624982037307,"results":"241","hashOfConfig":"234"},{"size":5426,"mtime":1622470700044,"results":"242","hashOfConfig":"234"},{"size":20820,"mtime":1623596141428,"results":"243","hashOfConfig":"234"},{"size":24202,"mtime":1624975052616,"results":"244","hashOfConfig":"234"},{"size":1185,"mtime":1625999460186,"results":"245","hashOfConfig":"234"},{"size":6963,"mtime":1623905023067,"results":"246","hashOfConfig":"234"},{"size":4732,"mtime":1624894795531,"results":"247","hashOfConfig":"234"},{"size":10813,"mtime":1624893831506,"results":"248","hashOfConfig":"234"},{"size":3564,"mtime":1623643063828,"results":"249","hashOfConfig":"234"},{"size":4603,"mtime":1624942857309,"results":"250","hashOfConfig":"234"},{"size":4243,"mtime":1622467767067,"results":"251","hashOfConfig":"234"},{"size":3955,"mtime":1622472085041,"results":"252","hashOfConfig":"234"},{"size":17438,"mtime":1624975146229,"results":"253","hashOfConfig":"234"},{"size":20287,"mtime":1623596884027,"results":"254","hashOfConfig":"234"},{"size":4522,"mtime":1625999145265,"results":"255","hashOfConfig":"234"},{"size":5786,"mtime":1626093186782,"results":"256","hashOfConfig":"234"},{"size":7123,"mtime":1626093165022,"results":"257","hashOfConfig":"234"},{"size":7057,"mtime":1626056678545,"results":"258","hashOfConfig":"234"},{"size":4406,"mtime":1625999400892,"results":"259","hashOfConfig":"234"},{"size":5809,"mtime":1623426844711,"results":"260","hashOfConfig":"234"},{"size":6957,"mtime":1626093174536,"results":"261","hashOfConfig":"234"},{"size":4345,"mtime":1624808410449,"results":"262","hashOfConfig":"234"},{"size":5507,"mtime":1625586024782,"results":"263","hashOfConfig":"234"},{"size":4588,"mtime":1621068413791,"results":"264","hashOfConfig":"234"},{"size":4648,"mtime":1621145879842,"results":"265","hashOfConfig":"234"},{"size":4601,"mtime":1621181277849,"results":"266","hashOfConfig":"234"},{"size":4573,"mtime":1623249268883,"results":"267","hashOfConfig":"234"},{"size":3276,"mtime":1624400993741,"results":"268","hashOfConfig":"234"},{"size":4606,"mtime":1623134606132,"results":"269","hashOfConfig":"234"},{"size":17851,"mtime":1624971217369,"results":"270","hashOfConfig":"234"},{"size":13044,"mtime":1626096678693,"results":"271","hashOfConfig":"234"},{"size":2737,"mtime":1624972733683,"results":"272","hashOfConfig":"234"},{"size":1313,"mtime":1626091132301,"results":"273","hashOfConfig":"234"},{"size":5055,"mtime":1625999507184,"results":"274","hashOfConfig":"234"},{"size":4597,"mtime":1624790011076,"results":"275","hashOfConfig":"234"},{"size":6866,"mtime":1625219424166,"results":"276","hashOfConfig":"234"},{"size":4864,"mtime":1626073450853,"results":"277","hashOfConfig":"234"},{"size":7628,"mtime":1623592662975,"results":"278","hashOfConfig":"234"},{"size":7503,"mtime":1626092225912,"results":"279","hashOfConfig":"234"},{"size":5686,"mtime":1625579590643,"results":"280","hashOfConfig":"234"},{"size":27788,"mtime":1626157381730,"results":"281","hashOfConfig":"234"},{"size":10907,"mtime":1626000038949,"results":"282","hashOfConfig":"234"},{"size":7227,"mtime":1625579631462,"results":"283","hashOfConfig":"234"},{"size":9338,"mtime":1626001714989,"results":"284","hashOfConfig":"234"},{"size":10013,"mtime":1622815489342,"results":"285","hashOfConfig":"234"},{"size":6177,"mtime":1624344925126,"results":"286","hashOfConfig":"234"},{"size":9284,"mtime":1626055695769,"results":"287","hashOfConfig":"234"},{"size":22412,"mtime":1623252262025,"results":"288","hashOfConfig":"234"},{"size":16034,"mtime":1626143816838,"results":"289","hashOfConfig":"234"},{"size":4066,"mtime":1623817300639,"results":"290","hashOfConfig":"234"},{"size":14857,"mtime":1626017310707,"results":"291","hashOfConfig":"234"},{"size":15204,"mtime":1624807686534,"results":"292","hashOfConfig":"234"},{"size":3801,"mtime":1625837112963,"results":"293","hashOfConfig":"234"},{"size":1764,"mtime":1625668077798,"results":"294","hashOfConfig":"234"},{"size":6774,"mtime":1623164342378,"results":"295","hashOfConfig":"234"},{"size":3941,"mtime":1625155269751,"results":"296","hashOfConfig":"234"},{"size":6877,"mtime":1623164315199,"results":"297","hashOfConfig":"234"},{"size":3277,"mtime":1623164294695,"results":"298","hashOfConfig":"234"},{"size":2609,"mtime":1623164278370,"results":"299","hashOfConfig":"234"},{"size":16274,"mtime":1626059523666,"results":"300","hashOfConfig":"234"},{"size":1573,"mtime":1623196100107,"results":"301","hashOfConfig":"234"},{"size":1497,"mtime":1624329676645,"results":"302","hashOfConfig":"234"},{"size":1355,"mtime":1626054924041,"results":"303","hashOfConfig":"234"},{"size":7232,"mtime":1623239293640,"results":"304","hashOfConfig":"234"},{"size":4467,"mtime":1626078234932,"results":"305","hashOfConfig":"234"},{"size":3999,"mtime":1625832346711,"results":"306","hashOfConfig":"234"},{"size":3939,"mtime":1625838604746,"results":"307","hashOfConfig":"234"},{"size":28732,"mtime":1624808084032,"results":"308","hashOfConfig":"234"},{"size":1771,"mtime":1622901266272,"results":"309","hashOfConfig":"234"},{"size":1748,"mtime":1622901284562,"results":"310","hashOfConfig":"234"},{"size":1683,"mtime":1622901272783,"results":"311","hashOfConfig":"234"},{"size":1553,"mtime":1622901288533,"results":"312","hashOfConfig":"234"},{"size":1553,"mtime":1622901780920,"results":"313","hashOfConfig":"234"},{"size":1489,"mtime":1622456334194,"results":"314","hashOfConfig":"234"},{"size":27882,"mtime":1626076626268,"results":"315","hashOfConfig":"234"},{"size":3116,"mtime":1620536608782,"results":"316","hashOfConfig":"234"},{"size":244,"mtime":1621591390071,"results":"317","hashOfConfig":"234"},{"size":3192,"mtime":1621251598936,"results":"318","hashOfConfig":"234"},{"size":3432,"mtime":1624282741154,"results":"319","hashOfConfig":"234"},{"size":3129,"mtime":1620537502474,"results":"320","hashOfConfig":"234"},{"size":3421,"mtime":1621866966445,"results":"321","hashOfConfig":"234"},{"size":3189,"mtime":1621005948632,"results":"322","hashOfConfig":"234"},{"size":3214,"mtime":1621176394282,"results":"323","hashOfConfig":"234"},{"size":3206,"mtime":1621344267720,"results":"324","hashOfConfig":"234"},{"size":3249,"mtime":1623944946294,"results":"325","hashOfConfig":"234"},{"size":3181,"mtime":1621167963865,"results":"326","hashOfConfig":"234"},{"size":3394,"mtime":1624718959496,"results":"327","hashOfConfig":"234"},{"size":3683,"mtime":1623172638593,"results":"328","hashOfConfig":"234"},{"size":3315,"mtime":1623942108178,"results":"329","hashOfConfig":"234"},{"size":3290,"mtime":1623203016487,"results":"330","hashOfConfig":"234"},{"size":3219,"mtime":1621342487299,"results":"331","hashOfConfig":"234"},{"size":225,"mtime":1621779292940,"results":"332","hashOfConfig":"234"},{"size":3371,"mtime":1624808433772,"results":"333","hashOfConfig":"234"},{"size":36285,"mtime":1626096448164,"results":"334","hashOfConfig":"234"},{"size":5537,"mtime":1623936228615,"results":"335","hashOfConfig":"234"},{"size":5867,"mtime":1623937238693,"results":"336","hashOfConfig":"234"},{"size":5448,"mtime":1623936032775,"results":"337","hashOfConfig":"234"},{"size":2024,"mtime":1623052037787,"results":"338","hashOfConfig":"234"},{"size":2277,"mtime":1625721818422,"results":"339","hashOfConfig":"234"},{"size":2343,"mtime":1622902246334,"results":"340","hashOfConfig":"234"},{"size":4085,"mtime":1622901629555,"results":"341","hashOfConfig":"234"},{"size":8668,"mtime":1626095877460,"results":"342","hashOfConfig":"234"},{"size":2844,"mtime":1624970722378,"results":"343","hashOfConfig":"234"},{"size":7677,"mtime":1626001696068,"results":"344","hashOfConfig":"234"},{"size":8100,"mtime":1626000105758,"results":"345","hashOfConfig":"234"},{"size":6136,"mtime":1625841101646,"results":"346","hashOfConfig":"234"},{"size":5550,"mtime":1625803435509,"results":"347","hashOfConfig":"234"},{"size":1866,"mtime":1623210071067,"results":"348","hashOfConfig":"234"},{"size":8911,"mtime":1626077626915,"results":"349","hashOfConfig":"234"},{"size":469,"mtime":1622814974105,"results":"350","hashOfConfig":"234"},{"size":9833,"mtime":1626090942378,"results":"351","hashOfConfig":"234"},{"size":10216,"mtime":1626076085328,"results":"352","hashOfConfig":"234"},{"size":9582,"mtime":1626080132175,"results":"353","hashOfConfig":"234"},{"size":2709,"mtime":1625801835831,"results":"354","hashOfConfig":"234"},{"size":2474,"mtime":1625801843605,"results":"355","hashOfConfig":"234"},{"size":2414,"mtime":1625802360011,"results":"356","hashOfConfig":"234"},{"size":2440,"mtime":1625801824728,"results":"357","hashOfConfig":"234"},{"size":3198,"mtime":1621867179865,"results":"358","hashOfConfig":"234"},{"size":8650,"mtime":1624366691874,"results":"359","hashOfConfig":"234"},{"size":14524,"mtime":1624364976073,"results":"360","hashOfConfig":"234"},{"size":3733,"mtime":1624751671349,"results":"361","hashOfConfig":"234"},{"size":2872,"mtime":1623209709680,"results":"362","hashOfConfig":"234"},{"size":3660,"mtime":1623235559979,"results":"363","hashOfConfig":"234"},{"size":8406,"mtime":1624366545074,"results":"364","hashOfConfig":"234"},{"size":8147,"mtime":1625011971008,"results":"365","hashOfConfig":"234"},{"size":2264,"mtime":1624866355298,"results":"366","hashOfConfig":"234"},{"size":3018,"mtime":1623915372850,"results":"367","hashOfConfig":"234"},{"size":7118,"mtime":1624979006858,"results":"368","hashOfConfig":"234"},{"size":3515,"mtime":1626178311119,"results":"369","hashOfConfig":"234"},{"size":2866,"mtime":1626055650185,"results":"370","hashOfConfig":"234"},{"size":4162,"mtime":1624344761683,"results":"371","hashOfConfig":"234"},{"size":3245,"mtime":1626055600419,"results":"372","hashOfConfig":"234"},{"size":3060,"mtime":1624986119782,"results":"373","hashOfConfig":"234"},{"size":2412,"mtime":1626076202772,"results":"374","hashOfConfig":"234"},{"size":3979,"mtime":1626178299628,"results":"375","hashOfConfig":"234"},{"size":27042,"mtime":1626079334362,"results":"376","hashOfConfig":"234"},{"size":511,"mtime":1626080347503,"results":"377","hashOfConfig":"234"},{"size":1033,"mtime":1626009554972,"results":"378","hashOfConfig":"234"},{"size":501,"mtime":1625800533121,"results":"379","hashOfConfig":"234"},{"size":547,"mtime":1625758222838,"results":"380","hashOfConfig":"234"},{"size":476,"mtime":1625801885836,"results":"381","hashOfConfig":"234"},{"size":527,"mtime":1625758258329,"results":"382","hashOfConfig":"234"},{"size":646,"mtime":1625731356683,"results":"383","hashOfConfig":"234"},{"size":789,"mtime":1625802984510,"results":"384","hashOfConfig":"234"},{"size":746,"mtime":1625800910412,"results":"385","hashOfConfig":"234"},{"size":742,"mtime":1625800887575,"results":"386","hashOfConfig":"234"},{"size":646,"mtime":1625798737997,"results":"387","hashOfConfig":"234"},{"size":880,"mtime":1626096922916,"results":"388","hashOfConfig":"234"},{"size":782,"mtime":1625800831757,"results":"389","hashOfConfig":"234"},{"size":739,"mtime":1625800774674,"results":"390","hashOfConfig":"234"},{"size":759,"mtime":1625800821242,"results":"391","hashOfConfig":"234"},{"size":796,"mtime":1625802990123,"results":"392","hashOfConfig":"234"},{"size":753,"mtime":1625801448372,"results":"393","hashOfConfig":"234"},{"size":743,"mtime":1625801372351,"results":"394","hashOfConfig":"234"},{"size":782,"mtime":1625802056055,"results":"395","hashOfConfig":"234"},{"size":739,"mtime":1625801996227,"results":"396","hashOfConfig":"234"},{"size":729,"mtime":1625801941854,"results":"397","hashOfConfig":"234"},{"size":734,"mtime":1625802828834,"results":"398","hashOfConfig":"234"},{"size":724,"mtime":1625802698233,"results":"399","hashOfConfig":"234"},{"size":785,"mtime":1625802942098,"results":"400","hashOfConfig":"234"},{"size":916,"mtime":1625832650282,"results":"401","hashOfConfig":"234"},{"size":141,"mtime":1625820000617,"results":"402","hashOfConfig":"234"},{"size":757,"mtime":1625831672038,"results":"403","hashOfConfig":"234"},{"size":704,"mtime":1625831924179,"results":"404","hashOfConfig":"234"},{"size":714,"mtime":1625831978364,"results":"405","hashOfConfig":"234"},{"size":965,"mtime":1625833417248,"results":"406","hashOfConfig":"234"},{"size":784,"mtime":1625832816616,"results":"407","hashOfConfig":"234"},{"size":731,"mtime":1625832717517,"results":"408","hashOfConfig":"234"},{"size":741,"mtime":1625832767335,"results":"409","hashOfConfig":"234"},{"size":149,"mtime":1625833451625,"results":"410","hashOfConfig":"234"},{"size":978,"mtime":1625833701287,"results":"411","hashOfConfig":"234"},{"size":151,"mtime":1625833929340,"results":"412","hashOfConfig":"234"},{"size":789,"mtime":1626011673317,"results":"413","hashOfConfig":"234"},{"size":738,"mtime":1625833769320,"results":"414","hashOfConfig":"234"},{"size":748,"mtime":1625833836425,"results":"415","hashOfConfig":"234"},{"size":952,"mtime":1625837870028,"results":"416","hashOfConfig":"234"},{"size":224,"mtime":1626059101507,"results":"417","hashOfConfig":"234"},{"size":777,"mtime":1625837935113,"results":"418","hashOfConfig":"234"},{"size":724,"mtime":1625838060126,"results":"419","hashOfConfig":"234"},{"size":734,"mtime":1625837998174,"results":"420","hashOfConfig":"234"},{"size":994,"mtime":1625883213529,"results":"421","hashOfConfig":"234"},{"size":703,"mtime":1625839094668,"results":"422","hashOfConfig":"234"},{"size":713,"mtime":1625839833770,"results":"423","hashOfConfig":"234"},{"size":756,"mtime":1626001071865,"results":"424","hashOfConfig":"234"},{"size":218,"mtime":1625883318102,"results":"425","hashOfConfig":"234"},{"size":453,"mtime":1625889377868,"results":"426","hashOfConfig":"234"},{"size":1494,"mtime":1625997250990,"results":"427","hashOfConfig":"234"},{"size":717,"mtime":1626000835564,"results":"428","hashOfConfig":"234"},{"size":727,"mtime":1626000997584,"results":"429","hashOfConfig":"234"},{"size":770,"mtime":1626011567502,"results":"430","hashOfConfig":"234"},{"size":1018,"mtime":1626000648360,"results":"431","hashOfConfig":"234"},{"size":222,"mtime":1626000682432,"results":"432","hashOfConfig":"234"},{"size":5033,"mtime":1626003907193,"results":"433","hashOfConfig":"234"},{"size":5641,"mtime":1626011446734,"results":"434","hashOfConfig":"234"},{"size":224,"mtime":1626004799326,"results":"435","hashOfConfig":"234"},{"size":682,"mtime":1626010344577,"results":"436","hashOfConfig":"234"},{"size":1066,"mtime":1626012062876,"results":"437","hashOfConfig":"234"},{"size":228,"mtime":1626012237438,"results":"438","hashOfConfig":"234"},{"size":750,"mtime":1626012044446,"results":"439","hashOfConfig":"234"},{"size":803,"mtime":1626012208074,"results":"440","hashOfConfig":"234"},{"size":760,"mtime":1626012143637,"results":"441","hashOfConfig":"234"},{"size":1113,"mtime":1626013390204,"results":"442","hashOfConfig":"234"},{"size":238,"mtime":1626013581220,"results":"443","hashOfConfig":"234"},{"size":790,"mtime":1626016657200,"results":"444","hashOfConfig":"234"},{"size":831,"mtime":1626013559004,"results":"445","hashOfConfig":"234"},{"size":788,"mtime":1626013514586,"results":"446","hashOfConfig":"234"},{"size":5483,"mtime":1626150312385,"results":"447","hashOfConfig":"234"},{"size":1020,"mtime":1626018787323,"results":"448","hashOfConfig":"234"},{"size":222,"mtime":1626014880305,"results":"449","hashOfConfig":"234"},{"size":3203,"mtime":1626019204916,"results":"450","hashOfConfig":"234"},{"size":3382,"mtime":1626073403818,"results":"451","hashOfConfig":"234"},{"size":2279,"mtime":1626074862255,"results":"452","hashOfConfig":"234"},{"size":3329,"mtime":1626079225144,"results":"453","hashOfConfig":"234"},{"size":2512,"mtime":1626078293376,"results":"454","hashOfConfig":"234"},{"size":2423,"mtime":1626077658951,"results":"455","hashOfConfig":"234"},{"size":2480,"mtime":1626080030750,"results":"456","hashOfConfig":"234"},{"size":2243,"mtime":1626080263516,"results":"457","hashOfConfig":"234"},{"size":998,"mtime":1626013831261,"results":"458","hashOfConfig":"234"},{"size":218,"mtime":1626014179037,"results":"459","hashOfConfig":"234"},{"size":3259,"mtime":1626091164763,"results":"460","hashOfConfig":"234"},{"size":2551,"mtime":1626093062751,"results":"461","hashOfConfig":"234"},{"size":5865,"mtime":1626143646562,"results":"462","hashOfConfig":"234"},{"size":443,"mtime":1626102558368,"results":"463","hashOfConfig":"234"},{"size":164,"mtime":1626157239314,"results":"464","hashOfConfig":"234"},{"size":6980,"mtime":1626163116142,"results":"465","hashOfConfig":"234"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"469"},"1q6w3dt",{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"469"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"469"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"469"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"469"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"469"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"469"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"469"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"469"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"469"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"469"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"469"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"469"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"469"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"469"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"469"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"469"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"469"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"469"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"469"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"469"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"469"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"469"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"469"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"469"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"469"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"469"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"469"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"469"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"469"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"469"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"469"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"469"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"469"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"469"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"469"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"469"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"469"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"469"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"469"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"469"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"469"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"469"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"469"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"469"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"469"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"469"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"469"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"469"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"469"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"469"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"469"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"645"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"469"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"469"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"469"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"469"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"469"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"469"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"469"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"469"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"469"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"469"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"469"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"469"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"469"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"469"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"469"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"469"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"469"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"469"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724","usedDeprecatedRules":"469"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"469"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"469"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"469"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"469"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"469"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"748"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"748"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"748"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"469"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"469"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"469"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"469"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"469"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"469"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"469"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"469"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"469"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"469"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"469"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"469"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"469"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"469"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"469"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"469"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"469"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"469"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"469"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830","usedDeprecatedRules":"469"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"834"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"469"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"469"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"469"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"469"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"469"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"469"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"469"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"469"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"879"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"879"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"469"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919","usedDeprecatedRules":"469"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"469"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"469"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984","usedDeprecatedRules":"469"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"987","usedDeprecatedRules":"469"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"992","usedDeprecatedRules":"469"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"469"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1016","usedDeprecatedRules":"469"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1025","usedDeprecatedRules":"469"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"469"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031","usedDeprecatedRules":"469"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1034","usedDeprecatedRules":"469"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1037","usedDeprecatedRules":"469"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1040","usedDeprecatedRules":"469"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1043","usedDeprecatedRules":"469"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"469"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1053","usedDeprecatedRules":"469"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1056","usedDeprecatedRules":"469"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1063","usedDeprecatedRules":"469"},"D:\\react-myprojects\\hrms-airtable-july2\\src\\index.js",["1064"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { Loading } from \"./components/app/Loading\"\nimport { RecoilRoot } from \"recoil\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { EmployeesProvider } from \"./context/employees_context\";\nimport { LeavesProvider } from \"./context/leaves_context\";\nimport { ExpensesProvider } from \"./context/expenses_context\";\nimport { PayslipsProvider } from \"./context/payslips_context\";\nimport { DailyAllowancesProvider } from \"./context/dailyallowances_context\";\nimport { TablesProvider } from \"./context/tables_context\";\nimport { TrainingsProvider } from \"./context/trainings_context\";\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"https://localhost:4000/graphql\",\n    credentials: \"include\",\n  }),\n  cache: new InMemoryCache(),\n});\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <RecoilRoot>\n        <ApolloProvider client={client}>\n          <EmployeesProvider>\n            <PayslipsProvider>\n              <LeavesProvider>\n                <ExpensesProvider>\n                  <DailyAllowancesProvider>\n                    <TrainingsProvider>\n                      <TablesProvider>\n                        {/* <Loading /> */}\n                        {/* <DevTools /> */}\n                        <App />\n                      </TablesProvider>\n                    </TrainingsProvider>\n                  </DailyAllowancesProvider>\n                </ExpensesProvider>\n              </LeavesProvider>\n            </PayslipsProvider>\n          </EmployeesProvider>\n        </ApolloProvider>\n      </RecoilRoot>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["1065","1066"],"D:\\react-myprojects\\hrms-airtable-july2\\src\\reportWebVitals.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\App.js",["1067","1068","1069","1070","1071","1072"],"import React, { useState } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { theme } from \"./components/theme\";\nimport {\n  orange,\n  lightBlue,\n  deepPurple,\n  deepOrange,\n} from \"@material-ui/core/colors\";\nimport DashboardMain from \"./components/DashboardMain\";\nimport Main from \"./components/Main\";\n\nconst App = () => {\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n      },\n    },\n  });\n  const lightTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: \"#4dabf5\",\n      },\n      secondary: {\n        main: \"#f73378\",\n      },\n    },\n  });\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  return (\n    <ChakraProvider theme={theme}>\n      {/* <ThemeProvider theme={lightTheme}> */}\n      <CssBaseline />\n      <div>\n        <React.Suspense fallback={<h1>Loading profile...</h1>}>\n          {/* <DashboardMain /> */}\n          <Main />\n        </React.Suspense>\n      </div>\n      {/* <Switch checked={darkState} onChange={handleThemeChange} /> */}\n\n      {/* </ThemeProvider> */}\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\employees_context.js",["1073","1074","1075","1076","1077","1078","1079","1080"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/employees_reducer\";\r\nimport { employees_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITEMPLOYEEID,\r\n  SET_ISEDITING_ON,\r\n  SET_ISEDITING_OFF,\r\n  SET_SINGLEEMPLOYEE,\r\n  GET_EMPLOYEES_BEGIN,\r\n  GET_EMPLOYEES_SUCCESS,\r\n  GET_EMPLOYEES_ERROR,\r\n  GET_SINGLE_EMPLOYEE_BEGIN,\r\n  GET_SINGLE_EMPLOYEE_SUCCESS,\r\n  GET_SINGLE_EMPLOYEE_ERROR,\r\n  ADD_EMPLOYEE_BEGIN,\r\n  ADD_EMPLOYEE_SUCCESS,\r\n  ADD_EMPLOYEE_ERROR,\r\n  DELETE_EMPLOYEE_BEGIN,\r\n  DELETE_EMPLOYEE_SUCCESS,\r\n  DELETE_EMPLOYEE_ERROR,\r\n  UPDATE_EMPLOYEE_BEGIN,\r\n  UPDATE_EMPLOYEE_SUCCESS,\r\n  UPDATE_EMPLOYEE_ERROR,\r\n  RESET_SINGLE_EMPLOYEE,\r\n  RESET_EMPLOYEES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isEditing: false,\r\n  alert: { show: false, msg: \"\", type: \"\" },\r\n  editEmployeeID: null,\r\n  employees_loading: false,\r\n  employees_error: false,\r\n  employees: [],\r\n  single_employee_loading: false,\r\n  single_employee_error: false,\r\n  single_employee: {},\r\n  delete_employee_loading: false,\r\n  delete_employee_error: false,\r\n  update_employee_loading: false,\r\n  update_employee_error: false,\r\n  add_employee_loading: false,\r\n  add_employee_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst EmployeesContext = React.createContext();\r\n\r\nexport const EmployeesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadEmployees = async () => {\r\n    dispatch({ type: GET_EMPLOYEES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(employees_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const employees = await res.json();\r\n      dispatch({ type: GET_EMPLOYEES_SUCCESS, payload: employees });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EMPLOYEES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsEditingOn = () => {\r\n    dispatch({ type: SET_ISEDITING_ON });\r\n  };\r\n\r\n  const setIsEditingOff = () => {\r\n    dispatch({ type: SET_ISEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleEmployee = () => {\r\n    dispatch({ type: RESET_SINGLE_EMPLOYEE });\r\n  };\r\n\r\n  const resetEmployees = () => {\r\n    dispatch({ type: RESET_EMPLOYEES });\r\n  };\r\n\r\n  const setEditEmployeeID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITEMPLOYEEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleEmployee = async (id) => {\r\n    dispatch({ type: GET_SINGLE_EMPLOYEE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${employees_url}?id=${id}`);\r\n      const singleemployee = data;\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: singleemployee });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleEmployeeEmail = async (fv) => {\r\n    dispatch({ type: GET_SINGLE_EMPLOYEE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${employees_url}?fv=${fv}`);\r\n      const singleemployee = data;\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: singleemployee });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEmployee = async (data) => {\r\n    const { id, name, ic_no, email, age, gender } = data;\r\n    //\r\n    dispatch({ type: ADD_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EMPLOYEE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEmployee = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EMPLOYEE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEmployee = async (id) => {\r\n    dispatch({ type: DELETE_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EMPLOYEE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <EmployeesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadEmployees,\r\n        addEmployee,\r\n        updateEmployee,\r\n        deleteEmployee,\r\n        getSingleEmployee,\r\n        getSingleEmployeeEmail,\r\n        setEditEmployeeID,\r\n        setIsEditingOn,\r\n        setIsEditingOff,\r\n        resetSingleEmployee,\r\n        resetEmployees,\r\n      }}\r\n    >\r\n      {children}\r\n    </EmployeesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEmployeesContext = () => {\r\n  return useContext(EmployeesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\expenses_context.js",["1081","1082","1083","1084","1085","1086","1087","1088","1089"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/expenses_reducer\";\r\nimport { expenses_url } from \"../utils/constants\";\r\nimport { unpaidexpenses_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITEXPENSEID,\r\n  SET_ISEXPENSEEDITING_ON,\r\n  SET_ISEXPENSEEDITING_OFF,\r\n  SET_SINGLEEXPENSE,\r\n  GET_EXPENSES_BEGIN,\r\n  GET_EXPENSES_SUCCESS,\r\n  GET_EXPENSES_ERROR,\r\n  GET_UNPAIDEXPENSES_BEGIN,\r\n  GET_UNPAIDEXPENSES_SUCCESS,\r\n  GET_UNPAIDEXPENSES_ERROR,\r\n  GET_PERIODEXPENSES_BEGIN,\r\n  GET_PERIODEXPENSES_SUCCESS,\r\n  GET_PERIODEXPENSES_ERROR,\r\n  GET_SINGLE_EXPENSE_BEGIN,\r\n  GET_SINGLE_EXPENSE_SUCCESS,\r\n  GET_SINGLE_EXPENSE_ERROR,\r\n  ADD_EXPENSE_BEGIN,\r\n  ADD_EXPENSE_SUCCESS,\r\n  ADD_EXPENSE_ERROR,\r\n  DELETE_EXPENSE_BEGIN,\r\n  DELETE_EXPENSE_SUCCESS,\r\n  DELETE_EXPENSE_ERROR,\r\n  UPDATE_EXPENSE_BEGIN,\r\n  UPDATE_EXPENSE_SUCCESS,\r\n  UPDATE_EXPENSE_ERROR,\r\n  RESET_SINGLE_EXPENSE,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isExpenseEditing: false,\r\n  alertExpense: { show: false, msg: \"\", type: \"\" },\r\n  editExpenseID: null,\r\n  expenses_loading: false,\r\n  expenses_error: false,\r\n  expenses: [],\r\n  single_expense_loading: false,\r\n  single_expense_error: false,\r\n  single_expense: {},\r\n  delete_expense_loading: false,\r\n  delete_expense_error: false,\r\n  update_expense_loading: false,\r\n  update_expense_error: false,\r\n  add_expense_loading: false,\r\n  add_expense_error: false,\r\n  unpaid_expense_loading: false,\r\n  unpaid_expense_error: false,\r\n  unpaidexpenses: [],\r\n  period_expense_loading: false,\r\n  period_expense_error: false,\r\n  periodexpenses: [],\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst ExpensesContext = React.createContext();\r\n\r\nexport const ExpensesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadExpenses = async () => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(expenses_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const expenses = await res.json();\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingExpenses = async (fi) => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      //const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const { data } = await axios.get(`${expenses_url}?fi=${fi}`);\r\n      const expenses = data;\r\n\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpExpenses = async (fv) => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${expenses_url}?fv=${fv}`);\r\n      const expenses = data;\r\n\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadUnpaidExpenses = async () => {\r\n    dispatch({ type: GET_UNPAIDEXPENSES_BEGIN });\r\n    try {\r\n      // const { data } = await axios.get(`${unpaidexpenses_url}`);\r\n      // const unpaidexpenses = data;\r\n      const res = await fetch(unpaidexpenses_url);\r\n      const unpaidexpenses = await res.json();\r\n      dispatch({ type: GET_UNPAIDEXPENSES_SUCCESS, payload: unpaidexpenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_UNPAIDEXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPeriodExpenses = async () => {\r\n    dispatch({ type: GET_PERIODEXPENSES_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${unpaidexpenses_url}`);\r\n      const periodexpenses = data;\r\n\r\n      dispatch({ type: GET_PERIODEXPENSES_SUCCESS, payload: periodexpenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PERIODEXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsExpenseEditingOn = () => {\r\n    dispatch({ type: SET_ISEXPENSEEDITING_ON });\r\n  };\r\n\r\n  const setIsExpenseEditingOff = () => {\r\n    dispatch({ type: SET_ISEXPENSEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleExpense = () => {\r\n    dispatch({ type: RESET_SINGLE_EXPENSE });\r\n  };\r\n\r\n  const setEditExpenseID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITEXPENSEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleExpense = async (id) => {\r\n    dispatch({ type: GET_SINGLE_EXPENSE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${expenses_url}?id=${id}`);\r\n      const singleexpense = data;\r\n      dispatch({ type: GET_SINGLE_EXPENSE_SUCCESS, payload: singleexpense });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExpense = async (data) => {\r\n    const { id, name, date, purchased_date, remark, amount, status } = data;\r\n    //\r\n    dispatch({ type: ADD_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPENSE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExpense = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPENSE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExpense = async (id) => {\r\n    dispatch({ type: DELETE_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPENSE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <ExpensesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadExpenses,\r\n        loadPendingExpenses,\r\n        loadEmpExpenses,\r\n        loadUnpaidExpenses,\r\n        loadPeriodExpenses,\r\n        addExpense,\r\n        updateExpense,\r\n        deleteExpense,\r\n        getSingleExpense,\r\n        setEditExpenseID,\r\n        setIsExpenseEditingOn,\r\n        setIsExpenseEditingOff,\r\n        resetSingleExpense,\r\n      }}\r\n    >\r\n      {children}\r\n    </ExpensesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useExpensesContext = () => {\r\n  return useContext(ExpensesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\leaves_context.js",["1090","1091","1092","1093","1094","1095","1096","1097","1098","1099"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/leaves_reducer\";\r\nimport { leaves_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITLEAVEID,\r\n  SET_ISLEAVEEDITING_ON,\r\n  SET_ISLEAVEEDITING_OFF,\r\n  SET_SINGLELEAVE,\r\n  GET_LEAVES_BEGIN,\r\n  GET_LEAVES_SUCCESS,\r\n  GET_LEAVES_ERROR,\r\n  GET_SINGLE_LEAVE_BEGIN,\r\n  GET_SINGLE_LEAVE_SUCCESS,\r\n  GET_SINGLE_LEAVE_ERROR,\r\n  GET_SINGLEBATCH_LEAVE_BEGIN,\r\n  GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n  GET_SINGLEBATCH_LEAVE_ERROR,\r\n  ADD_LEAVE_BEGIN,\r\n  ADD_LEAVE_SUCCESS,\r\n  ADD_LEAVE_ERROR,\r\n  DELETE_LEAVE_BEGIN,\r\n  DELETE_LEAVE_SUCCESS,\r\n  DELETE_LEAVE_ERROR,\r\n  UPDATE_LEAVE_BEGIN,\r\n  UPDATE_LEAVE_SUCCESS,\r\n  UPDATE_LEAVE_ERROR,\r\n  RESET_SINGLE_LEAVE,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isLeaveEditing: false,\r\n  alertleave: { show: false, msg: \"\", type: \"\" },\r\n  editLeaveID: null,\r\n  leaves_loading: false,\r\n  leaves_error: false,\r\n  leaves: [],\r\n  single_leave_loading: false,\r\n  single_leave_error: false,\r\n  single_leave: {},\r\n  singlebatch_leave_loading: false,\r\n  singlebatch_leave_error: false,\r\n  singlebatch_leave: {},\r\n  delete_leave_loading: false,\r\n  delete_leave_error: false,\r\n  update_leave_loading: false,\r\n  update_leave_error: false,\r\n  add_leave_loading: false,\r\n  add_leave_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst LeavesContext = React.createContext();\r\n\r\nexport const LeavesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadLeaves = async () => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const leaves = await res.json();\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingLeaves = async (fi) => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      //const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const { data } = await axios.get(`${leaves_url}?fi=${fi}`);\r\n      const leaves = data;\r\n\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpLeaves = async (fv) => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${leaves_url}?fv=${fv}`);\r\n      const leaves = data;\r\n\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsLeaveEditingOn = () => {\r\n    dispatch({ type: SET_ISLEAVEEDITING_ON });\r\n  };\r\n\r\n  const setIsLeaveEditingOff = () => {\r\n    dispatch({ type: SET_ISLEAVEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleLeave = () => {\r\n    dispatch({ type: RESET_SINGLE_LEAVE });\r\n  };\r\n\r\n  const setEditLeaveID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITLEAVEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleLeave = async (id) => {\r\n    dispatch({ type: GET_SINGLE_LEAVE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${leaves_url}?id=${id}`);\r\n      const singleleave = data;\r\n      dispatch({ type: GET_SINGLE_LEAVE_SUCCESS, payload: singleleave });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchLeave = async (empid) => {\r\n    dispatch({ type: GET_SINGLEBATCH_LEAVE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${leaves_url}?fv=${empid}`);\r\n      const singlebatchleave = data;\r\n\r\n      // const res = await fetch(`${leaves_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      // const singlebatchleave = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n        payload: singlebatchleave,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addLeave = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_LEAVE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateLeave = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_LEAVE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteLeave = async (id) => {\r\n    dispatch({ type: DELETE_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_LEAVE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_LEAVE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <LeavesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadLeaves,\r\n        loadPendingLeaves,\r\n        loadEmpLeaves,\r\n        addLeave,\r\n        updateLeave,\r\n        deleteLeave,\r\n        getSingleLeave,\r\n        getSingleBatchLeave,\r\n        setEditLeaveID,\r\n        setIsLeaveEditingOn,\r\n        setIsLeaveEditingOff,\r\n        resetSingleLeave,\r\n      }}\r\n    >\r\n      {children}\r\n    </LeavesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLeavesContext = () => {\r\n  return useContext(LeavesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\dailyallowances_context.js",["1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/dailyallowances_reducer\";\r\nimport {\r\n  dailyallowances_url,\r\n  dailyallowsdetls_url,\r\n  unpaiddailyallows_url,\r\n  pendingdailyallowsdetls_url,\r\n} from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITDAILYALLOWANCEID,\r\n  SET_ISDAILYALLOWANCEEDITING_ON,\r\n  SET_ISDAILYALLOWANCEEDITING_OFF,\r\n  SET_DAILYALLOWANCE_PERIOD,\r\n  SET_SINGLEDAILYALLOWANCE,\r\n  LOAD_DAILYALLOWANCES,\r\n  GET_DAILYALLOWANCES_BEGIN,\r\n  GET_DAILYALLOWANCES_SUCCESS,\r\n  GET_DAILYALLOWANCES_ERROR,\r\n  GET_UNPAIDDAILYALLOWS_BEGIN,\r\n  GET_UNPAIDDAILYALLOWS_SUCCESS,\r\n  GET_UNPAIDDAILYALLOWS_ERROR,\r\n  GET_SINGLE_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWANCE_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_ERROR,\r\n  ADD_DAILYALLOWANCE_BEGIN,\r\n  ADD_DAILYALLOWANCE_SUCCESS,\r\n  ADD_DAILYALLOWANCE_ERROR,\r\n  DELETE_DAILYALLOWANCE_BEGIN,\r\n  DELETE_DAILYALLOWANCE_SUCCESS,\r\n  DELETE_DAILYALLOWANCE_ERROR,\r\n  UPDATE_DAILYALLOWANCE_BEGIN,\r\n  UPDATE_DAILYALLOWANCE_SUCCESS,\r\n  UPDATE_DAILYALLOWANCE_ERROR,\r\n  RESET_SINGLE_DAILYALLOWANCE,\r\n  LOAD_DAILYALLOWSDETLS,\r\n  SET_DAILYALLOWSDETL_PERIOD,\r\n  GET_DAILYALLOWSDETLS_BEGIN,\r\n  GET_DAILYALLOWSDETLS_SUCCESS,\r\n  GET_DAILYALLOWSDETLS_ERROR,\r\n  GET_SINGLE_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWSDETL_ERROR,\r\n  GET_PENDING_DAILYALLOWSDETL_BEGIN,\r\n  GET_PENDING_DAILYALLOWSDETL_SUCCESS,\r\n  GET_PENDING_DAILYALLOWSDETL_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR,\r\n  ADD_DAILYALLOWSDETL_BEGIN,\r\n  ADD_DAILYALLOWSDETL_SUCCESS,\r\n  ADD_DAILYALLOWSDETL_ERROR,\r\n  DELETE_DAILYALLOWSDETL_BEGIN,\r\n  DELETE_DAILYALLOWSDETL_SUCCESS,\r\n  DELETE_DAILYALLOWSDETL_ERROR,\r\n  UPDATE_DAILYALLOWSDETL_BEGIN,\r\n  UPDATE_DAILYALLOWSDETL_SUCCESS,\r\n  UPDATE_DAILYALLOWSDETL_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isDailyAllowanceEditing: false,\r\n  alertDailyAllowance: { show: false, msg: \"\", type: \"\" },\r\n  editDailyAllowanceID: null,\r\n  dailyallowances_loading: false,\r\n  dailyallowances_error: false,\r\n  dailyallowances: [],\r\n  single_dailyallowance_loading: false,\r\n  single_dailyallowance_error: false,\r\n  single_dailyallowance: {},\r\n  singlebatch_dailyallowance_loading: false,\r\n  singlebatch_dailyallowance_error: false,\r\n  singlebatch_dailyallowances: {},\r\n  delete_dailyallowance_loading: false,\r\n  delete_dailyallowance_error: false,\r\n  update_dailyallowance_loading: false,\r\n  update_dailyallowance_error: false,\r\n  add_dailyallowance_loading: false,\r\n  add_dailyallowance_error: false,\r\n  dailyallowance_period: \"\",\r\n  isDailyAllowsDetlEditing: false,\r\n  alertDailyAllowsDetl: { show: false, msg: \"\", type: \"\" },\r\n  editDailyAllowsDetlID: null,\r\n  dailyallowsdetls_loading: false,\r\n  dailyallowsdetls_error: false,\r\n  dailyallowsdetls: [],\r\n  single_dailyallowsdetl_loading: false,\r\n  single_dailyallowsdetl_error: false,\r\n  single_dailyallowsdetl: {},\r\n  pending_dailyallowsdetl_loading: false,\r\n  pending_dailyallowsdetl_error: false,\r\n  pending_dailyallowsdetl: {},\r\n  singlebatch_dailyallowsdetl: {},\r\n  singlebatch_dailyallowsdetl_loading: false,\r\n  singlebatch_dailyallowsdetl_error: false,\r\n  delete_dailyallowsdetl_loading: false,\r\n  delete_dailyallowsdetl_error: false,\r\n  update_dailyallowsdetl_loading: false,\r\n  update_dailyallowsdetl_error: false,\r\n  add_dailyallowsdetl_loading: false,\r\n  add_dailyallowsdetl_error: false,\r\n  unpaid_dailyallows_loading: false,\r\n  unpaid_dailyallows_error: false,\r\n  unpaiddailyallows: [],\r\n  dailyallowsdetl_period: \"\",\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst DailyAllowancesContext = React.createContext();\r\n\r\nexport const DailyAllowancesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //daily allowances\r\n  const loadDailyAllowances = async () => {\r\n    dispatch({ type: GET_DAILYALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(dailyallowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const dailyallowances = await res.json();\r\n      dispatch({ type: GET_DAILYALLOWANCES_SUCCESS, payload: dailyallowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  //unpaid daily allowances\r\n  const loadUnpaidDailyAllows = async () => {\r\n    dispatch({ type: GET_UNPAIDDAILYALLOWS_BEGIN });\r\n    try {\r\n      const res = await fetch(unpaiddailyallows_url);\r\n      const dailyallowances = await res.json();\r\n      dispatch({\r\n        type: GET_UNPAIDDAILYALLOWS_SUCCESS,\r\n        payload: dailyallowances,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_UNPAIDDAILYALLOWS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingDailyAllowances = async (fi) => {\r\n    dispatch({ type: GET_DAILYALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const { data } = await axios.get(`${dailyallowances_url}?fi=${fi}`);\r\n      const dailyallowances = data;\r\n      dispatch({ type: GET_DAILYALLOWANCES_SUCCESS, payload: dailyallowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpDailyAllowances = async (em) => {\r\n    dispatch({ type: GET_DAILYALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const { data } = await axios.get(`${dailyallowances_url}?em=${em}`);\r\n      const dailyallowances = data;\r\n      dispatch({ type: GET_DAILYALLOWANCES_SUCCESS, payload: dailyallowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsDailyAllowanceEditingOn = () => {\r\n    dispatch({ type: SET_ISDAILYALLOWANCEEDITING_ON });\r\n  };\r\n\r\n  const setIsDailyAllowanceEditingOff = () => {\r\n    dispatch({ type: SET_ISDAILYALLOWANCEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleDailyAllowance = () => {\r\n    dispatch({ type: RESET_SINGLE_DAILYALLOWANCE });\r\n  };\r\n\r\n  const setDailyAllowancePeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_DAILYALLOWANCE_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const setEditDailyAllowanceID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITDAILYALLOWANCEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleDailyAllowance = async (id) => {\r\n    dispatch({ type: GET_SINGLE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${dailyallowances_url}?id=${id}`);\r\n      const singledailyallowance = data;\r\n      dispatch({\r\n        type: GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n        payload: singledailyallowance,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchDailyAllowance = async (period) => {\r\n    dispatch({ type: GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${dailyallowances_url}?fv=${period}`);\r\n      const singlebatchdailyallowance = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n        payload: singlebatchdailyallowance,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDailyAllowance = async (data) => {\r\n    const {\r\n      id,\r\n      name,\r\n      period,\r\n      location,\r\n      manager_name,\r\n      no_of_days,\r\n      amount,\r\n      status,\r\n    } = data;\r\n    //\r\n    dispatch({ type: ADD_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DAILYALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDailyAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DAILYALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDailyAllowance = async (id) => {\r\n    dispatch({ type: DELETE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DAILYALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadDailyAllowsDetls = async () => {\r\n    dispatch({ type: GET_DAILYALLOWSDETLS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(dailyallowsdetls_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const dailyallowsdetls = await res.json();\r\n      dispatch({\r\n        type: GET_DAILYALLOWSDETLS_SUCCESS,\r\n        payload: dailyallowsdetls,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWSDETLS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpDailyAllowsDetls = async (empid, period) => {\r\n    dispatch({ type: GET_DAILYALLOWSDETLS_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${dailyallowsdetls_url}?fv=${empid}&period=${period}`\r\n      );\r\n      const dailyallowsdetls = data;\r\n\r\n      dispatch({\r\n        type: GET_DAILYALLOWSDETLS_SUCCESS,\r\n        payload: dailyallowsdetls,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWSDETLS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingDailyAllowsDetls = async (empid, period) => {\r\n    dispatch({ type: GET_PENDING_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${pendingdailyallowsdetls_url}`);\r\n      const pending_dailyallowsdetls = data;\r\n\r\n      dispatch({\r\n        type: GET_PENDING_DAILYALLOWSDETL_SUCCESS,\r\n        payload: pending_dailyallowsdetls,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PENDING_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const setDailyAllowsDetlPeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_DAILYALLOWSDETL_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleDailyAllowsDetl = async (id) => {\r\n    dispatch({ type: GET_SINGLE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${dailyallowsdetls_url}?id=${id}`);\r\n      const singledailyallowsdetl = data;\r\n      dispatch({\r\n        type: GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n        payload: singledailyallowsdetl,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchDailyAllowsDetl = async (empid, period) => {\r\n    dispatch({ type: GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${dailyallowsdetls_url}?fv=${empid}&period=${period}`\r\n      );\r\n      const singlebatchdailyallowsdetl = data;\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n        payload: singlebatchdailyallowsdetl,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDailyAllowsDetl = async (data) => {\r\n    const {\r\n      id,\r\n      name,\r\n      period,\r\n      location,\r\n      manager_name,\r\n      no_of_days,\r\n      amount,\r\n      status,\r\n    } = data;\r\n    //\r\n    dispatch({ type: ADD_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DAILYALLOWSDETL_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDailyAllowsDetl = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DAILYALLOWSDETL_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDailyAllowsDetl = async (id) => {\r\n    dispatch({ type: DELETE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DAILYALLOWSDETL_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DailyAllowancesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadDailyAllowances,\r\n        loadPendingDailyAllowances,\r\n        loadEmpDailyAllowances,\r\n        loadUnpaidDailyAllows,\r\n        addDailyAllowance,\r\n        updateDailyAllowance,\r\n        deleteDailyAllowance,\r\n        getSingleDailyAllowance,\r\n        getSingleBatchDailyAllowance,\r\n        setEditDailyAllowanceID,\r\n        setIsDailyAllowanceEditingOn,\r\n        setIsDailyAllowanceEditingOff,\r\n        setDailyAllowancePeriod,\r\n        resetSingleDailyAllowance,\r\n\r\n        loadDailyAllowsDetls,\r\n        loadEmpDailyAllowsDetls,\r\n        loadPendingDailyAllowsDetls,\r\n        addDailyAllowsDetl,\r\n        updateDailyAllowsDetl,\r\n        deleteDailyAllowsDetl,\r\n        getSingleDailyAllowsDetl,\r\n        getSingleBatchDailyAllowsDetl,\r\n        setDailyAllowsDetlPeriod,\r\n        setDailyAllowsDetlPeriod,\r\n      }}\r\n    >\r\n      {children}\r\n    </DailyAllowancesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDailyAllowancesContext = () => {\r\n  return useContext(DailyAllowancesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\payslips_context.js",["1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/payslips_reducer\";\r\nimport { payslips_url } from \"../utils/constants\";\r\nimport { payslipitems_url } from \"../utils/constants\";\r\nimport { payrun_url } from \"../utils/constants\";\r\nimport { payslipearnings_url } from \"../utils/constants\";\r\nimport { payslipdeductions_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITPAYSLIPID,\r\n  SET_PAYSLIPS_DATA,\r\n  RESET_PAYSLIPS_DATA,\r\n  UPDATE_PAYSLIPS_DATA,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_PAYSLIP_PERIOD,\r\n  SET_PAYSLIP_ENDMONTHDATE,\r\n  SET_SINGLEPAYSLIP,\r\n  SET_PAYSLIPEARNING_AMOUNT,\r\n  SET_PAYSLIPDEDUCTION_AMOUNT,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_PAYSLIPITEMS_BEGIN,\r\n  GET_PAYSLIPITEMS_SUCCESS,\r\n  GET_PAYSLIPITEMS_ERROR,\r\n  ADD_PAYSLIPITEM_BEGIN,\r\n  ADD_PAYSLIPITEM_SUCCESS,\r\n  ADD_PAYSLIPITEM_ERROR,\r\n  DELETE_PAYSLIPITEM_BEGIN,\r\n  DELETE_PAYSLIPITEM_SUCCESS,\r\n  DELETE_PAYSLIPITEM_ERROR,\r\n  UPDATE_PAYSLIPITEM_BEGIN,\r\n  UPDATE_PAYSLIPITEM_SUCCESS,\r\n  UPDATE_PAYSLIPITEM_ERROR,\r\n  GET_PAYRUN_BEGIN,\r\n  GET_PAYRUN_SUCCESS,\r\n  GET_PAYRUN_ERROR,\r\n  GET_BATCHPAYRUN_BEGIN,\r\n  GET_BATCHPAYRUN_SUCCESS,\r\n  GET_BATCHPAYRUN_ERROR,\r\n  ADD_PAYRUN_BEGIN,\r\n  ADD_PAYRUN_SUCCESS,\r\n  ADD_PAYRUN_ERROR,\r\n  UPDATE_PAYRUN_BEGIN,\r\n  UPDATE_PAYRUN_SUCCESS,\r\n  UPDATE_PAYRUN_ERROR,\r\n  DELETE_PAYRUN_BEGIN,\r\n  DELETE_PAYRUN_SUCCESS,\r\n  DELETE_PAYRUN_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  GET_PENDING_PAYSLIP_BEGIN,\r\n  GET_PENDING_PAYSLIP_SUCCESS,\r\n  GET_PENDING_PAYSLIP_ERROR,\r\n  GET_SINGLEBATCH_PAYSLIP_BEGIN,\r\n  GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n  GET_SINGLEBATCH_PAYSLIP_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n  GET_PAYSLIPEARNINGS_BEGIN,\r\n  GET_PAYSLIPEARNINGS_SUCCESS,\r\n  GET_PAYSLIPEARNINGS_ERROR,\r\n  GET_SINGLE_PAYSLIPEARNING_BEGIN,\r\n  GET_SINGLE_PAYSLIPEARNING_SUCCESS,\r\n  GET_SINGLE_PAYSLIPEARNING_ERROR,\r\n  ADD_PAYSLIPEARNING_BEGIN,\r\n  ADD_PAYSLIPEARNING_SUCCESS,\r\n  ADD_PAYSLIPEARNING_ERROR,\r\n  DELETE_PAYSLIPEARNING_BEGIN,\r\n  DELETE_PAYSLIPEARNING_SUCCESS,\r\n  DELETE_PAYSLIPEARNING_ERROR,\r\n  UPDATE_PAYSLIPEARNING_BEGIN,\r\n  UPDATE_PAYSLIPEARNING_SUCCESS,\r\n  UPDATE_PAYSLIPEARNING_ERROR,\r\n  GET_PAYSLIPDEDUCTIONS_BEGIN,\r\n  GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n  GET_PAYSLIPDEDUCTIONS_ERROR,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_BEGIN,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_ERROR,\r\n  ADD_PAYSLIPDEDUCTION_BEGIN,\r\n  ADD_PAYSLIPDEDUCTION_SUCCESS,\r\n  ADD_PAYSLIPDEDUCTION_ERROR,\r\n  DELETE_PAYSLIPDEDUCTION_BEGIN,\r\n  DELETE_PAYSLIPDEDUCTION_SUCCESS,\r\n  DELETE_PAYSLIPDEDUCTION_ERROR,\r\n  UPDATE_PAYSLIPDEDUCTION_BEGIN,\r\n  UPDATE_PAYSLIPDEDUCTION_SUCCESS,\r\n  UPDATE_PAYSLIPDEDUCTION_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isPayslipEditing: false,\r\n  alertPayslip: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipID: null,\r\n  payslips_loading: false,\r\n  payslips_error: false,\r\n  payslip_period: \"\",\r\n  payslip_endmonthdate: \"\",\r\n  payslip_earning_amount: 0,\r\n  payslip_deduction_amount: 0,\r\n  payslips: [],\r\n  payslipsdata: [],\r\n  single_payslip_loading: false,\r\n  single_payslip_error: false,\r\n  single_payslip: {},\r\n  singlebatch_payslip_loading: false,\r\n  singlebatch_payslip_error: false,\r\n  singlebatch_payslip: {},\r\n  delete_payslip_loading: false,\r\n  delete_payslip_error: false,\r\n  update_payslip_loading: false,\r\n  update_payslip_error: false,\r\n  add_payslip_loading: false,\r\n  add_payslip_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n  // payslip earnings\r\n  isPayslipEarningEditing: false,\r\n  alertPayslipEarning: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipEarningID: null,\r\n  payslipearnings_loading: false,\r\n  payslipearnings_error: false,\r\n  payslipearnings: [],\r\n  pending_payslips_loading: false,\r\n  pending_payslips_error: false,\r\n  pending_payslips: [],\r\n  single_payslipearning_loading: false,\r\n  single_payslipearning_error: false,\r\n  single_payslipearning: {},\r\n  delete_payslipearning_loading: false,\r\n  delete_payslipearning_error: false,\r\n  update_payslipearning_loading: false,\r\n  update_payslipearning_error: false,\r\n  add_payslipearning_loading: false,\r\n  add_payslipearning_error: false,\r\n  // payslip deductions\r\n  isPayslipDeductionEditing: false,\r\n  alertPayslipDeduction: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipDeductionID: null,\r\n  payslipdeductions_loading: false,\r\n  payslipdeductions_error: false,\r\n  payslipdeductions: [],\r\n  single_payslipdeduction_loading: false,\r\n  single_payslipdeduction_error: false,\r\n  single_payslipdeduction: {},\r\n  delete_payslipdeduction_loading: false,\r\n  delete_payslipdeduction_error: false,\r\n  update_payslipdeduction_loading: false,\r\n  update_payslipdeduction_error: false,\r\n  add_payslipdeduction_loading: false,\r\n  add_payslipdeduction_error: false,\r\n  payslipitems_loading: false,\r\n  payslipitems_error: false,\r\n  payslipitems: [],\r\n  delete_payslipitem_loading: false,\r\n  delete_payslipitem_error: false,\r\n  update_payslipitem_loading: false,\r\n  update_payslipitem_error: false,\r\n  add_payslipitem_loading: false,\r\n  add_payslipitem_error: false,\r\n  single_payslipitem: {},\r\n\r\n  payrun_loading: false,\r\n  payrun_error: false,\r\n  payrun: [],\r\n  batchpayrun_loading: false,\r\n  batchpayrun_error: false,\r\n  batchpayrun: [],\r\n  delete_payrun_loading: false,\r\n  delete_payrun_error: false,\r\n  update_payrun_loading: false,\r\n  update_payrun_error: false,\r\n  add_payrun_loading: false,\r\n  add_payrun_error: false,\r\n  single_payrun: {},\r\n};\r\n\r\nconst PayslipsContext = React.createContext();\r\n\r\nexport const PayslipsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //....... payslip\r\n  const loadPayslips = async () => {\r\n    dispatch({ type: GET_PAYSLIPS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslips_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslips = await res.json();\r\n      dispatch({ type: GET_PAYSLIPS_SUCCESS, payload: payslips });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingPayslips = async (fi) => {\r\n    dispatch({ type: GET_PENDING_PAYSLIP_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(`${payslips_url}?fi=${fi}`);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const pending_payslips = await res.json();\r\n      dispatch({\r\n        type: GET_PENDING_PAYSLIP_SUCCESS,\r\n        payload: pending_payslips,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PENDING_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpPayslips = async (em) => {\r\n    dispatch({ type: GET_PAYSLIPS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(`${payslips_url}?em=${em}`);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslips = await res.json();\r\n      dispatch({ type: GET_PAYSLIPS_SUCCESS, payload: payslips });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPS_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchPayslip = async (payrun) => {\r\n    dispatch({ type: GET_SINGLEBATCH_PAYSLIP_BEGIN });\r\n    try {\r\n      const res = await fetch(`${payslips_url}?fv=${payrun}`);\r\n      const singlebatchpayslip = await res.json();\r\n      console.log(\"context\", singlebatchpayslip);\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n        payload: singlebatchpayslip,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsPayslipEditingOn = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_ON });\r\n  };\r\n\r\n  const setIsPayslipEditingOff = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_OFF });\r\n  };\r\n\r\n  const setPayslipsData = (value) => {\r\n    dispatch({ type: SET_PAYSLIPS_DATA, payload: value });\r\n  };\r\n\r\n  const resetPayslipsData = () => {\r\n    dispatch({ type: RESET_PAYSLIPS_DATA });\r\n  };\r\n\r\n  const updatePayslipsData = (name, value) => {\r\n    dispatch({ type: UPDATE_PAYSLIPS_DATA, payload: { name, value } });\r\n  };\r\n\r\n  const resetSinglePayslip = () => {\r\n    dispatch({ type: RESET_SINGLE_PAYSLIP });\r\n  };\r\n\r\n  const setPayslipEarningAmount = (value) => {\r\n    dispatch({ type: SET_PAYSLIPEARNING_AMOUNT, payload: value });\r\n  };\r\n  const setPayslipDeductionAmount = (value) => {\r\n    dispatch({ type: SET_PAYSLIPDEDUCTION_AMOUNT, payload: value });\r\n  };\r\n\r\n  const setPayslipPeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_PAYSLIP_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n  const setPayslipEndMonthDate = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_PAYSLIP_ENDMONTHDATE, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const setEditPayslipID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITPAYSLIPID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSinglePayslip = async (id) => {\r\n    dispatch({ type: GET_SINGLE_PAYSLIP_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payslips_url}?id=${id}`);\r\n      const singlepayslip = data;\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_SUCCESS, payload: singlepayslip });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayslip = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIP_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslip = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIP_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslip = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIP_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip items\r\n  const getPayslipitems = async (fv) => {\r\n    dispatch({ type: GET_PAYSLIPITEMS_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payslipitems_url}?period=${fv}`);\r\n      const payslipitems = data;\r\n      dispatch({ type: GET_PAYSLIPITEMS_SUCCESS, payload: payslipitems });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPITEMS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayslipitem = async (data) => {\r\n    //const { id, name, empid, period, payitem, paytype, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPITEM_BEGIN });\r\n    try {\r\n      await fetch(payslipitems_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipitem = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPITEM_BEGIN });\r\n    try {\r\n      await fetch(payslipitems_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPITEM_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipitem = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPITEM_BEGIN });\r\n    try {\r\n      await fetch(payslipitems_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payrun\r\n  const getPayrun = async () => {\r\n    dispatch({ type: GET_PAYRUN_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payrun_url}`);\r\n      const payrun = data;\r\n      dispatch({ type: GET_PAYRUN_SUCCESS, payload: payrun });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  \r\n  //.... payrun\r\n  const getBatchPayrun = async (fi) => {\r\n    dispatch({ type: GET_BATCHPAYRUN_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payrun_url}?fi=${fi}`);\r\n      const payrun = data;\r\n      dispatch({ type: GET_BATCHPAYRUN_SUCCESS, payload: payrun });\r\n    } catch (error) {\r\n      dispatch({ type: GET_BATCHPAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayrun = async (data) => {\r\n    //const { id, name, empid, period, payitem, paytype, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYRUN_BEGIN });\r\n    try {\r\n      await fetch(payrun_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYRUN_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayrun = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYRUN_BEGIN });\r\n    try {\r\n      await fetch(payrun_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYRUN_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayrun = async (id) => {\r\n    dispatch({ type: DELETE_PAYRUN_BEGIN });\r\n    try {\r\n      await fetch(payrun_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYRUN_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip earnings\r\n  const loadPayslipEarnings = async () => {\r\n    dispatch({ type: GET_PAYSLIPEARNINGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslipearnings_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipearnings = await res.json();\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_SUCCESS, payload: payslipearnings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_ERROR });\r\n    }\r\n  };\r\n  //.... payslip earnings\r\n  const getSingleBatchPayslipEarnings = async (empid, period) => {\r\n    dispatch({ type: GET_PAYSLIPEARNINGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(\r\n        `${payslipearnings_url}?fv=${empid}&period=${period}`\r\n      );\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipearnings = await res.json();\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_SUCCESS, payload: payslipearnings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_ERROR });\r\n    }\r\n  };\r\n  const addPayslipEarning = async (data) => {\r\n    const { id, name, period, description, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPEARNING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipEarning = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPEARNING_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipEarning = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPEARNING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip deductions\r\n  const loadPayslipDeductions = async () => {\r\n    dispatch({ type: GET_PAYSLIPDEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslipdeductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipdeductions = await res.json();\r\n      dispatch({\r\n        type: GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n        payload: payslipdeductions,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPDEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n  const getSingleBatchPayslipDeductions = async (empid, period) => {\r\n    dispatch({ type: GET_PAYSLIPDEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(\r\n        `${payslipdeductions_url}?fv=${empid}&period=${period}`\r\n      );\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipdeductions = await res.json();\r\n      dispatch({\r\n        type: GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n        payload: payslipdeductions,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPDEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n  const addPayslipDeduction = async (data) => {\r\n    const { id, name, period, description, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipDeduction = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PayslipsContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadPayslips,\r\n        loadPendingPayslips,\r\n        loadEmpPayslips,\r\n        addPayslip,\r\n        updatePayslip,\r\n        deletePayslip,\r\n        getSinglePayslip,\r\n        getSingleBatchPayslip,\r\n        setEditPayslipID,\r\n        setIsPayslipEditingOn,\r\n        setIsPayslipEditingOff,\r\n        setPayslipsData,\r\n        resetPayslipsData,\r\n        updatePayslipsData,\r\n        loadPayslipEarnings,\r\n        addPayslipEarning,\r\n        updatePayslipEarning,\r\n        deletePayslipEarning,\r\n        getSingleBatchPayslipEarnings,\r\n        setPayslipEarningAmount,\r\n        loadPayslipDeductions,\r\n        addPayslipDeduction,\r\n        updatePayslipDeduction,\r\n        deletePayslipDeduction,\r\n        getSingleBatchPayslipDeductions,\r\n        setPayslipDeductionAmount,\r\n        resetSinglePayslip,\r\n        setPayslipPeriod,\r\n        setPayslipEndMonthDate,\r\n        getPayslipitems,\r\n        deletePayslipitem,\r\n        updatePayslipitem,\r\n        addPayslipitem,\r\n        getPayrun,\r\n        getBatchPayrun,\r\n        deletePayrun,\r\n        updatePayrun,\r\n        addPayrun,\r\n      }}\r\n    >\r\n      {children}\r\n    </PayslipsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePayslipsContext = () => {\r\n  return useContext(PayslipsContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\trainings_context.js",["1146","1147","1148","1149","1150","1151","1152","1153","1154","1155"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/trainings_reducer\";\r\nimport { trainings_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITTRAININGID,\r\n  SET_ISTRAININGEDITING_ON,\r\n  SET_ISTRAININGEDITING_OFF,\r\n  SET_SINGLETRAINING,\r\n  GET_TRAININGS_BEGIN,\r\n  GET_TRAININGS_SUCCESS,\r\n  GET_TRAININGS_ERROR,\r\n  GET_SINGLE_TRAINING_BEGIN,\r\n  GET_SINGLE_TRAINING_SUCCESS,\r\n  GET_SINGLE_TRAINING_ERROR,\r\n  GET_SINGLEBATCH_TRAINING_BEGIN,\r\n  GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n  GET_SINGLEBATCH_TRAINING_ERROR,\r\n  ADD_TRAINING_BEGIN,\r\n  ADD_TRAINING_SUCCESS,\r\n  ADD_TRAINING_ERROR,\r\n  DELETE_TRAINING_BEGIN,\r\n  DELETE_TRAINING_SUCCESS,\r\n  DELETE_TRAINING_ERROR,\r\n  UPDATE_TRAINING_BEGIN,\r\n  UPDATE_TRAINING_SUCCESS,\r\n  UPDATE_TRAINING_ERROR,\r\n  RESET_SINGLE_TRAINING,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isTrainingEditing: false,\r\n  alerttraining: { show: false, msg: \"\", type: \"\" },\r\n  editTrainingID: null,\r\n  trainings_loading: false,\r\n  trainings_error: false,\r\n  trainings: [],\r\n  single_training_loading: false,\r\n  single_training_error: false,\r\n  single_training: {},\r\n  singlebatch_training_loading: false,\r\n  singlebatch_training_error: false,\r\n  singlebatch_training: {},\r\n  delete_training_loading: false,\r\n  delete_training_error: false,\r\n  update_training_loading: false,\r\n  update_training_error: false,\r\n  add_training_loading: false,\r\n  add_training_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst TrainingsContext = React.createContext();\r\n\r\nexport const TrainingsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadTrainings = async () => {\r\n    dispatch({ type: GET_TRAININGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(trainings_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const trainings = await res.json();\r\n      dispatch({ type: GET_TRAININGS_SUCCESS, payload: trainings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_TRAININGS_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsTrainingEditingOn = () => {\r\n    dispatch({ type: SET_ISTRAININGEDITING_ON });\r\n  };\r\n\r\n  const setIsTrainingEditingOff = () => {\r\n    dispatch({ type: SET_ISTRAININGEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleTraining = () => {\r\n    dispatch({ type: RESET_SINGLE_TRAINING });\r\n  };\r\n\r\n  const setEditTrainingID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITTRAININGID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleTraining = async (id) => {\r\n    dispatch({ type: GET_SINGLE_TRAINING_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${trainings_url}?id=${id}`);\r\n      const singletraining = data;\r\n      dispatch({ type: GET_SINGLE_TRAINING_SUCCESS, payload: singletraining });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchTraining = async (empid) => {\r\n    dispatch({ type: GET_SINGLEBATCH_TRAINING_BEGIN });\r\n    try {\r\n      const res = await fetch(`${trainings_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchtraining = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n        payload: singlebatchtraining,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const addTraining = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_TRAINING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateTraining = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_TRAINING_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteTraining = async (id) => {\r\n    dispatch({ type: DELETE_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_TRAINING_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_TRAINING_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <TrainingsContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadTrainings,\r\n        addTraining,\r\n        updateTraining,\r\n        deleteTraining,\r\n        getSingleTraining,\r\n        getSingleBatchTraining,\r\n        setEditTrainingID,\r\n        setIsTrainingEditingOn,\r\n        setIsTrainingEditingOff,\r\n        resetSingleTraining,\r\n      }}\r\n    >\r\n      {children}\r\n    </TrainingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTrainingsContext = () => {\r\n  return useContext(TrainingsContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\context\\tables_context.js",["1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/tables_reducer\";\r\nimport { allowances_url } from \"../utils/constants\";\r\nimport { deductions_url } from \"../utils/constants\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { designations_url } from \"../utils/constants\";\r\nimport { family_url } from \"../utils/constants\";\r\nimport { educations_url } from \"../utils/constants\";\r\nimport { experiences_url } from \"../utils/constants\";\r\nimport { payitems_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  GET_PAYITEMS_BEGIN,\r\n  GET_PAYITEMS_SUCCESS,\r\n  GET_PAYITEMS_ERROR,\r\n  ADD_PAYITEM_BEGIN,\r\n  ADD_PAYITEM_SUCCESS,\r\n  ADD_PAYITEM_ERROR,\r\n  UPDATE_PAYITEM_BEGIN,\r\n  UPDATE_PAYITEM_SUCCESS,\r\n  UPDATE_PAYITEM_ERROR,\r\n  DELETE_PAYITEM_BEGIN,\r\n  DELETE_PAYITEM_SUCCESS,\r\n  DELETE_PAYITEM_ERROR,\r\n  GET_ALLOWANCES_BEGIN,\r\n  GET_ALLOWANCES_SUCCESS,\r\n  GET_ALLOWANCES_ERROR,\r\n  ADD_ALLOWANCE_BEGIN,\r\n  ADD_ALLOWANCE_SUCCESS,\r\n  ADD_ALLOWANCE_ERROR,\r\n  UPDATE_ALLOWANCE_BEGIN,\r\n  UPDATE_ALLOWANCE_SUCCESS,\r\n  UPDATE_ALLOWANCE_ERROR,\r\n  DELETE_ALLOWANCE_BEGIN,\r\n  DELETE_ALLOWANCE_SUCCESS,\r\n  DELETE_ALLOWANCE_ERROR,\r\n  GET_DEDUCTIONS_BEGIN,\r\n  GET_DEDUCTIONS_SUCCESS,\r\n  GET_DEDUCTIONS_ERROR,\r\n  ADD_DEDUCTION_BEGIN,\r\n  ADD_DEDUCTION_SUCCESS,\r\n  ADD_DEDUCTION_ERROR,\r\n  UPDATE_DEDUCTION_BEGIN,\r\n  UPDATE_DEDUCTION_SUCCESS,\r\n  UPDATE_DEDUCTION_ERROR,\r\n  DELETE_DEDUCTION_BEGIN,\r\n  DELETE_DEDUCTION_SUCCESS,\r\n  DELETE_DEDUCTION_ERROR,\r\n  GET_DEPARTMENTS_BEGIN,\r\n  GET_DEPARTMENTS_SUCCESS,\r\n  GET_DEPARTMENTS_ERROR,\r\n  ADD_DEPARTMENT_BEGIN,\r\n  ADD_DEPARTMENT_SUCCESS,\r\n  ADD_DEPARTMENT_ERROR,\r\n  UPDATE_DEPARTMENT_BEGIN,\r\n  UPDATE_DEPARTMENT_SUCCESS,\r\n  UPDATE_DEPARTMENT_ERROR,\r\n  DELETE_DEPARTMENT_BEGIN,\r\n  DELETE_DEPARTMENT_SUCCESS,\r\n  DELETE_DEPARTMENT_ERROR,\r\n  GET_DESIGNATIONS_BEGIN,\r\n  GET_DESIGNATIONS_SUCCESS,\r\n  GET_DESIGNATIONS_ERROR,\r\n  ADD_DESIGNATION_BEGIN,\r\n  ADD_DESIGNATION_SUCCESS,\r\n  ADD_DESIGNATION_ERROR,\r\n  UPDATE_DESIGNATION_BEGIN,\r\n  UPDATE_DESIGNATION_SUCCESS,\r\n  UPDATE_DESIGNATION_ERROR,\r\n  DELETE_DESIGNATION_BEGIN,\r\n  DELETE_DESIGNATION_SUCCESS,\r\n  DELETE_DESIGNATION_ERROR,\r\n  GET_FAMILY_BEGIN,\r\n  GET_FAMILY_SUCCESS,\r\n  GET_FAMILY_ERROR,\r\n  ADD_FAMILY_BEGIN,\r\n  ADD_FAMILY_SUCCESS,\r\n  ADD_FAMILY_ERROR,\r\n  UPDATE_FAMILY_BEGIN,\r\n  UPDATE_FAMILY_SUCCESS,\r\n  UPDATE_FAMILY_ERROR,\r\n  DELETE_FAMILY_BEGIN,\r\n  DELETE_FAMILY_SUCCESS,\r\n  DELETE_FAMILY_ERROR,\r\n  LOAD_SINGLEBATCH_FAMILY_BEGIN,\r\n  LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n  LOAD_SINGLEBATCH_FAMILY_ERROR,\r\n  // education\r\n  GET_EDUCATION_BEGIN,\r\n  GET_EDUCATION_SUCCESS,\r\n  GET_EDUCATION_ERROR,\r\n  ADD_EDUCATION_BEGIN,\r\n  ADD_EDUCATION_SUCCESS,\r\n  ADD_EDUCATION_ERROR,\r\n  UPDATE_EDUCATION_BEGIN,\r\n  UPDATE_EDUCATION_SUCCESS,\r\n  UPDATE_EDUCATION_ERROR,\r\n  DELETE_EDUCATION_BEGIN,\r\n  DELETE_EDUCATION_SUCCESS,\r\n  DELETE_EDUCATION_ERROR,\r\n  LOAD_SINGLEBATCH_EDUCATION_BEGIN,\r\n  LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n  LOAD_SINGLEBATCH_EDUCATION_ERROR,\r\n  // experience\r\n  GET_EXPERIENCE_BEGIN,\r\n  GET_EXPERIENCE_SUCCESS,\r\n  GET_EXPERIENCE_ERROR,\r\n  ADD_EXPERIENCE_BEGIN,\r\n  ADD_EXPERIENCE_SUCCESS,\r\n  ADD_EXPERIENCE_ERROR,\r\n  UPDATE_EXPERIENCE_BEGIN,\r\n  UPDATE_EXPERIENCE_SUCCESS,\r\n  UPDATE_EXPERIENCE_ERROR,\r\n  DELETE_EXPERIENCE_BEGIN,\r\n  DELETE_EXPERIENCE_SUCCESS,\r\n  DELETE_EXPERIENCE_ERROR,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_BEGIN,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_ERROR,\r\n  // reset\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  payitems: [],\r\n  payitems_loading: false,\r\n  payitems_error: false,\r\n  allowances: [],\r\n  allowances_loading: false,\r\n  allowances_error: false,\r\n  deductions: [],\r\n  deductions_loading: false,\r\n  deductions_error: false,\r\n  departments: [],\r\n  departments_loading: false,\r\n  departments_error: false,\r\n  designatons: [],\r\n  designations_loading: false,\r\n  designations_error: false,\r\n  family: [],\r\n  family_loading: false,\r\n  family_error: false,\r\n  singlebatch_family_loading: false,\r\n  singlebatch_family_error: false,\r\n  singlebatchfamily: {},\r\n  single_family: {},\r\n  education: [],\r\n  education_loading: false,\r\n  education_error: false,\r\n  singlebatch_education_loading: false,\r\n  singlebatch_education_error: false,\r\n  singlebatcheducation: {},\r\n  experience: [],\r\n  experience_loading: false,\r\n  experience_error: false,\r\n  singlebatch_experience_loading: false,\r\n  singlebatch_experience_error: false,\r\n  singlebatchexperience: {},\r\n};\r\n\r\nconst TablesContext = React.createContext();\r\n\r\nexport const TablesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // payitems\r\n  const loadPayitems = async () => {\r\n    dispatch({ type: GET_PAYITEMS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payitems_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payitems = await res.json();\r\n      dispatch({ type: GET_PAYITEMS_SUCCESS, payload: payitems });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYITEMS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayitem = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayitem = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYITEM_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayitem = async (id) => {\r\n    dispatch({ type: DELETE_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  // Allowances\r\n  const loadAllowances = async () => {\r\n    dispatch({ type: GET_ALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(allowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const allowances = await res.json();\r\n      dispatch({ type: GET_ALLOWANCES_SUCCESS, payload: allowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const addAllowance = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_ALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_ALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteAllowance = async (id) => {\r\n    dispatch({ type: DELETE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_ALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  // Deductions\r\n  const loadDeductions = async () => {\r\n    dispatch({ type: GET_DEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(deductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const deductions = await res.json();\r\n      dispatch({ type: GET_DEDUCTIONS_SUCCESS, payload: deductions });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDeduction = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDeduction = async (id) => {\r\n    dispatch({ type: DELETE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEDUCTION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Departments\r\n  const loadDepartments = async () => {\r\n    dispatch({ type: GET_DEPARTMENTS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(departments_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const departments = await res.json();\r\n      dispatch({ type: GET_DEPARTMENTS_SUCCESS, payload: departments });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEPARTMENTS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDepartment = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEPARTMENT_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDepartment = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEPARTMENT_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = async (id) => {\r\n    dispatch({ type: DELETE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEPARTMENT_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  // Designations\r\n  const loadDesignations = async () => {\r\n    dispatch({ type: GET_DESIGNATIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(designations_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const designations = await res.json();\r\n      dispatch({ type: GET_DESIGNATIONS_SUCCESS, payload: designations });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DESIGNATIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDesignation = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DESIGNATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDesignation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DESIGNATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDesignation = async (id) => {\r\n    dispatch({ type: DELETE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DESIGNATION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Family\r\n  const loadFamily = async () => {\r\n    dispatch({ type: GET_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(family_url);\r\n      const family = await res.json();\r\n      dispatch({ type: GET_FAMILY_SUCCESS, payload: family });\r\n    } catch (error) {\r\n      dispatch({ type: GET_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchFamily = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(`${family_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchfamily = await res.json();\r\n\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n        payload: singlebatchfamily,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const addFamily = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_FAMILY_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateFamily = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_FAMILY_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteFamily = async (id) => {\r\n    dispatch({ type: DELETE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_FAMILY_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  // Education\r\n  const loadEducation = async () => {\r\n    dispatch({ type: GET_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const education = await res.json();\r\n      dispatch({ type: GET_EDUCATION_SUCCESS, payload: education });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchEducation = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(`${educations_url}?fv=${empid}`);\r\n\r\n      const singlebatcheducation = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n        payload: singlebatcheducation,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEducation = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEducation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EDUCATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEducation = async (id) => {\r\n    dispatch({ type: DELETE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Experience\r\n  const loadExperience = async () => {\r\n    dispatch({ type: GET_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const experience = await res.json();\r\n      dispatch({ type: GET_EXPERIENCE_SUCCESS, payload: experience });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchExperience = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${experiences_url}?fv=${empid}`);\r\n\r\n      const singlebatchexperience = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n        payload: singlebatchexperience,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExperience = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPERIENCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExperience = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPERIENCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExperience = async (id) => {\r\n    dispatch({ type: DELETE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPERIENCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const resetTables = () => {\r\n    dispatch({ type: RESET_TABLES });\r\n  };\r\n\r\n  return (\r\n    <TablesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadPayitems,\r\n        addPayitem,\r\n        deletePayitem,\r\n        updatePayitem,\r\n        loadAllowances,\r\n        addAllowance,\r\n        deleteAllowance,\r\n        updateAllowance,\r\n        loadDeductions,\r\n        addDeduction,\r\n        deleteDeduction,\r\n        updateDeduction,\r\n        loadDepartments,\r\n        addDepartment,\r\n        deleteDepartment,\r\n        updateDepartment,\r\n        loadDesignations,\r\n        addDesignation,\r\n        deleteDesignation,\r\n        updateDesignation,\r\n        loadFamily,\r\n        loadSingleBatchFamily,\r\n        addFamily,\r\n        deleteFamily,\r\n        updateFamily,\r\n        loadEducation,\r\n        loadSingleBatchEducation,\r\n        addEducation,\r\n        deleteEducation,\r\n        updateEducation,\r\n        loadExperience,\r\n        loadSingleBatchExperience,\r\n        addExperience,\r\n        deleteExperience,\r\n        updateExperience,\r\n        resetTables,\r\n      }}\r\n    >\r\n      {children}\r\n    </TablesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTablesContext = () => {\r\n  return useContext(TablesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\actions.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Main.js",["1174","1175","1176","1177"],"import React, { useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport LoginForm from \"./LoginForm\";\r\nimport DashboardMain from \"./DashboardMain\";\r\nimport DashboardStaff from \"./DashboardStaff\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport DashboardAdminManager from \"./DashboardAdminManager\";\r\nimport DashboardManager from \"./DashboardManager\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useUser } from \"./user/useUser\";\r\n\r\nconst Main = () => {\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  //const { user } = useUser();\r\n  \r\n  const SwitchCase = () => {\r\n    //console.log(loginLevel);\r\n    switch (loginLevel.loginLevel) {\r\n      case \"Staff\":\r\n        return <DashboardStaff />;\r\n      case \"Admin\":\r\n        return <DashboardAdmin />;\r\n      case \"AdminManager\":\r\n        return <DashboardAdminManager />;\r\n      case \"Manager\":\r\n        return <DashboardManager />;\r\n      default:\r\n        return \"You are not authorised user!\";\r\n    }\r\n  };\r\n\r\n  if (!loginLevel.login) {\r\n    return <LoginForm  />;\r\n  }\r\n  return (\r\n    <div>\r\n      <SwitchCase />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardMain.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\utils\\constants.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\dailyallowances_reducer.js",["1178","1179"],"import {\r\n  SET_EDITDAILYALLOWANCEID,\r\n  SET_ISDAILYALLOWANCEEDITING_ON,\r\n  SET_ISDAILYALLOWANCEEDITING_OFF,\r\n  SET_DAILYALLOWANCE_PERIOD,\r\n  SET_SINGLEDAILYALLOWANCE,\r\n  GET_DAILYALLOWANCES_BEGIN,\r\n  GET_DAILYALLOWANCES_SUCCESS,\r\n  GET_DAILYALLOWANCES_ERROR,\r\n  GET_UNPAIDDAILYALLOWS_BEGIN,\r\n  GET_UNPAIDDAILYALLOWS_SUCCESS,\r\n  GET_UNPAIDDAILYALLOWS_ERROR,\r\n  GET_SINGLE_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWANCE_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_ERROR,\r\n  ADD_DAILYALLOWANCE_BEGIN,\r\n  ADD_DAILYALLOWANCE_SUCCESS,\r\n  ADD_DAILYALLOWANCE_ERROR,\r\n  DELETE_DAILYALLOWANCE_BEGIN,\r\n  DELETE_DAILYALLOWANCE_SUCCESS,\r\n  DELETE_DAILYALLOWANCE_ERROR,\r\n  UPDATE_DAILYALLOWANCE_BEGIN,\r\n  UPDATE_DAILYALLOWANCE_SUCCESS,\r\n  UPDATE_DAILYALLOWANCE_ERROR,\r\n  RESET_SINGLE_DAILYALLOWANCE,\r\n  // daily allowances details\r\n  LOAD_DAILYALLOWSDETLS,\r\n  SET_DAILYALLOWSDETL_PERIOD,\r\n  GET_DAILYALLOWSDETLS_BEGIN,\r\n  GET_DAILYALLOWSDETLS_SUCCESS,\r\n  GET_DAILYALLOWSDETLS_ERROR,\r\n  GET_SINGLE_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWSDETL_ERROR,\r\n  GET_PENDING_DAILYALLOWSDETL_BEGIN,\r\n  GET_PENDING_DAILYALLOWSDETL_SUCCESS,\r\n  GET_PENDING_DAILYALLOWSDETL_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR,\r\n  ADD_DAILYALLOWSDETL_BEGIN,\r\n  ADD_DAILYALLOWSDETL_SUCCESS,\r\n  ADD_DAILYALLOWSDETL_ERROR,\r\n  DELETE_DAILYALLOWSDETL_BEGIN,\r\n  DELETE_DAILYALLOWSDETL_SUCCESS,\r\n  DELETE_DAILYALLOWSDETL_ERROR,\r\n  UPDATE_DAILYALLOWSDETL_BEGIN,\r\n  UPDATE_DAILYALLOWSDETL_SUCCESS,\r\n  UPDATE_DAILYALLOWSDETL_ERROR,\r\n} from \"../actions\";\r\n\r\nconst dailyallowances_reducer = (state, action) => {\r\n  // set daily allowances variables\r\n  if (action.type === SET_DAILYALLOWANCE_PERIOD) {\r\n    return { ...state, dailyallowance_period: action.payload };\r\n  }\r\n  if (action.type === SET_EDITDAILYALLOWANCEID) {\r\n    return { ...state, editDailyAllowanceID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_ON) {\r\n    return { ...state, isDailyAllowanceEditing: true };\r\n  }\r\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_OFF) {\r\n    return { ...state, isDailyAllowanceEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_DAILYALLOWANCE) {\r\n    return { ...state, single_dailyallowance: {} };\r\n  }\r\n  // get daily allowances\r\n  if (action.type === GET_DAILYALLOWANCES_BEGIN) {\r\n    return { ...state, dailyallowances_loading: true };\r\n  }\r\n  if (action.type === GET_DAILYALLOWANCES_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      dailyallowances_loading: false,\r\n      dailyallowances: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_DAILYALLOWANCES_ERROR) {\r\n    return {\r\n      ...state,\r\n      dailyallowances_loading: false,\r\n      dailyallowances_error: true,\r\n    };\r\n  }\r\n\r\n  // get unpaid daily allowances\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_BEGIN) {\r\n    return { ...state, unpaid_dailyallows_loading: true };\r\n  }\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      unpaid_dailyallows_loading: false,\r\n      unpaiddailyallows: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_ERROR) {\r\n    return {\r\n      ...state,\r\n      unpaid_dailyallows_loading: false,\r\n      unpaid_dailyallows_error: true,\r\n    };\r\n  }\r\n\r\n  // add daily allowance\r\n  if (action.type === ADD_DAILYALLOWANCE_BEGIN) {\r\n    return { ...state, add_dailyallowance_loading: true };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowance_loading: false,\r\n      dailyallowances: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowance_loading: false,\r\n      add_dailyallowance_error: true,\r\n    };\r\n  }\r\n  // update daily allowances\r\n  if (action.type === UPDATE_DAILYALLOWANCE_BEGIN) {\r\n    return { ...state, update_dailyallowance_loading: true };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowances_loading: false,\r\n      single_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowance_loading: false,\r\n      update_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  // delete daily allowances\r\n  if (action.type === DELETE_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: true,\r\n      delete_dailyallowance_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: false,\r\n      delete_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: false,\r\n      delete_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily allowances\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: true,\r\n      single_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: false,\r\n      single_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: false,\r\n      single_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch daily allowances\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: true,\r\n      singlebatch_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: false,\r\n      singlebatch_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: false,\r\n      singlebatch_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  // daily allowances details\r\n  // set daily allowances details variables\r\n  if (action.type === SET_DAILYALLOWSDETL_PERIOD) {\r\n    return { ...state, dailyallowsdetl_period: action.payload };\r\n  }\r\n  // get daily allowances details\r\n  if (action.type === GET_DAILYALLOWSDETLS_BEGIN) {\r\n    return { ...state, dailyallowsdetls_loading: true };\r\n  }\r\n  if (action.type === GET_DAILYALLOWSDETLS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      dailyallowsdetls_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_DAILYALLOWSDETLS_ERROR) {\r\n    return {\r\n      ...state,\r\n      dailyallowsdetls_loading: false,\r\n      dailyallowsdetls_error: true,\r\n    };\r\n  }\r\n\r\n  // add daily allowance details\r\n  if (action.type === ADD_DAILYALLOWSDETL_BEGIN) {\r\n    return { ...state, add_dailyallowsdetl_loading: true };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowsdetl_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowsdetl_loading: false,\r\n      add_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n  // update daily allowances\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_BEGIN) {\r\n    return { ...state, update_dailyallowsdetl_loading: true };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowsdetl_loading: false,\r\n      update_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  // delete daily allowances details\r\n  if (action.type === DELETE_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: true,\r\n      delete_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: false,\r\n      delete_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: false,\r\n      delete_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily allowances details\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: true,\r\n      single_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //pending daily allowances details\r\n  if (action.type === GET_PENDING_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      pending_dailyallowsdetl_loading: true,\r\n      pending_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_PENDING_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      pending_dailyallowsdetl_loading: false,\r\n      pending_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PENDING_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      pending_dailyallowsdetl_loading: false,\r\n      pending_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily batch allowances details\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: true,\r\n      singlebatch_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS) {\r\n    console.log(\"reducer\", action.payload);\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: false,\r\n      singlebatch_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: false,\r\n      singlebatch_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default dailyallowances_reducer;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\employees_reducer.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\expenses_reducer.js",["1180"],"import {\r\n  SET_EDITEXPENSEID,\r\n  SET_ISEXPENSEEDITING_ON,\r\n  SET_ISEXPENSEEDITING_OFF,\r\n  SET_SINGLEEXPENSE,\r\n  GET_EXPENSES_BEGIN,\r\n  GET_EXPENSES_SUCCESS,\r\n  GET_EXPENSES_ERROR,\r\n  GET_UNPAIDEXPENSES_BEGIN,\r\n  GET_UNPAIDEXPENSES_SUCCESS,\r\n  GET_UNPAIDEXPENSES_ERROR,\r\n  GET_PERIODEXPENSES_BEGIN,\r\n  GET_PERIODEXPENSES_SUCCESS,\r\n  GET_PERIODEXPENSES_ERROR,\r\n  GET_SINGLE_EXPENSE_BEGIN,\r\n  GET_SINGLE_EXPENSE_SUCCESS,\r\n  GET_SINGLE_EXPENSE_ERROR,\r\n  ADD_EXPENSE_BEGIN,\r\n  ADD_EXPENSE_SUCCESS,\r\n  ADD_EXPENSE_ERROR,\r\n  DELETE_EXPENSE_BEGIN,\r\n  DELETE_EXPENSE_SUCCESS,\r\n  DELETE_EXPENSE_ERROR,\r\n  UPDATE_EXPENSE_BEGIN,\r\n  UPDATE_EXPENSE_SUCCESS,\r\n  UPDATE_EXPENSE_ERROR,\r\n  RESET_SINGLE_EXPENSE,\r\n} from \"../actions\";\r\n\r\nconst expenses_reducer = (state, action) => {\r\n  // set leaves variables\r\n  if (action.type === SET_EDITEXPENSEID) {\r\n    return { ...state, editExpenseID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISEXPENSEEDITING_ON) {\r\n    return { ...state, isExpenseEditing: true };\r\n  }\r\n  if (action.type === SET_ISEXPENSEEDITING_OFF) {\r\n    return { ...state, isExpenseEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_EXPENSE) {\r\n    return { ...state, single_expense: {} };\r\n  }\r\n  // get employees\r\n  if (action.type === GET_EXPENSES_BEGIN) {\r\n    return { ...state, expenses_loading: true };\r\n  }\r\n  if (action.type === GET_EXPENSES_SUCCESS) {\r\n    return { ...state, expenses_loading: false, expenses: action.payload };\r\n  }\r\n  if (action.type === GET_EXPENSES_ERROR) {\r\n    return { ...state, expenses_loading: false, expenses_error: true };\r\n  }\r\n\r\n  // get unpaid expenses\r\n  if (action.type === GET_UNPAIDEXPENSES_BEGIN) {\r\n    return { ...state, unpaid_expenses_loading: true };\r\n  }\r\n  if (action.type === GET_UNPAIDEXPENSES_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      unpaid_expenses_loading: false,\r\n      unpaidexpenses: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_UNPAIDEXPENSES_ERROR) {\r\n    return {\r\n      ...state,\r\n      unpaid_expenses_loading: false,\r\n      unpaid_expenses_error: true,\r\n    };\r\n  }\r\n\r\n  // get period expenses\r\n  if (action.type === GET_PERIODEXPENSES_BEGIN) {\r\n    return { ...state, period_expenses_loading: true };\r\n  }\r\n  if (action.type === GET_PERIODEXPENSES_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      period_expenses_loading: false,\r\n      periodexpenses: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PERIODEXPENSES_ERROR) {\r\n    return {\r\n      ...state,\r\n      period_expenses_loading: false,\r\n      period_expenses_error: true,\r\n    };\r\n  }\r\n\r\n  // add employee\r\n  if (action.type === ADD_EXPENSE_BEGIN) {\r\n    return { ...state, add_expense_loading: true };\r\n  }\r\n  if (action.type === ADD_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_expenses_loading: false,\r\n      expenses: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_EXPENSE_ERROR) {\r\n    return { ...state, expenses_loading: false, add_expense_error: true };\r\n  }\r\n  // update employee\r\n  if (action.type === UPDATE_EXPENSE_BEGIN) {\r\n    return { ...state, update_expense_loading: true };\r\n  }\r\n  if (action.type === UPDATE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      expenses_loading: false,\r\n      single_expense: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_expense_loading: false,\r\n      update_expense_error: true,\r\n    };\r\n  }\r\n\r\n  // delete employee\r\n  if (action.type === DELETE_EXPENSE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: true,\r\n      delete_expense_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: false,\r\n      delete_expense_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: false,\r\n      delete_expense_error: true,\r\n    };\r\n  }\r\n\r\n  //single employee\r\n  if (action.type === GET_SINGLE_EXPENSE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: true,\r\n      single_expense_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: false,\r\n      single_expense: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: false,\r\n      single_expense_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default expenses_reducer;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\trainings_reducer.js",["1181","1182"],"import {\r\n  SET_EDITTRAININGID,\r\n  SET_ISTRAININGEDITING_ON,\r\n  SET_ISTRAININGEDITING_OFF,\r\n  SET_SINGLETRAINING,\r\n  GET_TRAININGS_BEGIN,\r\n  GET_TRAININGS_SUCCESS,\r\n  GET_TRAININGS_ERROR,\r\n  GET_SINGLE_TRAINING_BEGIN,\r\n  GET_SINGLE_TRAINING_SUCCESS,\r\n  GET_SINGLE_TRAINING_ERROR,\r\n  GET_SINGLEBATCH_TRAINING_BEGIN,\r\n  GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n  GET_SINGLEBATCH_TRAINING_ERROR,\r\n  ADD_TRAINING_BEGIN,\r\n  ADD_TRAINING_SUCCESS,\r\n  ADD_TRAINING_ERROR,\r\n  DELETE_TRAINING_BEGIN,\r\n  DELETE_TRAINING_SUCCESS,\r\n  DELETE_TRAINING_ERROR,\r\n  UPDATE_TRAINING_BEGIN,\r\n  UPDATE_TRAINING_SUCCESS,\r\n  UPDATE_TRAINING_ERROR,\r\n  RESET_SINGLE_TRAINING,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst trainings_reducer = (state, action) => {\r\n  // set training variables\r\n  if (action.type === SET_EDITTRAININGID) {\r\n    return { ...state, editTrainingID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISTRAININGEDITING_ON) {\r\n    return { ...state, isTrainingEditing: true };\r\n  }\r\n  if (action.type === SET_ISTRAININGEDITING_OFF) {\r\n    return { ...state, isTrainingEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_TRAINING) {\r\n    return { ...state, single_training: {} };\r\n  }\r\n  // get trainings\r\n  if (action.type === GET_TRAININGS_BEGIN) {\r\n    return { ...state, trainings_loading: true };\r\n  }\r\n  if (action.type === GET_TRAININGS_SUCCESS) {\r\n    return { ...state, trainings_loading: false, trainings: action.payload };\r\n  }\r\n  if (action.type === GET_TRAININGS_ERROR) {\r\n    return { ...state, trainings_loading: false, trainings_error: true };\r\n  }\r\n\r\n  // add training\r\n  if (action.type === ADD_TRAINING_BEGIN) {\r\n    return { ...state, add_training_loading: true };\r\n  }\r\n  if (action.type === ADD_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_trainings_loading: false,\r\n      trainings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_TRAINING_ERROR) {\r\n    return { ...state, trainings_loading: false, add_training_error: true };\r\n  }\r\n  // update trainig\r\n  if (action.type === UPDATE_TRAINING_BEGIN) {\r\n    return { ...state, update_training_loading: true };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      trainings_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_training_loading: false,\r\n      update_training_error: true,\r\n    };\r\n  }\r\n\r\n  // delete training\r\n  if (action.type === DELETE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: true,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single training\r\n  if (action.type === GET_SINGLE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: true,\r\n      single_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch training\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: true,\r\n      singlebatch_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default trainings_reducer;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\leaves_reducer.js",["1183"],"import {\r\n  SET_EDITLEAVEID,\r\n  SET_ISLEAVEEDITING_ON,\r\n  SET_ISLEAVEEDITING_OFF,\r\n  SET_SINGLELEAVE,\r\n  GET_LEAVES_BEGIN,\r\n  GET_LEAVES_SUCCESS,\r\n  GET_LEAVES_ERROR,\r\n  GET_SINGLE_LEAVE_BEGIN,\r\n  GET_SINGLE_LEAVE_SUCCESS,\r\n  GET_SINGLE_LEAVE_ERROR,\r\n  GET_SINGLEBATCH_LEAVE_BEGIN,\r\n  GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n  GET_SINGLEBATCH_LEAVE_ERROR,\r\n  ADD_LEAVE_BEGIN,\r\n  ADD_LEAVE_SUCCESS,\r\n  ADD_LEAVE_ERROR,\r\n  DELETE_LEAVE_BEGIN,\r\n  DELETE_LEAVE_SUCCESS,\r\n  DELETE_LEAVE_ERROR,\r\n  UPDATE_LEAVE_BEGIN,\r\n  UPDATE_LEAVE_SUCCESS,\r\n  UPDATE_LEAVE_ERROR,\r\n  RESET_SINGLE_LEAVE,\r\n} from \"../actions\";\r\n\r\nconst leaves_reducer = (state, action) => {\r\n  // set leaves variables\r\n  if (action.type === SET_EDITLEAVEID) {\r\n    return { ...state, editLeaveID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISLEAVEEDITING_ON) {\r\n    return { ...state, isLeaveEditing: true };\r\n  }\r\n  if (action.type === SET_ISLEAVEEDITING_OFF) {\r\n    return { ...state, isLeaveEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_LEAVE) {\r\n    return { ...state, single_leave: {} };\r\n  }\r\n  // get leaves\r\n  if (action.type === GET_LEAVES_BEGIN) {\r\n    return { ...state, leaves_loading: true };\r\n  }\r\n  if (action.type === GET_LEAVES_SUCCESS) {\r\n    return { ...state, leaves_loading: false, leaves: action.payload };\r\n  }\r\n  if (action.type === GET_LEAVES_ERROR) {\r\n    return { ...state, leaves_loading: false, leaves_error: true };\r\n  }\r\n\r\n  // add leave\r\n  if (action.type === ADD_LEAVE_BEGIN) {\r\n    return { ...state, add_leave_loading: true };\r\n  }\r\n  if (action.type === ADD_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_leaves_loading: false,\r\n      leaves: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_LEAVE_ERROR) {\r\n    return { ...state, leaves_loading: false, add_leave_error: true };\r\n  }\r\n  // update leave\r\n  if (action.type === UPDATE_LEAVE_BEGIN) {\r\n    return { ...state, update_leave_loading: true };\r\n  }\r\n  if (action.type === UPDATE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      leaves_loading: false,\r\n      single_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_leave_loading: false,\r\n      update_leave_error: true,\r\n    };\r\n  }\r\n\r\n  // delete leave\r\n  if (action.type === DELETE_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: true,\r\n      delete_leave_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: false,\r\n      delete_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: false,\r\n      delete_leave_error: true,\r\n    };\r\n  }\r\n\r\n  //single leave\r\n  if (action.type === GET_SINGLE_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: true,\r\n      single_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: false,\r\n      single_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: false,\r\n      single_leave_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch leave\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: true,\r\n      singlebatch_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: false,\r\n      singlebatch_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: false,\r\n      singlebatch_leave_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default leaves_reducer;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\payslips_reducer.js",["1184"],"import {\r\n  SET_EDITPAYSLIPID,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_PAYSLIP_PERIOD,\r\n  SET_PAYSLIPS_DATA,\r\n  RESET_PAYSLIPS_DATA,\r\n  UPDATE_PAYSLIPS_DATA,\r\n  SET_PAYSLIP_ENDMONTHDATE,\r\n  SET_PAYSLIPEARNING_AMOUNT,\r\n  SET_PAYSLIPDEDUCTION_AMOUNT,\r\n  SET_SINGLEPAYSLIP,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  GET_PENDING_PAYSLIP_BEGIN,\r\n  GET_PENDING_PAYSLIP_SUCCESS,\r\n  GET_PENDING_PAYSLIP_ERROR,\r\n  GET_SINGLEBATCH_PAYSLIP_BEGIN,\r\n  GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n  GET_SINGLEBATCH_PAYSLIP_ERROR,\r\n  GET_PAYSLIPITEMS_BEGIN,\r\n  GET_PAYSLIPITEMS_SUCCESS,\r\n  GET_PAYSLIPITEMS_ERROR,\r\n  ADD_PAYSLIPITEM_BEGIN,\r\n  ADD_PAYSLIPITEM_SUCCESS,\r\n  ADD_PAYSLIPITEM_ERROR,\r\n  UPDATE_PAYSLIPITEM_BEGIN,\r\n  UPDATE_PAYSLIPITEM_SUCCESS,\r\n  UPDATE_PAYSLIPITEM_ERROR,\r\n  DELETE_PAYSLIPITEM_BEGIN,\r\n  DELETE_PAYSLIPITEM_SUCCESS,\r\n  DELETE_PAYSLIPITEM_ERROR,\r\n  GET_PAYRUN_BEGIN,\r\n  GET_PAYRUN_SUCCESS,\r\n  GET_PAYRUN_ERROR,\r\n  GET_BATCHPAYRUN_BEGIN,\r\n  GET_BATCHPAYRUN_SUCCESS,\r\n  GET_BATCHPAYRUN_ERROR,\r\n  ADD_PAYRUN_BEGIN,\r\n  ADD_PAYRUN_SUCCESS,\r\n  ADD_PAYRUN_ERROR,\r\n  UPDATE_PAYRUN_BEGIN,\r\n  UPDATE_PAYRUN_SUCCESS,\r\n  UPDATE_PAYRUN_ERROR,\r\n  DELETE_PAYRUN_BEGIN,\r\n  DELETE_PAYRUN_SUCCESS,\r\n  DELETE_PAYRUN_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n  GET_PAYSLIPEARNINGS_BEGIN,\r\n  GET_PAYSLIPEARNINGS_SUCCESS,\r\n  GET_PAYSLIPEARNINGS_ERROR,\r\n  GET_SINGLE_PAYSLIPEARNING_BEGIN,\r\n  GET_SINGLE_PAYSLIPEARNING_SUCCESS,\r\n  GET_SINGLE_PAYSLIPEARNING_ERROR,\r\n  ADD_PAYSLIPEARNING_BEGIN,\r\n  ADD_PAYSLIPEARNING_SUCCESS,\r\n  ADD_PAYSLIPEARNING_ERROR,\r\n  DELETE_PAYSLIPEARNING_BEGIN,\r\n  DELETE_PAYSLIPEARNING_SUCCESS,\r\n  DELETE_PAYSLIPEARNING_ERROR,\r\n  UPDATE_PAYSLIPEARNING_BEGIN,\r\n  UPDATE_PAYSLIPEARNING_SUCCESS,\r\n  UPDATE_PAYSLIPEARNING_ERROR,\r\n  GET_PAYSLIPDEDUCTIONS_BEGIN,\r\n  GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n  GET_PAYSLIPDEDUCTIONS_ERROR,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_BEGIN,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_ERROR,\r\n  ADD_PAYSLIPDEDUCTION_BEGIN,\r\n  ADD_PAYSLIPDEDUCTION_SUCCESS,\r\n  ADD_PAYSLIPDEDUCTION_ERROR,\r\n  DELETE_PAYSLIPDEDUCTION_BEGIN,\r\n  DELETE_PAYSLIPDEDUCTION_SUCCESS,\r\n  DELETE_PAYSLIPDEDUCTION_ERROR,\r\n  UPDATE_PAYSLIPDEDUCTION_BEGIN,\r\n  UPDATE_PAYSLIPDEDUCTION_SUCCESS,\r\n  UPDATE_PAYSLIPDEDUCTION_ERROR,\r\n} from \"../actions\";\r\n\r\nconst payslips_reducer = (state, action) => {\r\n  // set payslips variables\r\n  if (action.type === SET_PAYSLIP_PERIOD) {\r\n    return { ...state, payslip_period: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIP_ENDMONTHDATE) {\r\n    return { ...state, payslip_endmonthdate: action.payload };\r\n  }\r\n  if (action.type === SET_EDITPAYSLIPID) {\r\n    return { ...state, editPayslipID: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIPEARNING_AMOUNT) {\r\n    return { ...state, payslip_earning_amount: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIPDEDUCTION_AMOUNT) {\r\n    return { ...state, payslip_deduction_amount: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIPS_DATA) {\r\n    return { ...state, payslipsdata: action.payload };\r\n  }\r\n  if (action.type === RESET_PAYSLIPS_DATA) {\r\n    return { ...state, payslipsdata: [] };\r\n  }\r\n\r\n  if (action.type === UPDATE_PAYSLIPS_DATA) {\r\n    console.log(\"reducer\", action.payload.name, action.payload.value);\r\n    //return { ...state, payslipsdata: { [action.payload.name]: action.payload.value } };\r\n    return null;\r\n  }\r\n\r\n  if (action.type === SET_ISPAYSLIPEDITING_ON) {\r\n    return { ...state, isPayslipEditing: true };\r\n  }\r\n  if (action.type === SET_ISPAYSLIPEDITING_OFF) {\r\n    return { ...state, isPayslipEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_PAYSLIP) {\r\n    return { ...state, single_payslip: {} };\r\n  }\r\n  // get payslips\r\n  if (action.type === GET_PAYSLIPS_BEGIN) {\r\n    return { ...state, payslips_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPS_SUCCESS) {\r\n    return { ...state, payslips_loading: false, payslips: action.payload };\r\n  }\r\n  if (action.type === GET_PAYSLIPS_ERROR) {\r\n    return { ...state, payslips_loading: false, payslips_error: true };\r\n  }\r\n\r\n  // get pending payslips\r\n  if (action.type === GET_PENDING_PAYSLIP_BEGIN) {\r\n    return { ...state, pending_payslips_loading: true };\r\n  }\r\n  if (action.type === GET_PENDING_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      pending_payslips_loading: false,\r\n      pending_payslips: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PENDING_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      pending_payslips_loading: false,\r\n      pending_payslips_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslips\r\n  if (action.type === ADD_PAYSLIP_BEGIN) {\r\n    return { ...state, add_payslip_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslips_loading: false,\r\n      payslips: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIP_ERROR) {\r\n    return { ...state, payslips_loading: false, add_payslip_error: true };\r\n  }\r\n  // update payslips\r\n  if (action.type === UPDATE_PAYSLIP_BEGIN) {\r\n    return { ...state, update_payslip_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslips_loading: false,\r\n      single_payslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslip_loading: false,\r\n      update_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslips\r\n  if (action.type === DELETE_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: true,\r\n      delete_payslip_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: false,\r\n      delete_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: false,\r\n      delete_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslips\r\n  if (action.type === GET_SINGLE_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: true,\r\n      single_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: false,\r\n      single_payslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: false,\r\n      single_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch payslips\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: true,\r\n      singlebatch_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: false,\r\n      singlebatchpayslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: false,\r\n      singlebatch_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  // ------ payslip earnings\r\n  // get payslip earning\r\n  if (action.type === GET_PAYSLIPEARNINGS_BEGIN) {\r\n    return { ...state, payslipearnings_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPEARNINGS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipearnings_loading: false,\r\n      payslipearnings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYSLIPEARNINGS_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipearnings_loading: false,\r\n      payslipearnings_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslip earning\r\n  if (action.type === ADD_PAYSLIPEARNING_BEGIN) {\r\n    return { ...state, add_payslipearning_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslipearnings_loading: false,\r\n      payslipearnings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_payslipearnings_loading: false,\r\n      add_payslipearning_error: true,\r\n    };\r\n  }\r\n  // update payslip earning\r\n  if (action.type === UPDATE_PAYSLIPEARNING_BEGIN) {\r\n    return { ...state, update_payslipearning_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_payslipearnings_loading: false,\r\n      single_payslipearning: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslipearning_loading: false,\r\n      update_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip earning\r\n  if (action.type === DELETE_PAYSLIPEARNING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: true,\r\n      delete_payslipearning_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: false,\r\n      delete_payslipearning_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: false,\r\n      delete_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslip earning\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: true,\r\n      single_payslipearning_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: false,\r\n      single_payslipearning: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: false,\r\n      single_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  // ..........payslip deductions\r\n  // get payslip deduction\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_BEGIN) {\r\n    return { ...state, payslipdeductions_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipdeductions_loading: false,\r\n      payslipdeductions: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipdeductions_loading: false,\r\n      payslipdeductions_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslip deduction\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_BEGIN) {\r\n    return { ...state, add_payslipdeduction_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslipdeductions_loading: false,\r\n      payslipdeductions: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_payslipdeductions_loading: false,\r\n      add_payslipdeduction_error: true,\r\n    };\r\n  }\r\n  // update payslip deduction\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return { ...state, update_payslipdeduction_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_payslipdeductions_loading: false,\r\n      single_payslipdeduction: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslipdeduction_loading: false,\r\n      update_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip deduction\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: true,\r\n      delete_payslipdeduction_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: false,\r\n      delete_payslipdeduction_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: false,\r\n      delete_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslip deduction\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: true,\r\n      single_payslipdeduction_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: false,\r\n      single_payslipdeduction: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: false,\r\n      single_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  // ..........payslip items\r\n  // get payslip items\r\n  if (action.type === GET_PAYSLIPITEMS_BEGIN) {\r\n    return { ...state, payslipitems_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPITEMS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipitems_loading: false,\r\n      payslipitems: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYSLIPITEMS_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipitems_loading: false,\r\n      payslipitems_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslip item\r\n  if (action.type === ADD_PAYSLIPITEM_BEGIN) {\r\n    return { ...state, add_payslipitem_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIPITEM_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslipitem_loading: false,\r\n      payslipitem: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIPITEM_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_payslipitem_loading: false,\r\n      add_payslipitem_error: true,\r\n    };\r\n  }\r\n  // update payslip items\r\n  if (action.type === UPDATE_PAYSLIPITEM_BEGIN) {\r\n    return { ...state, update_payslipitem_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPITEM_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_payslipitem_loading: false,\r\n      single_payslipitem: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPITEM_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslipitem_loading: false,\r\n      update_payslipitem_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip item\r\n  if (action.type === DELETE_PAYSLIPITEM_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslipitem_loading: true,\r\n      delete_payslipitem_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIPITEM_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslipitem_loading: false,\r\n      delete_payslipitem_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIPITEM_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslipitem_loading: false,\r\n      delete_payslipitem_error: true,\r\n    };\r\n  }\r\n\r\n  // ..........payrun\r\n  // get payrun\r\n  if (action.type === GET_PAYRUN_BEGIN) {\r\n    return { ...state, payrun_loading: true };\r\n  }\r\n  if (action.type === GET_PAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payrun_loading: false,\r\n      payrun: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      payrun_loading: false,\r\n      payrun_error: true,\r\n    };\r\n  }\r\n\r\n  // get batch payrun\r\n  if (action.type === GET_BATCHPAYRUN_BEGIN) {\r\n    return { ...state, batchpayrun_loading: true };\r\n  }\r\n  if (action.type === GET_BATCHPAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      batchpayrun_loading: false,\r\n      batchpayrun: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_BATCHPAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      batchpayrun_loading: false,\r\n      batchpayrun_error: true,\r\n    };\r\n  }\r\n\r\n  // add payrun\r\n  if (action.type === ADD_PAYRUN_BEGIN) {\r\n    return { ...state, add_payrun_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payrun_loading: false,\r\n      single_payrun: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_payrun_loading: false,\r\n      add_payrun_error: true,\r\n    };\r\n  }\r\n  // update payslip items\r\n  if (action.type === UPDATE_PAYRUN_BEGIN) {\r\n    return { ...state, update_payrun_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_payrun_loading: false,\r\n      single_payrun: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payrun_loading: false,\r\n      update_payrun_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip item\r\n  if (action.type === DELETE_PAYRUN_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payrun_loading: true,\r\n      delete_payrun_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payrun_loading: false,\r\n      delete_payrun_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payrun_loading: false,\r\n      delete_payrun_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default payslips_reducer;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\reducers\\tables_reducer.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LoginForm.js",["1185","1186","1187","1188","1189","1190","1191","1192","1193"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Divider,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport img from \"../assets/AppSutLogo.jpg\";\r\nimport SigninForm from \"./SigninForm\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n\r\nconst LoginForm = () => {\r\n  const classes = useStyles();\r\n  const [openDialog, setOpenDialog] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setIsLoading(true);\r\n    return <DashboardAdmin />;\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {/* <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n        Signin\r\n      </Button> */}\r\n      <Paper variant=\"outlined\">\r\n        <img src={img} alt=\"logo\"/>\r\n      </Paper>\r\n      <Card className={classes.card}>\r\n        {/* <CardHeader\r\n          //  avatar={\r\n          //    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n          //      L\r\n          //    </Avatar>\r\n          //  }\r\n          className={classes.cardHeader}\r\n          title=\"AppSmiths\"\r\n          titleTypographyProps={{ variant: \"h3\" }}\r\n          subheader=\"Sutera Sdn Bhd\"\r\n          subheaderTypographyProps={{ variant: \"h4\" }}\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: 60,\r\n            // backgroundColor: \"background\",\r\n          }}\r\n        /> */}\r\n        <CardActionArea>\r\n          {/* <CardMedia\r\n            style={{ height: 0, paddingTop: \"56.25%\" }}\r\n            // className={classes.media}\r\n            image={img}\r\n            title=\"Contemplative Reptile\"\r\n          /> */}\r\n          <Divider className={classes.divider} />\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              className={classes.typography}\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              Login\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"textSecondary\"\r\n              component=\"h3\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              {/* Access to Admin dashboard */}\r\n            </Typography>\r\n            <SigninForm  />\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  app: {\r\n    height: \"100vh\",\r\n    width: \"500\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"300px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  card2: {\r\n    position: \"relative\",\r\n    width: \"400px\",\r\n    color: \"primary\",\r\n    //borderStyle: \"solid\",\r\n    //borderColor: \"blue\",\r\n    boxShadow:\r\n      \"rgba(255, 0, 0, 0.117647) 0px 1px 6px, rgba(255, 0, 0, 0.117647) 0px 1px 4px\",\r\n  },\r\n  cardHeader: {\r\n    display: \"flex\",\r\n    paddingBottom: \"10px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  typography: {\r\n    flexGrow: 1,\r\n    align: \"center\",\r\n  },\r\n  media2: {\r\n    margin: \"-70px auto 0\",\r\n    width: \"80%\",\r\n    height: 300,\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23)\",\r\n    position: \"relative\",\r\n    zIndex: 1000,\r\n    paddingTop: \"56.25%\",\r\n  },\r\n  card: {\r\n    width: 650,\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  media: {\r\n    height: \"800\",\r\n    width: \"100%\",\r\n    objectFit: \"cover\",\r\n    // marginLeft: '33%'\r\n    // paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: theme.palette.divider,\r\n    padding: 4,\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default LoginForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardAdmin.js",["1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example7\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleEmployeeStaff from \"./SingleEmployeeStaff old\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetls from \"./SingleDailyAllowsDetls\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\";\r\nimport Payrunbatch from \"./Payrunbatch\";\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  Expenses,\r\n  Payslip,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DashboardAdmin() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [login, setLogin] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  if (!login) {\r\n    return <Login setLogin={setLogin} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          setLogin={setLogin}\r\n          title=\"Human Resource Management System - AppSmiths Sutera Sdn Bhd\"\r\n        />\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/home\">\r\n              <Home />\r\n            </Route> */}\r\n            <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route>\r\n\r\n            <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/tables\">\r\n              <Tables />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route>\r\n            <Route exact path=\"/example\">\r\n              <Example />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployee />\r\n            </Route>\r\n            <Route exact path=\"/singleleave\">\r\n              <SingleLeave />\r\n            </Route>\r\n            <Route exact path=\"/singleexpense\">\r\n              <SingleExpense />\r\n            </Route>\r\n            <Route exact path=\"/error\">\r\n              <Error />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardManager.js",["1207"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\n\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example7\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetls from \"./SingleDailyAllowsDetls\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport UserAccessTable from \"./UserAccessTable\"\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\"\r\nimport Payrunbatch from \"./Payrunbatch\"\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  Expenses,\r\n  Payslip,\r\n  UserAccess,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DashboardMain() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [login, setLogin] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  if (!login) {\r\n    return <Login setLogin={setLogin} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          setLogin={setLogin}\r\n          title=\"Human Resource Management System - AppSmiths Sutera Sdn Bhd\"\r\n        />\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/home\">\r\n              <Home />\r\n            </Route> */}\r\n            <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route>\r\n            <Route exact path=\"/payroll\">\r\n              <Payroll />\r\n            </Route>\r\n            <Route exact path=\"/payslip\">\r\n              <Payslip />\r\n            </Route>\r\n            <Route exact path=\"/singlepayslip\">\r\n              <SinglePayslip />\r\n            </Route>\r\n            <Route exact path=\"/batchpayslips\">\r\n              <BatchPayslips />\r\n            </Route>\r\n            <Route exact path=\"/leave\">\r\n              <Leave />\r\n            </Route>\r\n            <Route exact path=\"/payrun\">\r\n              <Payrun />\r\n            </Route>\r\n            <Route exact path=\"/payrunbatch\">\r\n              <Payrunbatch />\r\n            </Route>\r\n            <Route exact path=\"/dailyallowances\">\r\n              <DailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowsdetlstable\">\r\n              <SingleDailyAllowsDetls />\r\n            </Route>\r\n            <Route exact path=\"/expenses\">\r\n              <Expenses />\r\n            </Route>\r\n            <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/useraccess\">\r\n              <UserAccessTable />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/tables\">\r\n              <Tables />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route>\r\n            <Route exact path=\"/example\">\r\n              <Example />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployee />\r\n            </Route>\r\n            <Route exact path=\"/singleleave\">\r\n              <SingleLeave />\r\n            </Route>\r\n            <Route exact path=\"/singleexpense\">\r\n              <SingleExpense />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowance\">\r\n              <SingleDailyAllowance />\r\n            </Route>\r\n            <Route exact path=\"/batchdailyallowances\">\r\n              <BatchDailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/error\">\r\n              <Error />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardStaff.js",["1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\n\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example8\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleEmployeeStaff from \"./SingleEmployeeStaff\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetlsStaff from \"./SingleDailyAllowsDetlsStaff\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\";\r\nimport Payrunbatch from \"./Payrunbatch\";\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  LeaveStaff,\r\n  TrainingsStaff,\r\n  ExpensesStaff,\r\n  PayslipStaff,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowancesStaff,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DashboardMain() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          title=\"AppSmiths Sutera Sdn Bhd\"\r\n        />\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/home\">\r\n              <Home />\r\n            </Route> */}\r\n            {/* <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route> */}\r\n            <Route exact path=\"/payroll\">\r\n              <Payroll />\r\n            </Route>\r\n            <Route exact path=\"/payslips\">\r\n              <PayslipStaff />\r\n            </Route>\r\n            <Route exact path=\"/singlepayslip\">\r\n              <SinglePayslip />\r\n            </Route>\r\n            <Route exact path=\"/batchpayslips\">\r\n              <BatchPayslips />\r\n            </Route>\r\n            <Route exact path=\"/leave\">\r\n              <LeaveStaff />\r\n            </Route>\r\n            <Route exact path=\"/trainings\">\r\n              <TrainingsStaff />\r\n            </Route>\r\n            {/* <Route exact path=\"/payrun\">\r\n              <Payrun />\r\n            </Route> */}\r\n            {/* <Route exact path=\"/payrunbatch\">\r\n              <Payrunbatch />\r\n            </Route> */}\r\n            <Route exact path=\"/dailyallowances\">\r\n              <DailyAllowancesStaff />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowsdetlstable\">\r\n              <SingleDailyAllowsDetlsStaff />\r\n            </Route>\r\n            <Route exact path=\"/expenses\">\r\n              <ExpensesStaff />\r\n            </Route>\r\n            {/* <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/tables\">\r\n              <Tables />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route> */}\r\n            <Route exact path=\"/example\">\r\n              <Example />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployeeStaff />\r\n            </Route>\r\n            <Route exact path=\"/singleleave\">\r\n              <SingleLeave />\r\n            </Route>\r\n            <Route exact path=\"/singleexpense\">\r\n              <SingleExpense />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowance\">\r\n              <SingleDailyAllowance />\r\n            </Route>\r\n            <Route exact path=\"/batchdailyallowances\">\r\n              <BatchDailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/error\">\r\n              <Error />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Appbanner.js",["1219","1220","1221","1222"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToApplication from \"@material-ui/icons/ExitToApp\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useUser} from \"./user/useUser\"\r\n\r\nconst drawerWidth = 255;\r\n\r\nconst Appbanner = ({ handleDrawerOpen, handleDrawerClose, open, title }) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { user, clearUser} = useUser()\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const handleExit = (e) => {\r\n    e.preventDefault();\r\n    setLoginLevel({ ...loginLevel, login: false });\r\n    clearUser()\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <div>\r\n          {loginLevel.loginUser && <h3>Welcome {loginLevel.loginUser}!</h3>}\r\n        </div>\r\n        {/* <IconButton color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n        <Tooltip title=\"Logout\">\r\n          <IconButton color=\"inherit\" onClick={(e) => handleExit(e)}>\r\n            <ExitToApplication />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default Appbanner;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Example7.js",["1223","1224","1225","1226","1227","1228","1229","1230"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport { Paper, Grid, Divider, TextField } from \"@material-ui/core\";\r\nimport { employees_url } from \"../utils/constants\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\n// const loadEmp = async () =>\r\n//   await fetch(employees_url)\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst loadEmp = async () => {\r\n  const { data } = await axios.get(employees_url);\r\n  return data;\r\n};\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [paydata, setPaydata] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n  const { data, error, isLoading } = useAsync({ promiseFn: loadEmp });\r\n\r\n  const handleClick = () => {\r\n    \r\n  }\r\n\r\n  const handleButtonClick = (index) => {\r\n    const newData = data[index]\r\n    const { id, name } = data[index]\r\n    setPaydata(()=>{return [...paydata,newData.map((item)=>item.name)]})\r\n    console.log(\"paydata\", paydata, name, newData)\r\n  };\r\n\r\n  if (isLoading) return \"Loading...\";\r\n  if (error) return `Something went wrong: ${error.message}`;\r\n  if (data) {\r\n    // const empdata = data.map((r) => {\r\n    //   return { ...r };\r\n    // });\r\n    setPaydata(()=>{return [...paydata,data.map((item)=>{return {...item}})]})\r\n    console.log(\"Data\", data, paydata);\r\n    const { name, basic_salary } = paydata[value];\r\n    return (\r\n      <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <section className={classes.section}>\r\n          <Grid\r\n            direction=\"row\"\r\n            container\r\n            spacing={1}\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <Grid container item sm={2} direction=\"column\" align=\"left\">\r\n              {paydata.map((item, index) => {\r\n                console.log(\"item\", item, index);\r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    onClick={(e) => {\r\n                      setValue(index);\r\n                      handleButtonClick(index);\r\n                    }}\r\n                    className={`classes.jobbtn`}\r\n                    // ${index === value && \"activebtn\"} `}\r\n                  >\r\n                    <h3>{item.name}</h3>\r\n                  </button>\r\n                );\r\n              })}\r\n            </Grid>\r\n            <Divider\r\n              orientation=\"vertical\"\r\n              flexItem\r\n              style={{ background: \"white\" }}\r\n            />\r\n            <Grid container item sm={8}>\r\n              <article className={classes.jobinfo}>\r\n                <h3>{name}</h3>\r\n                <form>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    variant=\"filled\"\r\n                    type=\"name\"\r\n                    required\r\n                    style={{ width: 350 }}\r\n                    value={name}\r\n                  />\r\n                  <TextField\r\n                    label=\"Basic Salary\"\r\n                    variant=\"filled\"\r\n                    type=\"currency\"\r\n                    required\r\n                    style={{ width: 350 }}\r\n                    value={basic_salary}\r\n                  />\r\n                  <button onClick={(e) => handleClick(e)}>Submit</button>\r\n                </form>\r\n              </article>\r\n            </Grid>\r\n          </Grid>\r\n        </section>\r\n      </Paper>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"70vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DashboardAdminManager.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SideDrawer.js",["1231","1232","1233","1234","1235","1236","1237","1238","1239","1240"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nimport MenuListItems from \"./MenuListItems\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuListItemsStaff from \"./MenuListItemsStaff\";\r\nimport MenuListItemsAdmin from \"./MenuListItemsAdmin\";\r\nimport MenuListItemsAdminManager from \"./MenuListItemsAdminManager\";\r\nimport MenuListItemsManager from \"./MenuListItemsManager\";\r\nimport headerlogo from \"../assets/headerlogo.png\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst SideDrawer = ({ HandleDrawerOpen, handleDrawerClose, open }) => {\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const SwitchCase = () => {\r\n  \r\n    switch (loginLevel.loginLevel) {\r\n      case \"Staff\":\r\n        return <MenuListItemsStaff />;\r\n      case \"Admin\":\r\n        return <MenuListItemsAdmin />;\r\n      case \"AdminManager\":\r\n        return <MenuListItemsAdminManager />;\r\n      case \"Manager\":\r\n       return <MenuListItemsManager />;\r\n      default:\r\n        return \"You are not authorised user!\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        {/* \"flex-end\" */}\r\n\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>\r\n          <SwitchCase />\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      //changing the sidebar hide width\r\n      width: theme.spacing(7),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 1150,\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default SideDrawer;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleEmployee.js",["1241"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport EmployeeFormNew from \"./EmployeeFormNew\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleEmployee = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { isEditing } = useEmployeesContext();\r\n  if (isEditing) {\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n\r\n        <div className={classes.appBarSpacer}>\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n              {/* <Grid item xs={12} md={8} lg={9}> */}\r\n              <Grid item xs={12}>\r\n                <Paper className={fixedHeightPaper}>\r\n                  <Link to=\"/allemployees\">\r\n                    <div>\r\n                      <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                    </div>\r\n                  </Link>\r\n                  <div>\r\n                    {/* <ToolbarHeader title={title} /> */}\r\n\r\n                    <EmployeeForm />\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\nreturn (\r\n  <div>\r\n    <CssBaseline />\r\n\r\n    <div className={classes.appBarSpacer}>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item xs={12} md={8} lg={9}> */}\r\n          <Grid item xs={12}>\r\n            <Paper className={fixedHeightPaper}>\r\n              <Link to=\"/allemployees\">\r\n                <div>\r\n                  <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                </div>\r\n              </Link>\r\n              <div>\r\n                {/* <ToolbarHeader title={title} /> */}\r\n\r\n                <EmployeeFormNew />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  </div>\r\n);\r\n  }\r\n  \r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleEmployee;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleLeave.js",["1242","1243","1244"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LeaveForm from \"./LeaveForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleLeave = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/leave\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <LeaveForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleLeave;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleDailyAllowance.js",["1245","1246","1247"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowanceForm from \"./DaiylAllowanceForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleDailyAllowance = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <DailyAllowanceForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleDailyAllowance;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleExpense.js",["1248","1249","1250"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleExpense = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/expenses\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <ExpenseForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleExpense;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleDailyAllowsDetls.js",["1251"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleDailyAllowsDetls = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n                  \r\n                  <DailyAllowsDetlsTable />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleDailyAllowsDetls;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\BatchDailyAllowances.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SinglePayslip.js",["1252","1253","1254"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PayslipForm from \"./PayslipForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\nconst SinglePayslip = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchpayslips\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <PayslipForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SinglePayslip;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payrun.js",["1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  TextField,\r\n  NativeSelect,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { payrunState, payrunIdState } from \"./data/atomdata\";\r\n\r\n//const drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst selectmonths = [\r\n  { mth: \"January\" },\r\n  { mth: \"February\" },\r\n  { mth: \"March\" },\r\n  { mth: \"April\" },\r\n  { mth: \"May\" },\r\n  { mth: \"June\" },\r\n  { mth: \"July\" },\r\n  { mth: \"August\" },\r\n  { mth: \"September\" },\r\n  { mth: \"October\" },\r\n  { mth: \"November\" },\r\n  { mth: \"December\" },\r\n];\r\n\r\nconst Payrun = () => {\r\n  let history = useHistory();\r\n  let date = new Date();\r\n  let longMonth = date.toLocaleString(\"en-us\", { month: \"long\" });\r\n\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loadPaybatch, setLoadPaybatch] = useState(false);\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadUnpaidExpenses, expenses, unpaidexpenses, updateExpense } =\r\n    useExpensesContext();\r\n  const { unpaiddailyallows, loadUnpaidDailyAllows, updateDailyAllowance } =\r\n    useDailyAllowancesContext();\r\n  const {\r\n    addPayrun,\r\n    getPayrun,\r\n    payrun,\r\n    payrun_loading,\r\n    addPayslip,\r\n    resetPayslipsData,\r\n    singlebatch_payslip_loading,\r\n    setPayslipPeriod,\r\n  } = usePayslipsContext();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errornoselect, setErrornoselect] = useState(false);\r\n  const [isPayrunExist, setIsPayrunExist] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!payrun_loading) {\r\n      setLoadPaybatch(false);\r\n    }\r\n  }, [loadPaybatch]);\r\n\r\n  function formatDate(string) {\r\n    var options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\r\n  }\r\n\r\n  function formatPayrun() {\r\n    const yy =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    const mm = input.fromdate.substring(5, 7);\r\n    const d = input.fromdate;\r\n  }\r\n\r\n  const payrunExists = (data) => {\r\n    return payrun.some(function (el) {\r\n      return el.payrun === data;\r\n    });\r\n  };\r\n  const handleChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePayrunSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPayrunId(\"\");\r\n    var count = employees.reduce((acc, r) => {\r\n      if (r.tableData.checked) {\r\n        return acc + 1;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    //console.log(\"count\", count);\r\n    if (count === 0) {\r\n      setErrornoselect(true);\r\n      setTimeout(() => {\r\n        setErrornoselect(false);\r\n      }, 3000);\r\n      return null;\r\n    }\r\n\r\n    const period =\r\n      formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\r\n    const payrundata =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    setInput({ ...input, period: period, payrun: payrundata });\r\n    formatPayrun();\r\n    setPayslipPeriod(payrundata);\r\n    const isExist = payrunExists(payrundata);\r\n\r\n    if (isExist) {\r\n      //console.log(\"exist\");\r\n      setIsPayrunExist(true);\r\n      setAlert(true);\r\n    } else {\r\n      //console.log(\"add\");\r\n      add_Payrun(period, payrundata);\r\n      checkSelectedEmployees(period, payrundata);\r\n      setIsPayrunExist(false);\r\n      setAlert(true);\r\n      setLoadPaybatch(true);\r\n    }\r\n  };\r\n\r\n  const checkSelectedEmployees = (period, payrun) => {\r\n    //console.log(\"payrun\", payrun, period);\r\n    resetPayslipsData();\r\n    employees &&\r\n      employees.forEach((emp, index) => {\r\n        if (emp.tableData.checked) {\r\n          let exp = 0;\r\n          if (unpaidexpenses) {\r\n            unpaidexpenses\r\n              .filter((r) => r.empid === emp.id)\r\n              .map((i) => {\r\n                updateExpense({ id: i.id, payrun: payrun });\r\n                return (exp = exp + i.amount);\r\n              });\r\n          }\r\n          let allows = 0;\r\n          if (unpaiddailyallows) {\r\n            unpaiddailyallows\r\n              .filter((r) => r.empid === emp.id)\r\n              .map((i) => {\r\n                updateDailyAllowance({ id: i.id, payrun: payrun });\r\n                return (allows = allows + i.amount);\r\n              });\r\n          }\r\n\r\n          const {\r\n            id,\r\n            name,\r\n            bank_name,\r\n            bank_acno,\r\n            basic_salary,\r\n            tap_acno,\r\n            scp_acno,\r\n          } = emp;\r\n          const tmptotalallows = allows + exp;\r\n          const tmptotalTAP = Math.ceil(basic_salary * 0.05);\r\n          const tmptotalSCP =\r\n            Math.round((basic_salary + Number.EPSILON) * 0.035 * 100) / 100;\r\n          const tmpnettpay =\r\n            basic_salary + tmptotalallows - tmptotalTAP - tmptotalSCP;\r\n          const data = {\r\n            name: name,\r\n            period: period,\r\n            pay_date: input.pay_date,\r\n            payrun: payrun,\r\n            wages: basic_salary,\r\n            nett_pay: tmpnettpay,\r\n            bank_name: bank_name,\r\n            bank_acno: bank_acno,\r\n            tap_acno: tap_acno,\r\n            tap_amount: tmptotalTAP,\r\n            scp_acno: scp_acno,\r\n            scp_amount: tmptotalSCP,\r\n            total_allowances: tmptotalallows,\r\n            total_deductions: 0,\r\n            empid: id,\r\n            status: \"Pending\",\r\n            allows_type1: \"Site Allowances\",\r\n            allows_type1amt: allows,\r\n            allows_type2: \"Expenses Claims\",\r\n            allows_type2amt: exp,\r\n            allows_type3: \" \",\r\n            allows_type3amt: 0,\r\n            allows_type4: \" \",\r\n            allows_type4amt: 0,\r\n            allows_type5: \" \",\r\n            allows_type5amt: 0,\r\n            allows_type6: \" \",\r\n            allows_type6amt: 0,\r\n            allows_type7: \" \",\r\n            allows_type7amt: 0,\r\n            allows_type8: \" \",\r\n            allows_type8amt: 0,\r\n            deducts_type1: \" \",\r\n            deducts_type1amt: 0,\r\n            deducts_type2: \" \",\r\n            deducts_type2amt: 0,\r\n            deducts_type3: \" \",\r\n            deducts_type3amt: 0,\r\n            deducts_type4: \" \",\r\n            deducts_type4amt: 0,\r\n            deducts_type5: \" \",\r\n            deducts_type5amt: 0,\r\n            deducts_type6: \" \",\r\n            deducts_type6amt: 0,\r\n            deducts_type7: \" \",\r\n            deducts_type7amt: 0,\r\n            deducts_type8: \" \",\r\n            deducts_type8amt: 0,\r\n          };\r\n          addPayslip({ ...data });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  const add_Payrun = (period, payrun) => {\r\n    //update payrun\r\n    addPayrun({\r\n      pay_freq: input.payfreq,\r\n      from_date: input.fromdate,\r\n      to_date: input.todate,\r\n      pay_date: input.paydate,\r\n      period: period,\r\n      payrun: payrun,\r\n      status: \"Pending\",\r\n    });\r\n    getPayrun();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n    loadUnpaidExpenses();\r\n    loadUnpaidDailyAllows();\r\n    getPayrun();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadUnpaidDailyAllows();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"useEffect here\", input.payrun);\r\n\r\n  //   // getSingleBatchPayslip(input.payrun);\r\n  //   if (singlebatchpayslip) {\r\n  //     checkSelectedEmployees(input.period, input.payrun);\r\n  //     setLoadPaybatch(false);\r\n  //   }\r\n  // }, [loadPaybatch]);\r\n\r\n  //   useEffect(() => {\r\n  //     if (input.period && input.payrun) {\r\n  //       //add_Payrun();\r\n\r\n  //       setAlert(true);\r\n  //     }\r\n  //   }, [input]);\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          // style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            style={{ border: \"1px solid white\" }}\r\n            direction=\"column\"\r\n            align=\"left\"\r\n          >\r\n            <article className={classes.jobinfo}>\r\n              <h2>Pay Run</h2>\r\n              <form onSubmit={handlePayrunSubmit}>\r\n                <div>\r\n                  {/* <InputLabel\r\n                    htmlFor=\"deduct-customized-native-simple\"\r\n                    className={classes.formLabel}\r\n                  >\r\n                    Copy From\r\n                  </InputLabel>\r\n                  <NativeSelect\r\n                    name=\"copyfrom\"\r\n                    value={\"New\"}\r\n                    style={{\r\n                      padding: 4,\r\n                      marginLeft: 5,\r\n                      width: \"100%\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    <option value=\"\">New</option>\r\n                    {payrun.map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.payrun}>\r\n                          {row.payrun}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect> */}\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Pay Frequency\"\r\n                    variant=\"filled\"\r\n                    required\r\n                    defaultValue=\"Monthly\"\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"payfreq\"\r\n                    value={input.payfreq}\r\n                    onChange={(e) => handleChange(e)}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Weekly\">Weekly</MenuItem> */}\r\n                    {/* <MenuItem value=\"Monthly\">Monthly</MenuItem> */}\r\n                  </TextField>\r\n                </div>\r\n                {/* <div>\r\n                  <InputLabel\r\n                    htmlFor=\"deduct-customized-native-simple\"\r\n                    className={classes.formLabel}\r\n                  >\r\n                    Month\r\n                  </InputLabel>\r\n                  <NativeSelect\r\n                    name=\"selectmonth\"\r\n                    defaultValue={longMonth}\r\n                    // value={input.selectmonth}\r\n                    style={{\r\n                      padding: 4,\r\n                      marginLeft: 5,\r\n                      width: \"100%\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    {selectmonths.map((row, i) => {\r\n                      return (\r\n                        <option key={i} value={row.mth}>\r\n                          {row.mth}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect>\r\n                </div> */}\r\n                <div>\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    variant=\"filled\"\r\n                    name=\"fromdate\"\r\n                    type=\"date\"\r\n                    value={input.fromdate}\r\n                    required\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"todate\"\r\n                    value={input.todate}\r\n                    required\r\n                    onChange={(e) => handleChange(e)}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Payment Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"paydate\"\r\n                    value={input.paydate}\r\n                    required\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {alert && !isPayrunExist && (\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={handleNext}\r\n                    >\r\n                      Next <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {alert && !isPayrunExist && !singlebatch_payslip_loading && (\r\n                    <h3>New Payrun being added!</h3>\r\n                  )}\r\n                  {alert && isPayrunExist && (\r\n                    <h3>This payrun already existed!</h3>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {error && <h3>This Payrun period already existed!</h3>}\r\n                  {errornoselect && <h3>You must select employees!</h3>}\r\n                </div>\r\n              </form>\r\n            </article>\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ background: \"white\" }}\r\n          />\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            style={{ border: \"1px solid white\" }}\r\n            align=\"right\"\r\n          >\r\n            <MaterialTable\r\n              columns={columns}\r\n              data={employees}\r\n              title=\"Payrun History\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n                selection: true,\r\n                headerStyle: {\r\n                  backgroundColor: \"orange\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"95vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  formLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    marginLeft: 8,\r\n    marginTop: 5,\r\n  },\r\n}));\r\n\r\nexport default Payrun;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payrunbatch.js",["1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { Heading, Text} from \"@chakra-ui/react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const componentRef = useRef();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    payrun,\r\n    getSingleBatchPayslip,\r\n    singlebatchpayslip,\r\n    payslip_period,\r\n    updatePayslip,\r\n    updatePayrun,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const payrundata = useRecoilValue(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState([]);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [showSumm, setShowSumm] = useState(false);\r\n  const [showSaveAlert, setShowSaveAlert] = useState(false);\r\n  const [showVerifyAlert, setShowVerifyAlert] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    setShowSumm(!showSumm);\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      singlebatchpayslip.forEach((rec) => {\r\n        const { id, rec_id, tableData, ...fields } = rec;\r\n        updatePayslip({ id, ...fields });\r\n      });\r\n    }\r\n    //update payrun\r\n    handleSavePayrun();\r\n    setShowSaveAlert(true);\r\n    setTimeout(() => {\r\n      setShowSaveAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      payrun\r\n        .filter((r) => r.payrun === payslip_period)\r\n        .map((rec) => {\r\n          //update payrun\r\n          return updatePayrun({\r\n            id: rec.id,\r\n            totalpayroll: payrundata.totalpayroll,\r\n            totalwages: payrundata.totalwages,\r\n            totaltap: payrundata.totaltap,\r\n            totalscp: payrundata.totalscp,\r\n            totalallows: payrundata.totalallows,\r\n            totaldeducts: payrundata.totaldeducts,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrunStatus(\"Verified\");\r\n    updatePayrun({ id: payrunId, status: \"Verified\" });\r\n    setShowVerifyAlert(true);\r\n    setTimeout(() => {\r\n      setShowVerifyAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    setFormdata({ ...paydata });\r\n    setFormdata({ ...paydata });\r\n    setIsCalc(true);\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  if (singlebatch_payslip_loading) {\r\n    return (\r\n      <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <div>\r\n          <h2>Loading...Payslips</h2>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  if (singlebatch_payslip_error) {\r\n    return (\r\n      <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <div>\r\n          <h2>Internet connection problem!</h2>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper\r\n      className={fixedHeightPaper}\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <section className={classes.section}>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <Heading as=\"h4\" size=\"md\">\r\n              Employees\r\n            </Heading>\r\n          </Grid>\r\n          <Grid item sm={10} style={{ border: \"1px solid black\" }}>\r\n            <div\r\n              style={{\r\n                marginLeft: 14,\r\n                display: \"inline-flex\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  marginLeft: 14,\r\n                  display: \"inline-flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Heading as=\"h4\" size=\"md\">\r\n                  Payroll Details\r\n                </Heading>\r\n              </div>\r\n\r\n              <div style={{ marginTop: 10, marginLeft: 20 }}>\r\n                {showSaveAlert && (\r\n                  <Alert severity=\"success\">Changes have been saved!</Alert>\r\n                )}\r\n                {showVerifyAlert && (\r\n                  <Alert severity=\"success\">Payslips has been verified!</Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {singlebatchpayslip &&\r\n                singlebatchpayslip.map((item, index) => {\r\n                  return (\r\n                    <div>\r\n                      <Button\r\n                        className={classes.empbtn}\r\n                        // ${index === value && \"activebtn\"}\r\n                        onClick={(e) => {\r\n                          setRowIndex(index);\r\n                          handleEmpButtonClick(index);\r\n                        }}\r\n                      >\r\n                        <div key={item.id}> {item.name}</div>\r\n                      </Button>\r\n                      <Divider\r\n                        variant=\"fullWidth\"\r\n                        className={classes.divider}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={10}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              style={{ border: \"1px solid black\" }}\r\n            >\r\n              <Grid\r\n                item\r\n                sm={12}\r\n                align=\"left\"\r\n                style={{ border: \"1px solid black\" }}\r\n              >\r\n                <div style={{ padding: 5 }}>\r\n                  <ButtonGroup\r\n                    color=\"primary\"\r\n                    aria-label=\"outlined primary button group\"\r\n                  >\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={(e) => handleShowSumm(e)}\r\n                      style={{ marginLeft: 10 }}\r\n                    >\r\n                      Details <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={(e) => handleShowSumm(e)}\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 10 }}\r\n                    >\r\n                      Summary <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 5 }}\r\n                      onClick={(e) => handleSavePayslips(e)}\r\n                    >\r\n                      Save <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    {/* <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 5 }}\r\n                      onClick={(e) => handlePrintSummary(e)}\r\n                    >\r\n                      Print <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button> */}\r\n                    {payrunId && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        style={{ marginLeft: 5 }}\r\n                        onClick={(e) => handleVerifyPayslips(e)}\r\n                      >\r\n                        Verify <Icon className={classes.rightIcon}>send</Icon>\r\n                      </Button>\r\n                    )}\r\n                  </ButtonGroup>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            {!showSumm && (\r\n              <PayForm\r\n                formdata={formdata}\r\n                setFormdata={setFormdata}\r\n                loadFormdata={loadFormdata}\r\n                setLoadFormdata={setLoadFormdata}\r\n                payitems={payitems}\r\n                setLoadUpdatedata={setLoadUpdatedata}\r\n                rowindex={rowindex}\r\n                isCalc={isCalc}\r\n                setIsCalc={setIsCalc}\r\n              />\r\n            )}\r\n            {showSumm && (\r\n              <PaySummary\r\n                payrundata={payrundata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  empscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  empcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  empbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  empinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\data\\atomdata.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\index.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SigninForm.js",["1278","1279","1280","1281","1282","1283","1284","1285","1286"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, ButtonGroup, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { setStoredUser } from \"./user-storage\";\r\nimport { useUser } from \"./user/useUser\";\r\n\r\nconst SigninForm = () => {\r\n  const classes = useStyles();\r\n  const { user } = useUser();\r\n  const { employees } = useEmployees();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [alert, setAlert] = useState(true);\r\n  //const [isLoading, setIsLoading] = useState(false);\r\n  console.log(\"user\", user);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const {\r\n    loadEmployees,\r\n    setEditEmployeeID,\r\n    employees_loading,\r\n    employees_error,\r\n  } = useEmployeesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const emp = employees\r\n      .filter((item) => item.email === email)\r\n      .map((row) => {\r\n        return {\r\n          id: row.id,\r\n          name: row.name,\r\n          email: row.email,\r\n          password: row.password,\r\n          role: role,\r\n          leave_bal: row.leave_bal,\r\n          siteallows_fee: row.siteallows_fee,\r\n          perdiem_fee: row.perdiem_fee,\r\n          reporting_to: row.reporting_to,\r\n        };\r\n      });\r\n    console.log(\"emp\", emp);\r\n    if (emp[0].email === email && emp[0].password === password) {\r\n      setLoginLevel({\r\n        ...loginLevel,\r\n        loginUser: emp[0].name,\r\n        loginUserId: emp[0].id,\r\n        loginLevel: role,\r\n        loginEmail: email,\r\n        login: true,\r\n        leave_bal: emp[0].leave_bal,\r\n        siteallows_fee: emp[0].siteallows_fee,\r\n        perdiem_fee: emp[0].perdiem_fee,\r\n        reporting_to: emp[0].reporting_to,\r\n      });\r\n      setEditEmployeeID(emp[0].id);\r\n      setPassword(\"\");\r\n      setStoredUser(emp[0]);\r\n\r\n      console.log(\"save user\", loginLevel);\r\n    } else {\r\n      setAlert(false);\r\n      setTimeout(() => {\r\n        setAlert(true);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleStaffClick = (e) => {\r\n    console.log(\"Staff\");\r\n    e.preventDefault();\r\n    setRole(\"Staff\");\r\n    handleSubmit(e);\r\n  };\r\n  const handleAdminClick = (e) => {\r\n    e.preventDefault();\r\n    setRole(\"Admin\");\r\n    handleSubmit(e);\r\n  };\r\n  const handleAdminManagerClick = (e) => {\r\n    e.preventDefault();\r\n    setRole(\"AdminManager\");\r\n    handleSubmit(e);\r\n  };\r\n  const handleManagerClick = (e) => {\r\n    e.preventDefault();\r\n    setRole(\"Manager\");\r\n    handleSubmit(e);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmit}>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <TextField\r\n          label=\"Email\"\r\n          variant=\"filled\"\r\n          type=\"email\"\r\n          required\r\n          style={{ width: 350 }}\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          variant=\"filled\"\r\n          type=\"password\"\r\n          style={{ width: 350 }}\r\n          required\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {/* <ButtonGroup> */}\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={(e) => setRole(\"Staff\")}\r\n        >\r\n          Staff\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={(e) => setRole(\"Admin\")}\r\n        >\r\n          Admin\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={(e) => setRole(\"AdminManager\")}\r\n        >\r\n          Admin Manager\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={(e) => setRole(\"Manager\")}\r\n        >\r\n          Manager\r\n        </Button>\r\n        {/* </ButtonGroup> */}\r\n      </div>\r\n      {!alert && <h3>Login Fail!</h3>}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"600px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default SigninForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleDailyAllowsDetlsStaff.js",["1287"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowsDetlsTableStaff from \"./DailyAllowsDetlsTableStaff\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleDailyAllowsDetlsStaff = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n                 \r\n                  <DailyAllowsDetlsTableStaff />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleDailyAllowsDetlsStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Example8.js",["1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useTable, usePagination } from \"react-table\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport { Paper, Grid, Divider, TextField } from \"@material-ui/core\";\r\nimport { employees_url } from \"../utils/constants\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\n// const loadEmp = async () =>\r\n//   await fetch(employees_url)\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst loadEmp = async () => {\r\n  const { data } = await axios.get(employees_url);\r\n  return data;\r\n};\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [paydata, setPaydata] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n  const { data, error, isLoading } = useAsync({ promiseFn: loadEmp });\r\n\r\n  const handleClick = () => {};\r\n\r\n  const handleButtonClick = (index) => {\r\n    const newData = data[index];\r\n    const { id, name } = data[index];\r\n    setPaydata(() => {\r\n      return [...paydata, newData.map((item) => item.name)];\r\n    });\r\n    console.log(\"paydata\", paydata, name, newData);\r\n  };\r\n\r\n  if (isLoading) return \"Loading...\";\r\n  if (error) return `Something went wrong: ${error.message}`;\r\n  if (data) {\r\n    // const empdata = data.map((r) => {\r\n    //   return { ...r };\r\n    // });\r\n    // setPaydata(() => {\r\n    //   return [\r\n    //     ...paydata,\r\n    //     data.map((item) => {\r\n    //       return { ...item };\r\n    //     }),\r\n    //   ];\r\n    // });\r\n    // console.log(\"Data\", data, paydata);\r\n    // const { name, basic_salary } = paydata[value];\r\n    return (\r\n      <Paper className={fixedHeightPaper} style={{ backgroundColor: \"yellow\" }}>\r\n        <section className={classes.section}>\r\n          {/* <Grid\r\n            direction=\"row\"\r\n            container\r\n            spacing={1}\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <Grid container item sm={2} direction=\"column\" align=\"left\">\r\n              {paydata.map((item, index) => {\r\n                console.log(\"item\", item, index);\r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    onClick={(e) => {\r\n                      setValue(index);\r\n                      handleButtonClick(index);\r\n                    }}\r\n                    className={`classes.jobbtn`}\r\n                    // ${index === value && \"activebtn\"} `}\r\n                  >\r\n                    <h3>{item.name}</h3>\r\n                  </button>\r\n                );\r\n              })}\r\n            </Grid>\r\n            <Divider\r\n              orientation=\"vertical\"\r\n              flexItem\r\n              style={{ background: \"white\" }}\r\n            />\r\n            <Grid container item sm={8}>\r\n              <article className={classes.jobinfo}>\r\n                <h3>{name}</h3>\r\n                <form>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    variant=\"filled\"\r\n                    type=\"name\"\r\n                    required\r\n                    style={{ width: 350 }}\r\n                    value={name}\r\n                  />\r\n                  <TextField\r\n                    label=\"Basic Salary\"\r\n                    variant=\"filled\"\r\n                    type=\"currency\"\r\n                    required\r\n                    style={{ width: 350 }}\r\n                    value={basic_salary}\r\n                  />\r\n                  <button onClick={(e) => handleClick(e)}>Submit</button>\r\n                </form>\r\n              </article>\r\n            </Grid>\r\n          </Grid> */}\r\n        </section>\r\n        <div className=\"col-md-6 col-sm-6 col-lg-6 col-xl-3\">\r\n          <div className=\"card_dash_widget\">\r\n            <div className=\"card_body\">\r\n              <span className=\"dash_widget_icon\">\r\n                <i className=\"fa fa-folder-open-o\" />\r\n              </span>\r\n              <div className=\"dash_widget_info\">\r\n                <h3>44</h3>\r\n                <span>Projects</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  card_body: {\r\n    padding: \"0\",\r\n  },\r\n\r\n  section: {\r\n    width: \"70vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  dash_widget_icon: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"100%\",\r\n    color: \"#ff9b44\",\r\n    display: \"inline-block\",\r\n    float: \"left\",\r\n    fontSize: \"30px\",\r\n    height: \"60px\",\r\n    lineHeight: \"60px\",\r\n    marginRight: \"10px\",\r\n    textAlign: \"center\",\r\n    width: \"60px\",\r\n  },\r\n  dash_widget_info: {\r\n    textAlign: \"right\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItemsStaff.js",["1305","1306"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n//import LayersIcon from \"@material-ui/icons/Layers\";\r\n//import MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\n\r\nconst MenuListItemsStaff = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader inset className={classes.mainHeader}>\r\n        Staff\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/singleemployee\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Profile\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/trainings\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Trainings\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/payslips\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payslips\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItemsStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItems.js",["1307","1308"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader inset className={classes.mainHeader}>\r\n        Admin\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/payrun\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payrun\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/payslip\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payroll\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payroll\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n\r\n      <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"orange\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItemsManager.js",["1309","1310","1311","1312","1313"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\n\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader inset className={classes.mainHeader}>\r\n        Manager\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      {/* <Link to=\"/payrun\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payrun\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payrun\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n\r\n      <Link to=\"/useraccess\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"User Access Settings\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      {/* <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItemsAdmin.js",["1314","1315","1316","1317","1318","1319"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader inset className={classes.mainHeader}>\r\n        Admin\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n     \r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n     \r\n      <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeForm.js",["1320","1321","1322","1323","1324"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n\r\nimport { useAddEmployees } from \"./employees/useAddEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  address:\"\",\r\n  basic_salary: 0,\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  date_of_join: null,\r\n  date_of_resign: null,\r\n  designation: \"\",\r\n  department: \"\",\r\n  passportno: \"\",\r\n  passport_expirydate: null,\r\n  workpermitno: \"\",\r\n  workpermit_expirydate: null,\r\n  siteallows_fee: 0,\r\n  perdiem_fee: 0,\r\n  empno:\"\",\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  const classes = useStyles();\r\n  const {\r\n    isEditing,\r\n    single_employee,\r\n    updateEmployee,\r\n    addEmployee,\r\n    editEmployeeID,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n  const {\r\n    name,\r\n    ic_no,\r\n    gender,\r\n    age,\r\n    email,\r\n    address,\r\n    basic_salary,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_acno,\r\n    scp_acno,\r\n    date_of_join,\r\n    date_of_resign,\r\n    designation,\r\n    department,\r\n    passportno,\r\n    passport_expirydate,\r\n    workpermitno,\r\n    workpermit_expirydate,\r\n    siteallows_fee,\r\n    perdiem_fee,\r\n    empno,\r\n  } = single_employee || initial_values;\r\n  const addEmployees = useAddEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n   const [alert, setAlert] = useState(false);\r\n  const { handleSubmit, control } = useForm();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const onSubmit = (data) => {\r\n    if (isEditing) {\r\n      updateEmployees({ id: editEmployeeID, ...data });\r\n    } else {\r\n      addEmployees({ ...data });\r\n    }\r\n    // setAlert(true);\r\n    // setTimeout(() => {\r\n    //   setAlert(false);\r\n    // }, 3000);\r\n    //loadEmployees();\r\n    // <Alert severity=\"success\">\r\n    //   <AlertTitle>Success</AlertTitle>\r\n    //   This is a success alert — <strong>check it out!</strong>\r\n    // </Alert>;\r\n    //history.push(\"/allemployees\");\r\n  };\r\n\r\n  if (single_employee_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                EMPLOYEE FORM\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Divider className={classes.divider} />\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"margin-normal\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"empno\"\r\n                  control={control}\r\n                  defaultValue={empno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Emp No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"empno\"\r\n                        defaultValue={empno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={email}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        id=\"margin-normal\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"ic_no\"\r\n                  control={control}\r\n                  defaultValue={ic_no}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"IC No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"ic_no\"\r\n                        defaultValue={ic_no}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"gender\"\r\n                  control={control}\r\n                  defaultValue={gender}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Gender\"\r\n                        id=\"margin-normal\"\r\n                        name=\"gender\"\r\n                        defaultValue={gender}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"age\"\r\n                  control={control}\r\n                  defaultValue={age}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"standard-number\"\r\n                        name=\"age\"\r\n                        defaultValue={age}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"passportno\"\r\n                  control={control}\r\n                  defaultValue={passportno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"passportno\"\r\n                        defaultValue={passportno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"passport_expirydate\"\r\n                  control={control}\r\n                  defaultValue={passport_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport Expiry Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"passport_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={passport_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"address\"\r\n                  control={control}\r\n                  defaultValue={address}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        id=\"standard-address\"\r\n                        name=\"address\"\r\n                        defaultValue={address}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.divider} />\r\n            <div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"basic_salary\"\r\n                    control={control}\r\n                    defaultValue={basic_salary}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Basic Salary\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"basic_pay\"\r\n                          defaultValue={basic_salary}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"siteallows_fee\"\r\n                    control={control}\r\n                    defaultValue={siteallows_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Site Allowances Fee\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"siteallows_fee\"\r\n                          defaultValue={siteallows_fee}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"perdiem_fee\"\r\n                    control={control}\r\n                    defaultValue={perdiem_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Perdiem Fee\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"perdiem_fee\"\r\n                          defaultValue={perdiem_fee}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"margin-normal\"\r\n                        name=\"bank_name\"\r\n                        defaultValue={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"bank_acno\"\r\n                        defaultValue={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_acno\"\r\n                  control={control}\r\n                  defaultValue={tap_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"tap_acno\"\r\n                        defaultValue={tap_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"scp_acno\"\r\n                  control={control}\r\n                  defaultValue={scp_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"scp_acno\"\r\n                        defaultValue={scp_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"workpermitno\"\r\n                  control={control}\r\n                  defaultValue={workpermitno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"workpermitno\"\r\n                        defaultValue={workpermitno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"workpermit_expirydate\"\r\n                  control={control}\r\n                  defaultValue={workpermit_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit Expiry Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"workpermit_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={workpermit_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n              <div>\r\n                <Controller\r\n                  name=\"date_of_join\"\r\n                  control={control}\r\n                  defaultValue={date_of_join}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Joining Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"date_of_join\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_join}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"date_of_resign\"\r\n                  control={control}\r\n                  defaultValue={date_of_resign}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Resign Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"date_of_resign\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_resign}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"designation\"\r\n                  control={control}\r\n                  defaultValue={designation}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Designation\"\r\n                        id=\"margin-normal\"\r\n                        name=\"designation\"\r\n                        defaultValue={designation}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        {designations &&\r\n                          designations.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"department\"\r\n                  control={control}\r\n                  defaultValue={department}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Department\"\r\n                        id=\"margin-normal\"\r\n                        name=\"department\"\r\n                        defaultValue={department}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        {departments &&\r\n                          departments.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n\r\n      <div>\r\n        <Grid xs={12}>\r\n          <EmpFamily />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpEducations />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpExperiences />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpTrainings />\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveForm.js",["1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst initial_state = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst LeaveForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const [state, setState] = useState(initial_state);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control } = useForm();\r\n  const initialValues = Object.values(initial_state).join(\"\");\r\n  const { isLeaveEditing, editLeaveID } =\r\n    useLeavesContext();\r\n\r\n  const onSubmit = (data) => {\r\n    if (isLeaveEditing) {\r\n      updateLeaves({ id: editLeaveID, ...data });\r\n    } else {\r\n      addLeaves({ ...data, empid: loginLevel.loginUserId });\r\n    }\r\n\r\n    //history.push(\"/leave\");\r\n    handleDialogClose();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          LEAVE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Leave Application</Typography>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={loginLevel.loginUser}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={loginLevel.loginUser}\r\n                    //value={value}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    //select\r\n                  >\r\n                    {/* {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })} */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              // rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"from_date\"\r\n              control={control}\r\n              defaultValue={formdata.from_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal\"\r\n                    name=\"from_date\"\r\n                    defaultValue={formdata.from_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"to_date\"\r\n              control={control}\r\n              defaultValue={formdata.to_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    id=\"margin-normal\"\r\n                    type=\"date\"\r\n                    name=\"to_date\"\r\n                    defaultValue={formdata.to_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"To Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"leave_bal\"\r\n              control={control}\r\n              defaultValue={loginLevel.leave_bal}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    disable\r\n                    label=\"Leave Balance\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"leave_bal\"\r\n                    defaultValue={loginLevel.leave_bal}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={formdata.no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={formdata.no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"reason\"\r\n              control={control}\r\n              defaultValue={formdata.reason}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Reason\"\r\n                    id=\"margin-normal\"\r\n                    name=\"reason\"\r\n                    defaultValue={formdata.reason}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue={formdata.status}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={formdata.status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approve\">Approve</MenuItem>\r\n                    <MenuItem value=\"Reject\">Reject</MenuItem> */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default LeaveForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\MenuListItemsAdminManager.js",["1337","1338","1339","1340","1341"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader inset className={classes.mainHeader}>\r\n        Admin Manager\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      {/* <Link to=\"/payrun\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payrun\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      \r\n      <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payrun\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      {/* <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 20,\r\n    color: \"primary\",\r\n    //alignItems: \"left\",\r\n    //alignContent: \"left\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseForm.js",["1342","1343","1344","1345","1346","1347","1348","1349","1350"],"import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  remark: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const {\r\n    isExpenseEditing,\r\n    editExpenseID,\r\n  } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateExpenses({ id: editExpenseID, ...data });\r\n    } else {\r\n      addExpenses({ empid: loginLevel.loginUserId, ...data });\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          EXPENSES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Expense Claim Application</Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={loginLevel.loginUser}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal1\"\r\n                    name=\"name\"\r\n                    defaultValue={loginLevel.loginUser}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"date\"\r\n              control={control}\r\n              defaultValue={formdata.date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal2\"\r\n                    name=\"formdata.date\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"purchased_from\"\r\n              control={control}\r\n              defaultValue={formdata.purchased_from}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Purchased From\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"purchased_from\"\r\n                    defaultValue={formdata.purchased_from}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"description\"\r\n              control={control}\r\n              defaultValue={formdata.description}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Description\"\r\n                    id=\"margin-normal4\"\r\n                    name=\"description\"\r\n                    defaultValue={formdata.description}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"amount\"\r\n              control={control}\r\n              defaultValue={formdata.amount}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Amount\"\r\n                    type=\"number\"\r\n                    id=\"standard-number1\"\r\n                    name=\"amount\"\r\n                    defaultValue={formdata.amount}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"remark\"\r\n              control={control}\r\n              defaultValue={formdata.remark}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Remark\"\r\n                    id=\"margin-normal5\"\r\n                    name=\"remark\"\r\n                    defaultValue={formdata.remark}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue=\"Pending\"\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal6\"\r\n                    name=\"status\"\r\n                    defaultValue=\"Pending\"\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DaiylAllowanceForm.js",["1351"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  location: \"\",\r\n  manager_name: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  amount: 0,\r\n};\r\n\r\nconst DailyAllowanceForm = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    isDailyAllowanceEditing,\r\n    single_dailyallowance,\r\n    updateDailyAllowance,\r\n    addDailyAllowance,\r\n    editDailyAllowanceID,\r\n    loadDailyAllowances,\r\n    single_dailyallowance_loading,\r\n    dailyallowance_period,\r\n  } = useDailyAllowancesContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { name, period, location, manager_name, status, no_of_days, amount } =\r\n    single_dailyallowance || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    if (isDailyAllowanceEditing) {\r\n      updateDailyAllowance({ id: editDailyAllowanceID, ...data });\r\n    } else {\r\n      addDailyAllowance({ ...data });\r\n    }\r\n    loadDailyAllowances();\r\n    history.push(\"/batchdailyallowances\");\r\n  };\r\n\r\n  if (single_dailyallowance_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          DAILY ALLOWANCES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Daily Allowances Claim Application\r\n        </Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={name}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"period\"\r\n              control={control}\r\n              defaultValue={\r\n                isDailyAllowanceEditing ? period : dailyallowance_period\r\n              }\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Period\"\r\n                    id=\"margin-normal\"\r\n                    name=\"period\"\r\n                    defaultValue={\r\n                      isDailyAllowanceEditing ? period : dailyallowance_period\r\n                    }\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Period is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"location\"\r\n              control={control}\r\n              defaultValue={location}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    id=\"margin-normal\"\r\n                    name=\"location\"\r\n                    defaultValue={location}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Purchased Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"manager_name\"\r\n              control={control}\r\n              defaultValue={manager_name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Manager Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"manager_name\"\r\n                    defaultValue={manager_name}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"amount\"\r\n              control={control}\r\n              defaultValue={amount}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Amount\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"amount\"\r\n                    defaultValue={amount}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue=\"Pending\"\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                    <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default DailyAllowanceForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowsDetlsTable.js",["1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button } from \"@material-ui/core\";\r\nimport {\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  loginLevelState,\r\n  allowsDataState,\r\n  empidState,\r\n  allowsPeriodState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowsDetlsSelector } from \"./data/selectordata\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    cellStyle: {\r\n      width: 120,\r\n      maxWidth: 120,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"District\", field: \"district\" },\r\n  { title: \"Operation Type\", field: \"typeoperation\" },\r\n  { title: \"Client\", field: \"client\" },\r\n  { title: \"Location/Rig\", field: \"location\" },\r\n  { title: \"Ticket No/Job No\", field: \"jobno\" },\r\n  { title: \"Crew Operation\", field: \"crewoperation\" },\r\n  {\r\n    title: \"Job Bonus\",\r\n    field: \"jobbonus\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n  {\r\n    title: \"Per Diem\",\r\n    field: \"perdiem\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n];\r\n\r\nexport default function DailyAllowsDetlsTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  // const [allowsDetlsTable, setAllowsDetlsTable] =\r\n  // useRecoilState(allowsDataDetlsState);\r\n  //console.log(\"detlstable\", singlebatch_dailyallowsdetl);\r\n  //const [allowsDetlsdata, setAllowsDetilsdata] = useRecoilStateLoadable(fetchDailyAllowsDetlsSelector);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const {\r\n    dailyallowsdetls,\r\n    addDailyAllowsDetl,\r\n    dailyallowsdetls_loading,\r\n    updateDailyAllowsDetl,\r\n    deleteDailyAllowsDetl,\r\n    getSingleBatchDailyAllowsDetl,\r\n    singlebatch_dailyallowsdetl,\r\n    singlebatch_dailyallowsdetl_loading,\r\n    dailyallowance_period,\r\n    single_dailyallowance,\r\n    editDailyAllowanceID,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchDailyAllowsDetl(allows_empid, allows_period);\r\n  }, []);\r\n\r\n  // const add_DailyAllowsDetl = async (data) => {\r\n  //   console.log(\"add\", data);\r\n  //   const { description, amount } = data;\r\n  //   addDailyAllowsDetl({\r\n  //     description: description,\r\n  //     amount: amount,\r\n  //     name: single_dailyallowance.name,\r\n  //     empid: single_dailyallowance.empid,\r\n  //     period: dailyallowance_period,\r\n  //   });\r\n  // };\r\n\r\n  // const delete_DailyAllowance = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteDailyAllowsDetl(id);\r\n  //   //update_Daily Allowances Details;\r\n  //   getSingleBatchDailyAllowsDetl(\r\n  //     single_dailyallowance.empid,\r\n  //     dailyallowance_period\r\n  //   );\r\n  // };\r\n\r\n  if (singlebatch_dailyallowsdetl_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.... daily site allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"75%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_dailyallowsdetl}\r\n          title=\"Daily Allowances Details\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                // setTimeout(() => {\r\n                //   setAllowsdata([...allowsdata, newData]);\r\n                //   resolve();\r\n                // }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...singlebatch_dailyallowsdetl];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setAllowsDetlsTable([...dataUpdate]);\r\n                  //editable = dataUpdate;\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  //const dataDelete = [...allowsDetlsTable];\r\n                  const index = oldData.tableData.id;\r\n                  //dataDelete.splice(index, 1);\r\n                  //setAllowsDetlsTable([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    // onClick={Save_Allowsdata}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    width: 1500,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesTableStaff.js",["1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button, MenuItem } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useSetRecoilState, useRecoilValue, useRecoilState } from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  allowsDataDetlsState,\r\n  allowsDataIdState,\r\n  empidState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport DailyAllowancesAddPeriod from \"./DailyAllowancesAddPeriod\";\r\nimport DailyAllowsDetlsTableStaff from \"./DailyAllowsDetlsTableStaff\";\r\nimport { useDailyAllows } from \"./dailyallows/useDailyAllows\"\r\nimport { useAddDailyAllows } from \"./dailyallows/useAddDailyAllows\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\nimport { useDeleteDailyAllows } from \"./dailyallows/useDeleteDailyAllows\";\r\n\r\n\r\nexport default function DailyAllowancesTableStaff() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { dailyallows, setFilter } = useDailyAllows()\r\n  const addDailyAllows = useAddDailyAllows();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n  const deleteDailyAllows = useDeleteDailyAllows();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isAddPeriodDialogOpen, setIsAddPeriodDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const [allowsDetlsdata, setAllowsDetlsdata] =\r\n    useRecoilState(allowsDataDetlsState);\r\n  const [allows_period, setAllows_period] = useRecoilState(allowsPeriodState);\r\n  const [allows_empid, setAllows_empid] = useRecoilState(empidState);\r\n  const [allowsdataId, setAllowsdataId] = useState(allowsDataIdState);\r\n  const [toLoad, settoLoad] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [isAllowsDetlDialogOpen, setIsAllowsDetlDialogOpen] = useState(false);\r\n  const title = `Site Allowances`;\r\n  const {\r\n    dailyallowances,\r\n    dailyallowsdetls,\r\n    loadEmpDailyAllowances,\r\n    loadEmpDailyAllowsDetls,\r\n    dailyallowances_loading,\r\n    dailyallowances_error,\r\n    updateDailyAllowance,\r\n    getSingleBatchDailyAllowsDetl,\r\n  } = useDailyAllowancesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadEmpDailyAllowances(loginLevel.loginUserId);\r\n  // }, [toLoad]);\r\n\r\n  // const myCustomSortingAlgorithm = {\r\n  //   ascending: (a, b) => a.period.length - b.period.length,\r\n  //   descending: (a, b) => b.period.length - a.period.length,\r\n  // };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Period\",\r\n      field: \"period\",\r\n      editable: \"never\",\r\n    },\r\n    { title: \"Location\", field: \"location\", editable: \"never\" },\r\n    { title: \"Manager Name\", field: \"manager\", editable: \"never\" },\r\n    {\r\n      title: \"No Of Days\",\r\n      field: \"no_of_days\",\r\n      type: \"numeric\",\r\n      editable: \"never\",\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n    // {\r\n    //   title: \"Status\",\r\n    //   field: \"status\",\r\n    //   editComponent: (props) => (\r\n    //     <TextField\r\n    //       //defaultValue={props.value || null}\r\n    //       onChange={(e) => props.onChange(e.target.value)}\r\n    //       style={{ width: 100 }}\r\n    //       value={props.value}\r\n    //       select\r\n    //     >\r\n    //       <MenuItem value=\"Pending\">Pending</MenuItem>\r\n    //       {/* <MenuItem value=\"Approve\">Approve</MenuItem>\r\n    //     <MenuItem value=\"Reject\">Reject</MenuItem>\r\n    //     <MenuItem value=\"Cancel\">Cancel</MenuItem> */}\r\n    //     </TextField>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  const Save_DailyAllowancesData = () => {\r\n    dailyallowances.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateDailyAllowance({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    //handleDialogClose();\r\n  };\r\n\r\n  const update_SiteAllowsDetl = (data) => {\r\n    const { id, empid, period, no_of_days, amount } = data;\r\n\r\n    loadEmpDailyAllowsDetls(empid, period);\r\n   \r\n    setAllows_period(period);\r\n    setAllows_empid(empid);\r\n    setAllowsdataId(id);\r\n    setAllows_period(period);\r\n    setAllows_empid(empid);\r\n    setAllowsdataId(id);\r\n    setAllowsdata({\r\n      ...allowsdata,\r\n      id: id,\r\n      no_of_days: no_of_days,\r\n      amount: amount,\r\n      period: period,\r\n      empid: empid,\r\n    });\r\n\r\n    //setIsAllowsDetlDialogOpen(true);\r\n    history.push(\"/singledailyallowsdetlstable\");\r\n  };\r\n\r\n  const add_SiteAllowsPeriod = () => {\r\n    handleAddPeriodDialogOpen();\r\n  };\r\n\r\n  const handleAddPeriodDialogOpen = () => {\r\n    setIsAddPeriodDialogOpen(true);\r\n  };\r\n\r\n  const handleAddPeriodDialogClose = () => {\r\n    setIsAddPeriodDialogOpen(false);\r\n  };\r\n\r\n  const handleAllowsDetlDialogOpen = () => {\r\n    setIsAllowsDetlDialogOpen(true);\r\n  };\r\n\r\n  const handleAllowsDetlDialogClose = () => {\r\n    settoLoad(true);\r\n    setIsAllowsDetlDialogOpen(false);\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallows}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         // const dataUpdate = [...dailyallowances];\r\n          //         // const index = oldData.tableData.id;\r\n          //         // dataUpdate[index] = newData;\r\n          //         //setDailyAllowances([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n          //         update_AllowsDetl();\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_SiteAllowsPeriod();\r\n              },\r\n            },\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_SiteAllowsDetl(rowData);\r\n              },\r\n            }),\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            sorting: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  {error && (\r\n                    <Alert severity=\"error\" onClose={() => setError(false)}>\r\n                      Period already existed!\r\n                    </Alert>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isAddPeriodDialogOpen}\r\n            handleClose={handleAddPeriodDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={false}\r\n            isFullwidth={false}\r\n          >\r\n            <DailyAllowancesAddPeriod\r\n              handleDialogClose={handleAddPeriodDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n        <div>\r\n          <CustomDialog\r\n            isOpen={isAllowsDetlDialogOpen}\r\n            handleClose={handleAllowsDetlDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={false}\r\n            isFullwidth={false}\r\n          >\r\n            <DailyAllowsDetlsTableStaff\r\n              allowsdata={allowsdata}\r\n              allowsdataId={allowsdataId}\r\n              handleDialogClose={handleAllowsDetlDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipForm.js",["1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427"],"import React, { useState, useReducer, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Grid,\r\n  Toolbar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n  payDeductionDataState,\r\n} from \"./data/atomdata\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport Payslip_ViewEarnings from \"./Payslip_ViewEarnings\";\r\nimport Payslip_ViewDeductions from \"./Payslip_ViewDeductions\";\r\nimport Payslip_Earnings from \"./Payslip_Earnings\";\r\nimport Payslip_Deductions from \"./Payslip_Deductions\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  date: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  status: \"Pending\",\r\n  total_earnings: 0,\r\n  total_deductions: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  basic_pay: 0,\r\n  nett_pay: 0,\r\n};\r\n\r\nconst PayslipForm = () => {\r\n  let history = useHistory();\r\n  const [calc, setCalc] = useState(false);\r\n  const classes = useStyles();\r\n  const {\r\n    isPayslipEditing,\r\n    single_payslip,\r\n    updatePayslip,\r\n    addPayslip,\r\n    editPayslipID,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    single_payslip_loading,\r\n    single_payslip_error,\r\n    payslip_period,\r\n    payslip_earning_amount,\r\n    payslip_deduction_amount,\r\n    setPayslipEarningAmount,\r\n    setPayslipDeductionAmount,\r\n    payslipearnings,\r\n    payslipdeductions,\r\n    getSingleBatchPayslipEarnings,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadAllowances, loadDeductions, allowances, deductions } =\r\n    useTablesContext();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const setPayEarningData = useSetRecoilState(payEarningDataState);\r\n  const setPayDeductionData = useSetRecoilState(payDeductionDataState);\r\n  const [earningsdata, setEarningsdata] = useState([]);\r\n  const [oldEarningsdata, setOldEarningsdata] = useState([]);\r\n  const [deductionsdata, setDeductionsdata] = useState([]);\r\n  const [oldDeductionsdata, setOldDeductionsdata] = useState([]);\r\n  const [isEarningsDialogOpen, setIsEarningsDialogOpen] = useState(false);\r\n  const [isDeductionsDialogOpen, setIsDeductionsDialogOpen] = useState(false);\r\n  //const [state, setState] = useState(single_payslip);\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const {\r\n    name,\r\n    period,\r\n    date,\r\n    bank_name,\r\n    bank_acno,\r\n    status,\r\n    total_earnings,\r\n    total_deductions,\r\n    tap_amount,\r\n    scp_amount,\r\n    basic_pay,\r\n    nett_pay,\r\n  } = single_payslip;\r\n\r\n  useEffect(async () => {\r\n    getSinglePayslip(editPayslipID);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (calc) {\r\n  //     setTimeout(() => {\r\n  //       console.log(\"calc\");\r\n  //       calc_totals();\r\n  //       setCalc(false);\r\n  //     }, 10000);\r\n  //   }\r\n  // }, [calc]);\r\n\r\n  const handleChange = (event) => {\r\n    //const { rec_id, ...fields } = single_payslip;\r\n    // const value =\r\n    //   event.target.type === \"number\"\r\n    //     ? parseInt(event.target.value, 10)\r\n    //     : event.target.value;\r\n    // setState({ ...state, [event.target.name]: value });\r\n  };\r\n\r\n  const calc_totals = () => {\r\n    const totalTAP = Math.ceil(basic_pay * 0.05);\r\n    const totalSCP =\r\n      Math.round((basic_pay + Number.EPSILON) * 0.035 * 100) / 100;\r\n    const totalEarnings = payslipearnings.reduce(\r\n      (a, v) => (a = a + v.amount),\r\n      0\r\n    );\r\n    const totalDeductions = payslipdeductions.reduce(\r\n      (a, v) => (a = a + v.amount),\r\n      0\r\n    );\r\n    const nettPay =\r\n      basic_pay + totalEarnings - totalDeductions - totalTAP - totalSCP;\r\n    setPayslipEarningAmount(totalEarnings);\r\n    setPayslipDeductionAmount(totalDeductions);\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: totalEarnings,\r\n      total_deductions: totalDeductions,\r\n      tap_amount: totalTAP,\r\n      scp_amount: totalSCP,\r\n      nett_pay: nettPay,\r\n    });\r\n    console.log(\r\n      \"total\",\r\n      totalEarnings,\r\n      totalDeductions,\r\n      totalTAP,\r\n      totalSCP,\r\n      nettPay\r\n    );\r\n    getSinglePayslip(editPayslipID);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const { rec_id, ...fields } = single_payslip;\r\n    updatePayslip(...fields);\r\n\r\n    // if (isPayslipEditing) {\r\n    //   updatePayslip({ id: editPayslipID, ...data });\r\n    // } else {\r\n    //   addPayslip({ ...data });\r\n    // }\r\n    // loadPayslips();\r\n    // history.push(\"/batchpayslips\");\r\n  };\r\n  const handleEarningsDialogOpen = () => {\r\n    // setPayEarningData([...payslipearnings]);\r\n    setOldEarningsdata([...payslipearnings]);\r\n    setEarningsdata([...payslipearnings]);\r\n    setIsEarningsDialogOpen(true);\r\n  };\r\n\r\n  const handleEarningsDialogClose = () => {\r\n    setIsEarningsDialogOpen(false);\r\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\r\n  };\r\n  const handleDeductionsDialogOpen = () => {\r\n    setOldDeductionsdata([...payslipdeductions]);\r\n    setDeductionsdata([...payslipdeductions]);\r\n    setIsDeductionsDialogOpen(true);\r\n  };\r\n\r\n  const handleDeductionsDialogClose = () => {\r\n    setIsDeductionsDialogOpen(false);\r\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\r\n  };\r\n\r\n  if (single_payslip_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (single_payslip_error) {\r\n    history.push(\"/error\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Grid xs={12} md={8} lg={12}>\r\n          <CardLayout2 title=\"Employee Profile\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <Grid>\r\n                <div>\r\n                  <Typography variant=\"h5\" component=\"h3\">\r\n                    PAYSLIP FORM\r\n                  </Typography>\r\n                  <Typography component=\"p\">Payslip Preparation</Typography>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n              <Divider className={classes.divider} />\r\n              <Grid item xs={12}>\r\n                <div>\r\n                  <Controller\r\n                    name=\"name\"\r\n                    control={control}\r\n                    defaultValue={name}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Name\"\r\n                          id=\"margin-normal\"\r\n                          name=\"name\"\r\n                          defaultValue={name}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        >\r\n                          {/* {employees.map((e) => {\r\n                  return (\r\n                    <MenuItem key={e.name} value={e.name}>\r\n                      {e.name}\r\n                    </MenuItem>\r\n                  );\r\n                })} */}\r\n                        </TextField>\r\n                      );\r\n                    }}\r\n                    rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"period\"\r\n                    control={control}\r\n                    defaultValue={period}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Period\"\r\n                          id=\"margin-normal\"\r\n                          name=\"period\"\r\n                          defaultValue={period}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"date\"\r\n                    control={control}\r\n                    defaultValue={date}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Date\"\r\n                          type=\"date\"\r\n                          id=\"margin-normal\"\r\n                          name=\"date\"\r\n                          defaultValue={date}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"bank_name\"\r\n                    control={control}\r\n                    defaultValue={bank_name}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Bank Name\"\r\n                          id=\"margin-normal\"\r\n                          name=\"bank_name\"\r\n                          defaultValue={bank_name}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"bank_acno\"\r\n                    control={control}\r\n                    defaultValue={bank_acno}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Bank AC No\"\r\n                          id=\"margin-normal\"\r\n                          name=\"bank_acno\"\r\n                          value={bank_acno}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"tap_amount\"\r\n                    control={control}\r\n                    defaultValue={tap_amount}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"TAP Contrinution\"\r\n                          type=\"currency\"\r\n                          id=\"standard-number\"\r\n                          name=\"tap_amount\"\r\n                          defaultValue={tap_amount}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"scp_amount\"\r\n                    control={control}\r\n                    defaultValue={scp_amount}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"SCP Contribution\"\r\n                          type=\"currency\"\r\n                          id=\"standard-number\"\r\n                          name=\"scp_amount\"\r\n                          defaultValue={scp_amount}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"total_earnings\"\r\n                    control={control}\r\n                    defaultValue={total_earnings}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Total Earnings\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"total_earnings\"\r\n                          value={total_earnings}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"total_deductions\"\r\n                    control={control}\r\n                    defaultValue={total_deductions}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Total Deductions\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"total_deductions\"\r\n                          value={total_deductions}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"basic_pay\"\r\n                    control={control}\r\n                    defaultValue={basic_pay}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Basic Pay\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"basic_pay\"\r\n                          value={basic_pay}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                          // onChange={(e) => {\r\n                          //   handleChange(parseInt(e.target.value, 10));\r\n                          // }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"nett_pay\"\r\n                    control={control}\r\n                    defaultValue={nett_pay}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Nett Pay\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"nett_pay\"\r\n                          value={nett_pay}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={calc_totals}\r\n                >\r\n                  Calc <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button>\r\n              </Grid>\r\n              <Divider className={classes.divider} />\r\n            </form>\r\n          </CardLayout2>\r\n        </Grid>\r\n        <div>\r\n          <Grid container alignItems=\"center\" className={classes.grid}>\r\n            <Grid item xs={6} md={8} lg={6}>\r\n              <div>\r\n                <CardLayout\r\n                  title=\"Earnings\"\r\n                  handleClick={handleEarningsDialogOpen}\r\n                >\r\n                  <Payslip_ViewEarnings />\r\n                </CardLayout>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6} md={8} lg={6}>\r\n              <div>\r\n                <CardLayout\r\n                  title=\"Deductions\"\r\n                  handleClick={handleDeductionsDialogOpen}\r\n                >\r\n                  <Payslip_ViewDeductions />\r\n                </CardLayout>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <Divider className={classes.divider} />\r\n        <CustomDialog\r\n          isOpen={isEarningsDialogOpen}\r\n          handleClose={handleEarningsDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <Payslip_Earnings\r\n            setEarningsdata={setEarningsdata}\r\n            earningsdata={earningsdata}\r\n            oldEarningsdata={oldEarningsdata}\r\n            handleDialogClose={handleEarningsDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDeductionsDialogOpen}\r\n          handleClose={handleDeductionsDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <Payslip_Deductions\r\n            setDeductionsdata={setDeductionsdata}\r\n            deductionsdata={deductionsdata}\r\n            oldDeductionsdata={oldDeductionsdata}\r\n            handleDialogClose={handleDeductionsDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  grid: {\r\n    padding: theme.spacing(3, 2),\r\n    // justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    height: 100,\r\n    display: \"flex\",\r\n    border: \"1px solid black\",\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport default PayslipForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PaySummary.js",["1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\r\nimport PrintPaySummary from \"./PrintPaySummary\";\r\nimport { Heading, Text } from \"@chakra-ui/react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button, Icon, Grid, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { payrunState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { ComponentToPrint } from \"./ComponentToPrint\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Wages\",\r\n    field: \"wages\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"tap_amount\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"scp_amount\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"Allowances\",\r\n    field: \"total_allowancws\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"total_deductions\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"Nett Pay\",\r\n    field: \"nett_pay\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n];\r\n\r\nconst initial_state = [\r\n  {\r\n    totalwages: 0,\r\n    totaltap: 0,\r\n    totalscp: 0,\r\n    totalallows: 0,\r\n    totaldeducts: 0,\r\n    totalpayroll: 0,\r\n  },\r\n];\r\n\r\nconst PaySummary = ({ singlebatchpayslip }) => {\r\n  const classes = useStyles();\r\n  const componentRef = useRef();\r\n  const [state, setState] = useState(initial_state);\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [isCalc, setIsCalc] = useState(true);\r\n  const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  const exportPdfTable = () => {\r\n    PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleCalcTotals = () => {\r\n    const data = singlebatchpayslip;\r\n    const totalwages = data.reduce((acc, item) => {\r\n      return acc + item.wages;\r\n    }, 0);\r\n    const totalallows = data.reduce((acc, item) => {\r\n      return (\r\n        acc +\r\n        item.allows_type1amt +\r\n        item.allows_type2amt +\r\n        item.allows_type3amt +\r\n        item.allows_type4amt +\r\n        item.allows_type5amt +\r\n        item.allows_type6amt +\r\n        item.allows_type7amt +\r\n        item.allows_type8amt\r\n      );\r\n    }, 0);\r\n    const totaldeducts = data.reduce((acc, item) => {\r\n      return (\r\n        acc +\r\n        item.deducts_type1amt +\r\n        item.deducts_type2amt +\r\n        item.deducts_type3amt +\r\n        item.deducts_type4amt +\r\n        item.deducts_type5amt +\r\n        item.deducts_type6amt +\r\n        item.deducts_type7amt +\r\n        item.deducts_type8amt\r\n      );\r\n    }, 0);\r\n    const totaltap = Math.ceil(totalwages * 0.05);\r\n    const totalscp =\r\n      Math.round((totalwages + Number.EPSILON) * 0.035 * 100) / 100;\r\n    const totalpayroll =\r\n      totalwages + totalallows - totaltap - totalscp - totaldeducts;\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n    });\r\n    payrun\r\n      .filter((r) => r.payrun === payslip_period)\r\n      .map((rec) => {\r\n        //update payrun\r\n        return updatePayrun({\r\n          id: rec.id,\r\n          totalpayroll: totalpayroll,\r\n          totalwages: totalwages,\r\n          totaltap: totaltap,\r\n          totalscp: totalscp,\r\n          totalallows: totalallows,\r\n          totaldeducts: totaldeducts,\r\n        });\r\n      });\r\n    console.log(\"payrundata\", payrundata);\r\n    console.log(\r\n      \"totals\",\r\n      totalpayroll,\r\n      totalwages,\r\n      totaltap,\r\n      totalscp,\r\n      totalallows,\r\n      totaldeducts\r\n    );\r\n  };\r\n\r\n  const handleSaveCalcTotals = (e) => {\r\n    e.preventDefault();\r\n    handleCalcTotals();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCalcTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ display: \"none\" }}> */}\r\n      <div>\r\n        <div>\r\n          <button onClick={() => exportPdfTable()}>Print PDF this out!</button>\r\n        </div>\r\n        {/* <div>\r\n          <div style={{ display: \"none\" }}>\r\n            <ComponentToPrint ref={componentRef} />\r\n          </div>\r\n          <button onClick={handlePrint}>Print this out!</button>\r\n        </div> */}\r\n      </div>\r\n      <form>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              style={{ marginLeft: 5 }}\r\n              onClick={(e) => handleSaveCalcTotals(e)}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n              <h2>Summary</h2>\r\n              {/* <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                style={{ marginLeft: 5 }}\r\n                onClick={(e) => handle_Print(e)}\r\n              >\r\n                Print <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button> */}\r\n              {/* <div>\r\n                <ReactToPrint\r\n                  trigger={(e) => {\r\n                    handle_Print(e);\r\n                  }}\r\n                  content={() => this.componentRef}\r\n                />\r\n                <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n              </div> */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Period\"\r\n                name=\"period\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.period}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Pay Run Batch\"\r\n                name=\"payrun\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.payrun}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                variant=\"filled\"\r\n                value={payrunstatus}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Payroll Total\"\r\n                name=\"paytotal\"\r\n                variant=\"filled\"\r\n                type=\"number\"\r\n                value={payrundata.totalpayroll}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <MaterialTable\r\n              columns={columns}\r\n              data={singlebatchpayslip}\r\n              title=\"Payroll\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n\r\n                headerStyle: {\r\n                  backgroundColor: \"lightblue\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Wages\"\r\n                name=\"totalwages\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totalwages}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total TAP\"\r\n                name=\"totaltap\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totaltap}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total SCP\"\r\n                name=\"totalscp\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totalscp}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Allowances\"\r\n                name=\"totalallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totalallows}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Deductions\"\r\n                name=\"totaldeducts\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totaldeducts}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Payroll\"\r\n                name=\"totalpayroll\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totalpayroll}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  divContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default PaySummary;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\ErrorPage.js",["1441","1442"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { headExpenseTableCells } from \"../utils/constants\";\r\nimport ExpenseTable from \"../components/ExpenseTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ErrorPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div className=\"main-wrapper\">\r\n                  <Helmet>\r\n                    <title>Error 404 - HRMS Admin Template</title>\r\n                    <meta name=\"description\" content=\"Login page\" />\r\n                  </Helmet>\r\n                  <div className=\"error-box\">\r\n                    <h1>404</h1>\r\n                    <h3>\r\n                      <i className=\"fa fa-warning\" /> Oops! Internet connection disconnected!\r\n                    </h3>\r\n                    <p>The page you requested was not found.</p>\r\n                    <a\r\n                      onclick={() => localStorage.setItem(\"firstload\", \"true\")}\r\n                      href=\"/\"\r\n                      className=\"btn btn-custom\"\r\n                    >\r\n                      Back to Home\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ErrorPage;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowsDetlsTableStaff.js",["1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Grid, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useRecoilValue, useRecoilState } from \"recoil\";\r\nimport {\r\n  loginLevelState,\r\n  allowsDataState,\r\n  allowsDataDetlsState,\r\n  empidState,\r\n  allowsPeriodState,\r\n  allowsDataIdState,\r\n} from \"./data/atomdata\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { useDailyAllowsDetls } from \"./dailyallowsdetls/useDailyAllowsDetls\"\r\nimport { useAddDailyAllowsDetls } from \"./dailyallowsdetls/useAddDailyAllowsDetls\";\r\nimport { useUpdateDailyAllowsDetls } from \"./dailyallowsdetls/useUpdateDailyAllowsDetls\";\r\nimport { useDeleteDailyAllowsDetls } from \"./dailyallowsdetls/useDeleteDailyAllowsDetls\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    // editable: \"never\",\r\n    cellStyle: {\r\n      width: 120,\r\n      maxWidth: 120,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"District\", field: \"district\" },\r\n  { title: \"Operation Type\", field: \"typeoperation\" },\r\n  { title: \"Client\", field: \"client\" },\r\n  { title: \"Location/Rig\", field: \"location\" },\r\n  { title: \"Ticket No/Job No\", field: \"jobno\" },\r\n  { title: \"Crew Operation\", field: \"crewoperation\" },\r\n  {\r\n    title: \"Job Bonus\",\r\n    field: \"jobbonus\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n  {\r\n    title: \"Per Diem\",\r\n    field: \"perdiem\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n  { title: \"Delete\", field: \"isdelete\", type: \"boolean\" },\r\n];\r\n\r\nexport default function DailyAllowsDetlsTableStaff() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  //const { dailyallowsdetls } = useDailyAllowsDetls()\r\n  const addDailyAllowsDetls = useAddDailyAllowsDetls()\r\n  const updateDailyAllowsDetls = useUpdateDailyAllowsDetls();\r\n  const deleteDailyAllowsDetls = useDeleteDailyAllowsDetls();\r\n\r\n  // const [allowsDetlsTable, setAllowsDetlsTable] =\r\n  // useRecoilState(allowsDataDetlsState);\r\n  //console.log(\"detlstable\", );\r\n  //const [allowsDetlsdata, setAllowsDetilsdata] = useRecoilStateLoadable(fetchDailyAllowsDetlsSelector);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [allowsDetlsdata, setAllowsDetlsdata] =\r\n    useRecoilState(allowsDataDetlsState);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const [allowsdataId, setAllowsdataId] = useState(allowsDataIdState);\r\n  const [tabledeldata, setTableDelData] = useState({});\r\n  const [totals, setTotals] = useState({\r\n    totaldays: 0,\r\n    totalamount: 0,\r\n    totalbonus: 0,\r\n    totaldiem: 0,\r\n  });\r\n  const [alert, setAlert] = useState(false);\r\n  const {\r\n    dailyallowances,\r\n    dailyallowsdetls,\r\n    loadEmpDailyAllowsDetls,\r\n    updateDailyAllowance,\r\n    updateDailyAllowsDetl,\r\n    deleteDailyAllowsDetl,\r\n    dailyallowsdetl_loading,\r\n    dailyallowsdetl_error,\r\n  } = useDailyAllowancesContext();\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"useeffect load detls\")\r\n  //   getSingleBatchDailyAllowsDetl(allows_empid, allows_period);\r\n  // }, [allows_period]);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmpDailyAllowsDetls(empid, period);\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    //calc\r\n    handle_calc();\r\n  }, [dailyallowsdetls]);\r\n\r\n  const update_AllowsDetls = (data, index) => {\r\n    const recdata = dailyallowsdetls.filter((r) => r.tableData.id === index);\r\n    recdata[0].typeoperation = data.typeoperation;\r\n    recdata[0].client = data.client;\r\n    recdata[0].district = data.district;\r\n    recdata[0].location = data.location;\r\n    recdata[0].jobno = data.jobno;\r\n    recdata[0].crewoperation = data.crewoperation;\r\n    recdata[0].jobbonus = data.jobbonus;\r\n    recdata[0].perdiem = data.perdiem;\r\n    //calc\r\n    handle_calc();\r\n  };\r\n\r\n  const save_AllowsDetls = (e) => {\r\n    e.preventDefault();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      dailyallowsdetls.forEach((rec) => {\r\n        const { id, rec_id, tableData, ...fields } = rec;\r\n        updateDailyAllowsDetl({ id, ...fields });\r\n      });\r\n    }\r\n\r\n    //save allows data details\r\n    const { id } = allowsdata;\r\n    updateDailyAllowance({\r\n      id: id,\r\n      ...allowsdata,\r\n      no_of_days: totals.totaldays,\r\n      amount: totals.totalamount,\r\n    });\r\n    const dailydata = dailyallowances.filter((r) => r.id === id);\r\n\r\n    dailydata[0].no_of_days = totals.totaldays;\r\n    dailydata[0].amount = totals.totalamount;\r\n    console.log(\"daily detils update\", dailydata, dailyallowances);\r\n    setAlert(true);\r\n  };\r\n\r\n  const delete_AllowsDetls = (data, index) => {\r\n    dailyallowsdetls.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        deleteDailyAllowsDetl(rec.id);\r\n      }\r\n    });\r\n    loadEmpDailyAllowsDetls(allows_empid, allows_period);\r\n  };\r\n\r\n  // const delete_AllowsDetls = () => {\r\n  //   dailyallowsdetls.forEach((rec, index) => {\r\n  //     if (rec.tableData.checked) {\r\n  //       const recdata = dailyallowsdetls[index];\r\n  //       recdata.isdelete = true;\r\n  //       setTableDelData(prevState => ({\r\n  //         tabledeldata: [...prevState, recdata]\r\n  //       }))\r\n  //       console.log(\"delete detls\", tabledeldata)\r\n  //       //deleteDailyAllowsDetl(rec.id);\r\n  //     }\r\n  //   });\r\n  //   console.log(\"delete allowsdetls\", dailyallowsdetls);\r\n  // };\r\n\r\n  const handle_refresh = () => {\r\n    //  getSingleBatchDailyAllowsDetl(allows_empid, allows_period);\r\n  };\r\n\r\n  const handle_calc = () => {\r\n    const totbonus = dailyallowsdetls.reduce((acc, item) => {\r\n      return acc + item.jobbonus;\r\n    }, 0);\r\n    const totdiem = dailyallowsdetls.reduce((acc, item) => {\r\n      return acc + item.perdiem;\r\n    }, 0);\r\n    const totdays = dailyallowsdetls.reduce((acc, item) => {\r\n      return acc + 1;\r\n    }, 0);\r\n    const total = totbonus + totdiem;\r\n    setTotals({\r\n      totalamount: total,\r\n      totalbonus: totbonus,\r\n      totaldiem: totdiem,\r\n      totaldays: totdays,\r\n    });\r\n  };\r\n\r\n  // const add_DailyAllowsDetl = async (data) => {\r\n  //   console.log(\"add\", data);\r\n  //   const { description, amount } = data;\r\n  //   addDailyAllowsDetl({\r\n  //     description: description,\r\n  //     amount: amount,\r\n  //     name: single_dailyallowance.name,\r\n  //     empid: single_dailyallowance.empid,\r\n  //     period: dailyallowance_period,\r\n  //   });\r\n  // };\r\n\r\n  // const delete_DailyAllowance = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteDailyAllowsDetl(id);\r\n  //   //update_Daily Allowances Details;\r\n  //   getSingleBatchDailyAllowsDetl(\r\n  //     single_dailyallowance.empid,\r\n  //     dailyallowance_period\r\n  //   );\r\n  // };\r\n\r\n  if (dailyallowsdetl_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.... daily site allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (dailyallowsdetl_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (!dailyallowsdetl_loading) {\r\n    //  setAllowsDetlsdata(dailyallowsdetls);\r\n\r\n    // console.log(\"load allows detls\", allowsDetlsdata);\r\n    return (\r\n      <div className={classes.root}>\r\n        {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n        <div style={{ maxWidth: \"75%\", paddingTop: \"5px\" }}>\r\n          <h2>Allows Detils Table</h2>\r\n          <MaterialTable\r\n            columns={columns}\r\n            data={dailyallowsdetls.filter(\r\n              (item) => item.empid === loginLevel.loginUserId && !item.isdelete\r\n            )}\r\n            title=\"Daily Allowances Details\"\r\n            editable={{\r\n              onRowAdd: (newData) =>\r\n                new Promise((resolve, reject) => {\r\n                  // setTimeout(() => {\r\n                  //   setAllowsdata([...allowsdata, newData]);\r\n                  //   resolve();\r\n                  // }, 1000);\r\n                }),\r\n              onRowUpdate: (newData, oldData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    const dataUpdate = [...dailyallowsdetls];\r\n                    const index = oldData.tableData.id;\r\n                    dataUpdate[index] = newData;\r\n                    update_AllowsDetls(newData, index);\r\n                    //setAllowsDetlsTable([...dataUpdate]);\r\n                    //editable = dataUpdate;\r\n                    resolve();\r\n                  }, 1000);\r\n                }),\r\n              // onRowDelete: (oldData) =>\r\n              //   new Promise((resolve, reject) => {\r\n              //     setTimeout(() => {\r\n              //       //const dataDelete = [...allowsDetlsTable];\r\n              //       const index = oldData.tableData.id;\r\n              //       //dataDelete.splice(index, 1);\r\n              //       //setAllowsDetlsTable([...dataDelete]);\r\n\r\n              //       resolve();\r\n              //     }, 1000);\r\n              //   }),\r\n            }}\r\n            options={{\r\n              filtering: true,\r\n              selection: true,\r\n               pageSize:10,\r\n              headerStyle: {\r\n                backgroundColor: \"orange\",\r\n                color: \"primary\",\r\n              },\r\n              showTitle: true,\r\n            }}\r\n            components={{\r\n              Toolbar: (props) => (\r\n                <div>\r\n                  <MTableToolbar {...props} />\r\n                  <div style={{ padding: \"5px 10px\" }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      onClick={(e) => delete_AllowsDetls(e)}\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                    {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => handle_refresh(e)}\r\n                  >\r\n                    re-fresh\r\n                  </Button> */}\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      onClick={(e) => handle_calc(e)}\r\n                    >\r\n                      re-calc\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      onClick={(e) => save_AllowsDetls(e)}\r\n                    >\r\n                      Update all <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    {alert && (\r\n                      <Alert severity=\"success\" onClose={() => setAlert(false)}>\r\n                        Changes being saved!\r\n                      </Alert>\r\n                    )}\r\n                    <div>\r\n                      <Grid\r\n                        container\r\n                        spacing={0}\r\n                        direction=\"row\"\r\n                        alignItems=\"left\"\r\n                        //justify=\"left\"\r\n                        style={{ border: \"1px solid white\" }}\r\n                      >\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                          <TextField\r\n                            label=\"Total Job Bonus\"\r\n                            variant=\"filled\"\r\n                            style={{ width: \"100%\" }}\r\n                            name=\"totalbonus\"\r\n                            value={totals.totalbonus}\r\n                            type=\"currency\"\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                          ></TextField>\r\n                          <TextField\r\n                            label=\"Total Diem\"\r\n                            variant=\"filled\"\r\n                            style={{ width: \"100%\" }}\r\n                            name=\"totaldiem\"\r\n                            value={totals.totaldiem}\r\n                            type=\"currency\"\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                          ></TextField>\r\n\r\n                          <TextField\r\n                            label=\"No of Days\"\r\n                            variant=\"filled\"\r\n                            style={{ width: \"100%\" }}\r\n                            name=\"totaldays\"\r\n                            value={totals.totaldays}\r\n                            type=\"numeric\"\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                          ></TextField>\r\n                          <TextField\r\n                            label=\"Total Amount\"\r\n                            variant=\"filled\"\r\n                            style={{ width: \"100%\" }}\r\n                            name=\"totalamount\"\r\n                            value={totals.totalamount}\r\n                            type=\"currency\"\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                          ></TextField>\r\n                        </div>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    width: 1500,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeViewStaff.js",["1459","1460"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState} from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\nimport EmpViewFamily from \"./EmpViewFamily\";\r\nimport EmpViewEducations from \"./EmpViewEducations\";\r\nimport EmpViewExperiences from \"./EmpViewExperiences\";\r\nimport EmpViewLeaves from \"./EmpViewLeaves\";\r\nimport EmpViewTrainings from \"./EmpViewTrainings\";\r\nimport EmpPersonal from \"./EmpPersonal\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\n\r\n// const drawerWidth = 240;\r\n\r\n// const CardLayout = ({ title, children }) => {\r\n//   const classes = useStyles();\r\n//   return (\r\n//     <div>\r\n//       <CardLayout title=\"Personal Information\">\r\n//         <h2>details</h2>\r\n//       </CardLayout>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst EmployeeViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [familydata, setFamilydata] = useState([]);\r\n  const [educationdata, setEducationdata] = useState([]);\r\n  const [experiencedata, setExperiencedata] = useState([]);\r\n  const [trainingdata, setTrainingdata] = useState([]);\r\n  const [isPersonalDialogOpen, setIsPersonalDialogOpen] = useState(false);\r\n  const [isFamilyDialogOpen, setIsFamilyDialogOpen] = useState(false);\r\n  const [isEducationDialogOpen, setIsEducationDialogOpen] = useState(false);\r\n  const [isExperienceDialogOpen, setIsExperienceDialogOpen] = useState(false);\r\n  const [isTrainingDialogOpen, setIsTrainingDialogOpen] = useState(false);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    getSingleEmployee,\r\n    single_employee,\r\n    single_employee_loading,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n  } = useEmployeesContext();\r\n  const { singlebatch_training } = useTrainingsContext();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const {\r\n    loadDepartments,\r\n    loadDesignations,\r\n    loadSingleBatchFamily,\r\n    loadSingleBatchEducation,\r\n    singlebatchfamily,\r\n    singlebatcheducation,\r\n    singlebatchexperience,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleEmployee(loginLevel.loginUserId);\r\n     setEditEmployeeID(loginLevel.loginUserId);\r\n    loadDepartments();\r\n    loadDesignations();\r\n  }, []);\r\n\r\n  //useEffect(() => {}, [singlebatchfamily]);\r\n\r\n  \r\n  const handlePersonalDialogOpen = () => {\r\n    //setFamilydata([...singlebatchfamily]);\r\n    setIsEditingOn();\r\n    setIsPersonalDialogOpen(true);\r\n  };\r\n\r\n  const handlePersonalDialogClose = () => {\r\n    setIsPersonalDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleFamilyDialogOpen = () => {\r\n    setFamilydata([]);\r\n    setFamilydata([...singlebatchfamily]);\r\n    setIsFamilyDialogOpen(true);\r\n  };\r\n\r\n  const handleFamilyDialogClose = () => {\r\n    setIsFamilyDialogOpen(false);\r\n    loadSingleBatchFamily(editEmployeeID);\r\n  };\r\n\r\n  const handleEducationDialogOpen = () => {\r\n    setEducationdata([]);\r\n    setEducationdata([...singlebatcheducation]);\r\n    setIsEducationDialogOpen(true);\r\n  };\r\n\r\n  const handleEducationDialogClose = () => {\r\n    setIsEducationDialogOpen(false);\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  };\r\n\r\n  const handleExperienceDialogOpen = () => {\r\n    setExperiencedata([...singlebatchexperience]);\r\n    setIsExperienceDialogOpen(true);\r\n  };\r\n\r\n  const handleExperienceDialogClose = () => {\r\n    setIsExperienceDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleTrainingDialogOpen = () => {\r\n    setTrainingdata([...singlebatch_training]);\r\n    setIsTrainingDialogOpen(true);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleTrainingDialogClose = () => {\r\n    setIsTrainingDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\nif (single_employee_loading) {\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <div>\r\n        <h2>Loading...Employee</h2>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout2 title=\"Employee Profile\">\r\n              <div>\r\n                <form className={classes.form}>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={single_employee.name}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={single_employee.phone}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={single_employee.email}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Birth Date\"\r\n                    name=\"birthdate\"\r\n                    value={single_employee.birhdate}\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Gender\"\r\n                    name=\"gender\"\r\n                    value={single_employee.gender}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    label=\"Leave Balance\"\r\n                    name=\"leave_bal\"\r\n                    value={single_employee.leave_bal}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Reporting To\"\r\n                    name=\"reporting_to\"\r\n                    value={single_employee.reporting_to}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Personal Information\"\r\n                handleClick={handlePersonalDialogOpen}\r\n              >\r\n                <div>\r\n                  <form className={classes.form}>\r\n                    <TextField\r\n                      label=\"I/C No\"\r\n                      name=\"icno\"\r\n                      value={single_employee.ic_no}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"I/C Expiry Date\"\r\n                      name=\"ic_expirydate\"\r\n                      value={single_employee.ic_expirydate}\r\n                      type=\"date\"\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Passport No\"\r\n                      name=\"passportno\"\r\n                      value={single_employee.passportno}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      label=\"Passport Expiry Date\"\r\n                      name=\"passport_expirydate\"\r\n                      value={single_employee.passport_expirydate}\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Work Permit No\"\r\n                      name=\"workpermitno\"\r\n                      value={single_employee.workpermitno}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      label=\"W/P Expiry Date\"\r\n                      name=\"workpermit_expirydate\"\r\n                      value={single_employee.workpermit_expirydate}\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        name=\"nationality\"\r\n                        value={single_employee.nationality}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Marital Status\"\r\n                        name=\"marital_status\"\r\n                        value={single_employee.marital_status}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout2 title=\"Leaves\">\r\n                <div>\r\n                  <EmpViewLeaves />\r\n                </div>\r\n              </CardLayout2>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Training\"\r\n                handleClick={handleTrainingDialogOpen}\r\n              >\r\n                <EmpViewTrainings />\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Experiences\"\r\n                handleClick={handleExperienceDialogOpen}\r\n              >\r\n                <div>\r\n                  <EmpViewExperiences />\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Education\"\r\n                handleClick={handleEducationDialogOpen}\r\n              >\r\n                <div>\r\n                  <EmpViewEducations />\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout title=\"Family\" handleClick={handleFamilyDialogOpen}>\r\n                <EmpViewFamily />\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <CustomDialog\r\n        isOpen={isPersonalDialogOpen}\r\n        handleClose={handlePersonalDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpPersonal\r\n          //setPersonaldata={setFamilydata}\r\n          //familydata={familydata}\r\n          handleDialogClose={handlePersonalDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isFamilyDialogOpen}\r\n        handleClose={handleFamilyDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpFamily\r\n          setFamilydata={setFamilydata}\r\n          familydata={familydata}\r\n          handleDialogClose={handleFamilyDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isEducationDialogOpen}\r\n        handleClose={handleEducationDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpEducations\r\n          setEducationdata={setEducationdata}\r\n          educationdata={educationdata}\r\n          handleDialogClose={handleEducationDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isExperienceDialogOpen}\r\n        handleClose={handleExperienceDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpExperiences\r\n          setExperiencedata={setExperiencedata}\r\n          experiencedata={experiencedata}\r\n          handleDialogClose={handleExperienceDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isTrainingDialogOpen}\r\n        handleClose={handleTrainingDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpTrainings\r\n          setTrainingdata={setTrainingdata}\r\n          trainingdata={trainingdata}\r\n          handleDialogClose={handleTrainingDialogClose}\r\n        />\r\n      </CustomDialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  form: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nexport default EmployeeViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpExperiences.js",["1461","1462"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useExperiences } from \"./experiences/useExperiences\";\r\nimport { useUpdateExperiences } from \"./experiences/useUpdateExperiences\";\r\nimport { useAddExperiences } from \"./experiences/useAddExperiences\";\r\nimport { useDeleteExperiences } from \"./experiences/useDeleteExperiences\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n  },\r\n  {\r\n    title: \"Position\",\r\n    field: \"position\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"Remark\", field: \"remark\" },\r\n];\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { experiences, setExperienceId } = useExperiences();\r\n  const updateExperiences = useUpdateExperiences();\r\n  const addExperiences = useAddExperiences();\r\n  const deleteExperiences = useDeleteExperiences();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    setExperienceId(editEmployeeID);\r\n  }, []);\r\n\r\n  const update_Experience = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateExperiences({ id, ...fields });\r\n  };\r\n\r\n  const add_Experience = (data) => {\r\n    addExperiences({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Experience = (data) => {\r\n    const { id } = data;\r\n    deleteExperiences(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={experiences}\r\n          title=\"Experience\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Experience(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\data\\selectordata.js",["1463","1464","1465"],"import axios from \"axios\";\r\nimport { selector, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport {\r\n  empidState,\r\n  allowsPeriodState,\r\n  allowsDataDetlsState,\r\n} from \"./atomdata\";\r\nimport { departments_url } from \"../../utils/constants\";\r\nimport {\r\n  dailyallowances_url,\r\n  dailyallowsdetls_url,\r\n  employees_url,\r\n} from \"../../utils/constants\";\r\n\r\nexport const fetchDepartmentsSelector = selector({\r\n  key: \"departmentsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const res = await fetch(departments_url);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nexport const fetchEmployeesSelector = selector({\r\n  key: \"employeesSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const res = await fetch(employees_url);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nexport const fetchDailyAllowancesSelector = selector({\r\n  key: \"dailyallowancesSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const period = get(allowsPeriodState);\r\n      const { data } = await axios.get(`${dailyallowances_url}?fv=${period}`);\r\n      const res = await data;\r\n\r\n      return res;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nexport const fetchDailyAllowsDetlsSelector = selector({\r\n  key: \"dailyallowsDetlsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const period = get(allowsPeriodState);\r\n      const empid = get(empidState);\r\n      const { data } = await axios.get(\r\n        `${dailyallowsdetls_url}?fv=${empid}&period=${period}`\r\n      );\r\n      const res = await data;\r\n\r\n      return res;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payslip_Deductions.js",["1466","1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_Deductions({\r\n  setCalc,\r\n  deductionsdata,\r\n  oldDeductionsdata,\r\n  setDeductionsdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const payEarningData = useRecoilValue(payEarningDataState);\r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n  const { deductions } = useTablesContext();\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Description\",\r\n      field: \"description\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          //defaultValue={props.value || null}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          style={{ width: 200 }}\r\n          value={props.value}\r\n          select\r\n        >\r\n          {deductions.map((r) => {\r\n            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n          })}\r\n        </TextField>\r\n      ),\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const Save_DeductionsData = () => {\r\n    // delete unwanted data\r\n    console.log(\"update\", deductionsdata, oldDeductionsdata);\r\n    oldDeductionsdata.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = deductionsdata.find((r) => r.rec_id === rec_id);\r\n      console.log(\"find\", id, res);\r\n      if (!res) {\r\n        deletePayslipDeduction(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    deductionsdata.forEach((data) => {\r\n      const { id, description, amount } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayslipDeduction({ id, ...fields });\r\n      } else {\r\n        addPayslipDeduction({\r\n          description: description,\r\n          amount: amount,\r\n          name: single_payslip.name,\r\n          empid: payPeriodEmpId,\r\n          period: payPeriod,\r\n        });\r\n      }\r\n    });\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={deductionsdata}\r\n          title=\"Deductions\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setDeductionsdata([...deductionsdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...deductionsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setDeductionsdata([...dataUpdate]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...deductionsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setDeductionsdata([...dataDelete]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_DeductionsData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PrintPDFTest.js",[],["1478","1479"],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payslip_Earnings.js",["1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\n\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_Earnings({\r\n  setCalc,\r\n  earningsdata,\r\n  oldEarningsdata,\r\n  setEarningsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n   const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const payEarningData = useRecoilValue(payEarningDataState);\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n\r\n  const { name, amount } = payslipearnings;\r\n  const { allowances } = useTablesContext();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Description\",\r\n      field: \"description\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          //defaultValue={props.value || null}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          style={{ width: 200 }}\r\n          value={props.value}\r\n          select\r\n        >\r\n          {allowances.map((r) => {\r\n            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n          })}\r\n        </TextField>\r\n      ),\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  const update_PayslipEarning = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    console.log(\"update\", data);\r\n    updatePayslipEarning({ id: data.id, empid: empid, ...fields });\r\n\r\n    update_Payslip();\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipEarning = (data) => {\r\n    console.log(\"add\", data);\r\n    const { description, amount } = data;\r\n    addPayslipEarning({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipEarning = (data) => {\r\n    const { id } = data;\r\n    deletePayslipEarning(id);\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const Save_EarningsData = () => {\r\n    // delete unwanted data\r\n    console.log(\"update\", earningsdata, oldEarningsdata);\r\n    oldEarningsdata.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = earningsdata.find((r) => r.rec_id === rec_id);\r\n      console.log(\"find\", id, res);\r\n      if (!res) {\r\n        deletePayslipEarning(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    earningsdata.forEach((data) => {\r\n      const { id, description, amount } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayslipEarning({ id, ...fields });\r\n      } else {\r\n        addPayslipEarning({\r\n          description: description,\r\n          amount: amount,\r\n          name: single_payslip.name,\r\n          empid: payPeriodEmpId,\r\n          period: payPeriod,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={earningsdata}\r\n          title=\"Income\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setEarningsdata([...earningsdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...earningsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEarningsdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...earningsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setEarningsdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_EarningsData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payslip_ViewDeductions.js",["1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_ViewDeductions() {\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  \r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n  const { deductions } = useTablesContext();\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"description\",\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  \r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  \r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipdeductions}\r\n          title=\"Expense\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Payslip_ViewEarnings.js",["1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\n\r\n\r\nexport default function Payslip_ViewEarnings({ setCalc }) {\r\n  let history = useHistory();\r\n  const [load, setLoad] = useState(true);\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n\r\n  const { description, amount } = payslipearnings;\r\n  const { allowances } = useTablesContext();\r\n  console.log(\"recoil\", payPeriod, payPeriodEmpId);\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"description\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipearnings}\r\n          title=\"Income\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesAddPeriod.js",["1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport clsx from \"clsx\";\r\nimport { Button, Paper, Grid, Icon, TextField } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { siteallowsState, loginLevelState } from \"./data/atomdata\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { useDailyAllows } from \"./dailyallows/useDailyAllows\";\r\nimport { useAddDailyAllows } from \"./dailyallows/useAddDailyAllows\";\r\nimport { useDailyAllowsDetls } from \"./dailyallowsdetls/useDailyAllowsDetls\";\r\nimport { useAddDailyAllowsDetls } from \"./dailyallowsdetls/useAddDailyAllowsDetls\";\r\n\r\n//const drawerWidth = 240;\r\nconst selectYear = [{ name: \"2021\" }, { name: \"2022\" }];\r\nconst selectMonth = [\r\n  { name: \"January\" },\r\n  { name: \"February\" },\r\n  { name: \"March\" },\r\n  { name: \"April\" },\r\n  { name: \"May\" },\r\n  { name: \"June\" },\r\n];\r\n\r\nconst DailyAllowancesAddPeriod = ({ handleDialogClose }) => {\r\n  let date = new Date();\r\n  let longMonth = date.toLocaleString(\"en-us\", { month: \"long\" });\r\n  //console.log(\"date\", date, longMonth);\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const toast = useCustomToast();\r\n  const { dailyallows } = useDailyAllows();\r\n  const { dailyallowsdetls } = useDailyAllowsDetls();\r\n  const addDailyAllows = useAddDailyAllows();\r\n  const addDailyAllowsDetls = useAddDailyAllowsDetls();\r\n  const [input, setInput] = useRecoilState(siteallowsState);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [allowsPeriod, setAllowsPeriod] = useState(\"\");\r\n  const [alert, setAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  // const { dailyallowances, addDailyAllowance, addDailyAllowsDetl } =\r\n  //   useDailyAllowancesContext();\r\n  // function daysInMonth(month, year) {\r\n  //   return new Date(year, month, 0).getDate();\r\n  // }\r\n\r\n  useEffect(() => {\r\n    setInput({\r\n      ...input,\r\n      empid: loginLevel.loginUserId,\r\n      name: loginLevel.loginUser,\r\n      jobbonus: loginLevel.siteallows_fee,\r\n      perdiem: loginLevel.perdiem_fee,\r\n      manager: loginLevel.reporting_to,\r\n      clieng: \"\",\r\n    });\r\n  }, []);\r\n\r\n  const periodExists = (data) => {\r\n    return dailyallows.some(function (el) {\r\n      return el.period === data;\r\n    });\r\n  };\r\n\r\n  const buildSiteAllows = () => {\r\n    const period =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n\r\n    const isExist = periodExists(period);\r\n    if (isExist) {\r\n      toast({\r\n        title: \"Site Allowance period is existed!\",\r\n        status: \"warning\",\r\n      });\r\n      // setError(true);\r\n      return null;\r\n    }\r\n\r\n    // build siteallowsbatch\r\n\r\n    const diffInDays = differenceInDays(\r\n      new Date(input.todate),\r\n      new Date(input.fromdate)\r\n    );\r\n\r\n    let amount = 0;\r\n    for (let i = 0; i <= diffInDays; i++) {\r\n      amount = amount + input.jobbonus + input.perdiem;\r\n      const data = addDays(new Date(input.fromdate), i);\r\n      addDailyAllowsDetls({\r\n        empid: loginLevel.loginUserId,\r\n        name: loginLevel.loginUser,\r\n        period: period,\r\n        date: data,\r\n        district: input.district,\r\n        typeoperation: input.typeoperation,\r\n        client: input.client,\r\n        location: input.location,\r\n        jobno: input.jobno,\r\n        crewoperation: input.crewoperation,\r\n        jobbonus: input.jobbonus,\r\n        perdiem: input.perdiem,\r\n        status: \"Pending\",\r\n      });\r\n    }\r\n    //add daily allowances batch\r\n    addDailyAllows({\r\n      period: period,\r\n      location: input.location,\r\n      manager: input.manager,\r\n      name: loginLevel.loginUser,\r\n      empid: loginLevel.loginUserId,\r\n      status: \"Pending\",\r\n      no_of_days: diffInDays,\r\n      amount: amount,\r\n    });\r\n\r\n    // dailyallowances.push({\r\n    //   period: period,\r\n    //   location: input.location,\r\n    //   manager: input.manager,\r\n    //   name: loginLevel.loginUser,\r\n    //   empid: loginLevel.loginUserId,\r\n    //   status: \"Pending\",\r\n    //   no_of_days: diffInDays,\r\n    //   amount: amount,\r\n    // });\r\n    handleDialogClose();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    setInput({ ...input, [name]: val });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const period =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    setInput({\r\n      ...input,\r\n      period: period,\r\n    });\r\n\r\n    buildSiteAllows();\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      className={fixedHeightPaper}\r\n      style={{ backgroundColor: \"secondary\" }}\r\n    >\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Heading color=\"blue\" style={{ padding: 10 }}>\r\n            Build Site Allowances\r\n          </Heading>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <div>\r\n            <Grid\r\n              item\r\n              sm={12}\r\n              style={{ border: \"1px solid white\" }}\r\n              align=\"left\"\r\n            >\r\n              {/* <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Year\"\r\n                  id=\"margin-normal\"\r\n                  name=\"year\"\r\n                  required\r\n                  defaultValue={input.year}\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  style={{ width: \"100%\", marginTop: 10, marginLeft: 10 }}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  select\r\n                >\r\n                  {selectYear.map((item) => {\r\n                    return <MenuItem value={item.name}>{item.name}</MenuItem>;\r\n                  })}\r\n                </TextField>\r\n                <TextField\r\n                  label=\"Month\"\r\n                  id=\"margin-normal\"\r\n                  name=\"month\"\r\n                  required\r\n                  defaultValue={input.month}\r\n                  style={{ width: \"100%\", marginTop: 10, marginLeft: 0 }}\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  select\r\n                >\r\n                  {selectMonth.map((item) => {\r\n                    return <MenuItem value={item.name}>{item.name}</MenuItem>;\r\n                  })}\r\n                </TextField>\r\n              </div> */}\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"From Date\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"fromdate\"\r\n                  value={input.fromdate}\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"To Date\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"todate\"\r\n                  value={input.todate}\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                {/* <TextField\r\n                  label=\"Period\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"period\"\r\n                  value={input.period}\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField> */}\r\n                {/* <Divider className={classes.divider} /> */}\r\n                <TextField\r\n                  label=\"Manager\"\r\n                  variant=\"filled\"\r\n                  //required\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"manager\"\r\n                  value={input.manager}\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"District\"\r\n                  variant=\"filled\"\r\n                  //required\r\n                  value={input.district}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"district\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Location/Rig\"\r\n                  variant=\"filled\"\r\n                  //required\r\n                  value={input.location}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"location\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Operation Type\"\r\n                  variant=\"filled\"\r\n                  //required\r\n                  value={input.typeoperation}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"typeoperation\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Client\"\r\n                  variant=\"filled\"\r\n                  //required\r\n                  value={input.client}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"client\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Ticket No/Job No\"\r\n                  variant=\"filled\"\r\n                  //required\r\n                  value={input.jobno}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"jobno\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Crew Operation\"\r\n                  variant=\"filled\"\r\n                  //required\r\n                  value={input.creqoperation}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"crewoperation\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Job Bonus\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.jobbonus}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"jobbonus\"\r\n                  type=\"number\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Per Diem\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.perdiem}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"perdiem\"\r\n                  type=\"number\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Build <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            {error && (\r\n              <Alert severity=\"error\" onClose={() => setError(false)}>\r\n                Period already existed!\r\n              </Alert>\r\n            )}\r\n          </div>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"95vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  formLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    marginLeft: 8,\r\n    marginTop: 8,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default DailyAllowancesAddPeriod;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\CardLayout.js",["1534","1535","1536","1537","1538","1539","1540"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nconst CardLayout = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={\r\n          <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n      />\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\CustomDialog.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\CardLayout2.js",["1541","1542","1543","1544","1545","1546","1547","1548"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst CardLayout2 = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      {title && <CardHeader title={title} />}\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout2;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTable.js",["1549","1550","1551","1552","1553","1554","1555"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setExpensesdata(expenses);\r\n    console.log(expensesdata)\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleExpense();\r\n    setEditExpenseID(\"\");\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const approve_Expense = async (data) => {\r\n    console.log(\"approve\", data);\r\n    const { id, rec_id, ...fields } = data;\r\n    updateExpense({ id, ...fields });\r\n    // loadExpenses();\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    getSingleExpense(id);\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadExpenses();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadExpenses();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Expenses</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\nif (!expensesdata) {\r\n  return (\r\n    <div>\r\n      <h2>Loading...Expenses</h2>\r\n    </div>\r\n  );\r\n}\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...expensesdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setExpensesdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpTrainings.js",["1556","1557","1558","1559","1560","1561","1562","1563","1564","1565"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\nimport { useUpdateTrainings } from \"./trainings/useUpdateTrainings\";\r\nimport { useAddTrainings } from \"./trainings/useAddTrainings\";\r\nimport { useDeleteTrainings } from \"./trainings/useDeleteTrainings\";\r\nconst columns = [\r\n  {\r\n    title: \"Institute\",\r\n    field: \"institute\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function Emp_Training({\r\n  trainingdata,\r\n  setTrainingdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { trainings, filter, setFilter, setTrainingId } = useTrainings();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const updateTrainings = useUpdateTrainings();\r\n  const addTrainings = useAddTrainings();\r\n  const deleteTrainings = useDeleteTrainings();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    getSingleBatchTraining,\r\n    singlebatch_training,\r\n    //addTraining,\r\n    //deleteTraining,\r\n    //updateTraining,\r\n    singlebatch_training_loading,\r\n  } = useTrainingsContext();\r\n\r\n  useEffect(() => {\r\n    setTrainingId(editEmployeeID);\r\n  }, []);\r\n\r\n  const add_Training = (data) => {\r\n    addTrainings({ ...data, name:loginLevel.loginUser  ,empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Training = (data) => {\r\n    const { id } = data;\r\n    deleteTrainings(id);\r\n  };\r\n\r\n  const update_Training = (data) => {\r\n    const { id, rec_id, tableData,...fields } = data;\r\n    updateTrainings({ id, ...fields });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={trainings}\r\n          title=\"Training\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Training(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Training(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Training(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpFamily.js",["1566","1567","1568","1569","1570","1571"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nimport { useFamily } from \"./family/useFamily\";\r\nimport { useUpdateFamily } from \"./family/useUpdateFamily\";\r\nimport { useAddFamily } from \"./family/useAddFamily\";\r\nimport { useDeleteFamily } from \"./family/useDeleteFamily\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Father\">Father</MenuItem>\r\n        <MenuItem value=\"Mother\">Mother</MenuItem>\r\n        <MenuItem value=\"Daughter\">Daughter</MenuItem>\r\n        <MenuItem value=\"Son\">Son</MenuItem>\r\n        <MenuItem value=\"Son-in-law\">Son-in-law</MenuItem>\r\n        <MenuItem value=\"Daughter-in-law\">Daughter-in-law</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Emp_Family() {\r\n  const classes = useStyles();\r\n  const { family, filter, setFilter, setFamilyId } = useFamily();\r\n  const updateFamily = useUpdateFamily();\r\n  const addFamily = useAddFamily();\r\n  const deleteFamily = useDeleteFamily();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const update_Family = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateFamily({ id, ...fields });\r\n  };\r\n\r\n  const add_Family = (data) => {\r\n    addFamily({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Family = (data) => {\r\n    const { id } = data;\r\n    deleteFamily(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFamilyId(editEmployeeID);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={family}\r\n          title=\"Family\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setFamilydata([...familydata, newData]);\r\n                  add_Family(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Family(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Family(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpEducations.js",["1572"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useEducations } from \"./educations/useEducations\";\r\nimport { useUpdateEducations } from \"./educations/useUpdateEducations\";\r\nimport { useAddEducations } from \"./educations/useAddEducations\";\r\nimport { useDeleteEducations } from \"./educations/useDeleteEducations\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField onChange={(e) => props.onChange(e.target.value)} type=\"date\" />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Archievement\",\r\n    field: \"archievement\",\r\n  },\r\n\r\n  { title: \"Grade\", field: \"grade\" },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations({\r\n  educationdata,\r\n  setEducationdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { educations, setEducationId } = useEducations();\r\n  const updateEducations = useUpdateEducations();\r\n  const addEducations = useAddEducations();\r\n  const deleteEducations = useDeleteEducations();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    setEducationId(editEmployeeID);\r\n  }, []);\r\n\r\n  const update_Education = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateEducations({ id, ...fields });\r\n  };\r\n\r\n  const add_Education = (data) => {\r\n    addEducations({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Education = (data) => {\r\n    const { id } = data;\r\n    deleteEducations(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={educations}\r\n          title=\"Education\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Education(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Education(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataDelete = [...educationdata];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataDelete.splice(index, 1);\r\n                  delete_Education(oldData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpPersonal.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewTrainings.js",["1573"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institute\",\r\n    field: \"institute\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    singlebatch_training,\r\n    getSingleBatchTraining,\r\n    singlebatch_training_loading,\r\n  } = useTrainingsContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchTraining(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_training_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Trainings</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_training}\r\n          title=\"\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewExperiences.js",["1574"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n  },\r\n  {\r\n    title: \"Position\",\r\n    field: \"position\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    loadSingleBatchExperience,\r\n    singlebatchexperience,\r\n    singlebatch_experience_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    //console.log(linkid);\r\n    loadSingleBatchExperience(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_experience_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Experience</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatchexperience}\r\n          title=\"Experience\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewLeaves.js",["1575"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"Reason\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { singlebatch_leave, getSingleBatchLeave, singlebatch_leave_loading } =\r\n    useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchLeave(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_leave_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_leave}\r\n          title=\"\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewEducations.js",["1576"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const {\r\n    loadSingleBatchEducation,\r\n    singlebatcheducation,\r\n    singlebatch_education_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_education_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Education</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatcheducation}\r\n          title=\"Experience\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpViewFamily.js",["1577"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    loadSingleBatchFamily,\r\n     singlebatchfamily,\r\n     singlebatch_family_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadSingleBatchFamily(editEmployeeID);\r\n  }, []);\r\n  \r\n  if (singlebatch_family_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Family</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatchfamily}\r\n          title=\"Family\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\AlertDialog.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeFormStaff.js",["1578","1579","1580","1581","1582","1583","1584","1585","1586"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n//import { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\n// import EmpFamilyStaff from \"./EmpFamilyStaff\";\r\n// import EmpEducationsStaff from \"./EmpEducationsStaff\";\r\n// import EmpExperiencesStaff from \"./EmpExperiencesStaff\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  basic_salary: 0,\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  address: \"\",\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  date_of_join: null,\r\n  date_of_resign: null,\r\n  designation: \"\",\r\n  department: \"\",\r\n  passportno: \"\",\r\n  passport_expirydate: null,\r\n  workpermitno: \"\",\r\n  workpermit_expirydate: null,\r\n  siteallows_fee: 0,\r\n  perdiem_fee: 0,\r\n  reporting_to: \"\",\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  const classes = useStyles();\r\n  const { employees, setFilter } = useEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const {\r\n    isEditing,\r\n    single_employee,\r\n    editEmployeeID,\r\n    getSingleEmployee,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n\r\n  const {\r\n    name,\r\n    ic_no,\r\n    gender,\r\n    age,\r\n    email,\r\n    address,\r\n    basic_salary,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_acno,\r\n    scp_acno,\r\n    leave_bal,\r\n    leave_entitled,\r\n    date_of_join,\r\n    date_of_resign,\r\n    designation,\r\n    department,\r\n    passportno,\r\n    passport_expirydate,\r\n    workpermitno,\r\n    workpermit_expirydate,\r\n    siteallows_fee,\r\n    perdiem_fee,\r\n    reporting_to,\r\n  } = single_employee || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    updateEmployees({ id: editEmployeeID, ...data });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleEmployee(editEmployeeID);\r\n  }, []);\r\n\r\n  if (single_employee_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... </h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                EMPLOYEE FORM\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Divider className={classes.divider} />\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"standard-name\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={email}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        id=\"standard-email\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"ic_no\"\r\n                  control={control}\r\n                  defaultValue={ic_no}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"IC No\"\r\n                        id=\"standard-icno\"\r\n                        name=\"ic_no\"\r\n                        defaultValue={ic_no}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"gender\"\r\n                  control={control}\r\n                  defaultValue={gender}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Gender\"\r\n                        id=\"standard-gender\"\r\n                        name=\"gender\"\r\n                        defaultValue={gender}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"age\"\r\n                  control={control}\r\n                  defaultValue={age}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"standard-age\"\r\n                        name=\"age\"\r\n                        defaultValue={age}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"passportno\"\r\n                  control={control}\r\n                  defaultValue={passportno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport No\"\r\n                        id=\"stanrad-ppno\"\r\n                        name=\"passportno\"\r\n                        defaultValue={passportno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"passport_expirydate\"\r\n                  control={control}\r\n                  defaultValue={passport_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport Expiry Date\"\r\n                        id=\"standard-ppexpiry\"\r\n                        name=\"passport_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={passport_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"address\"\r\n                  control={control}\r\n                  defaultValue={address}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        id=\"standard-address\"\r\n                        name=\"address\"\r\n                        defaultValue={address}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <Divider className={classes.divider} />\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"basic_salary\"\r\n                  control={control}\r\n                  defaultValue={basic_salary}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Basic Salary\"\r\n                        type=\"number\"\r\n                        id=\"standard-bsalary\"\r\n                        name=\"basic_pay\"\r\n                        defaultValue={basic_salary}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"siteallows_fee\"\r\n                  control={control}\r\n                  defaultValue={siteallows_fee}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Site Allowances Fee\"\r\n                        type=\"number\"\r\n                        id=\"standard-siteallows\"\r\n                        name=\"siteallows_fee\"\r\n                        defaultValue={siteallows_fee}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"perdiem_fee\"\r\n                  control={control}\r\n                  defaultValue={perdiem_fee}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Perdiem Fee\"\r\n                        type=\"number\"\r\n                        id=\"standard-perdiem\"\r\n                        name=\"perdiem_fee\"\r\n                        defaultValue={perdiem_fee}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"standard-bankname\"\r\n                        name=\"bank_name\"\r\n                        defaultValue={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Ac No\"\r\n                        id=\"standard-bankacno\"\r\n                        name=\"bank_acno\"\r\n                        defaultValue={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_acno\"\r\n                  control={control}\r\n                  defaultValue={tap_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Ac No\"\r\n                        id=\"standard-tapacno\"\r\n                        name=\"tap_acno\"\r\n                        defaultValue={tap_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"scp_acno\"\r\n                  control={control}\r\n                  defaultValue={scp_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Ac No\"\r\n                        id=\"standard-scpacno\"\r\n                        name=\"scp_acno\"\r\n                        defaultValue={scp_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"workpermitno\"\r\n                  control={control}\r\n                  defaultValue={workpermitno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit No\"\r\n                        id=\"standard-wpno\"\r\n                        name=\"workpermitno\"\r\n                        defaultValue={workpermitno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"workpermit_expirydate\"\r\n                  control={control}\r\n                  defaultValue={workpermit_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit Expiry Date\"\r\n                        id=\"standard-wpexpiry\"\r\n                        name=\"workpermit_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={workpermit_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n              <div>\r\n                <Controller\r\n                  name=\"date_of_join\"\r\n                  control={control}\r\n                  defaultValue={date_of_join}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Joining Date\"\r\n                        id=\"standard-joindate\"\r\n                        name=\"date_of_join\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_join}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"date_of_resign\"\r\n                  control={control}\r\n                  defaultValue={date_of_resign}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Resign Date\"\r\n                        id=\"standard-resigndate\"\r\n                        name=\"date_of_resign\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_resign}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"leave_entitled\"\r\n                  control={control}\r\n                  defaultValue={leave_entitled}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Annual Leaves Entitled\"\r\n                        id=\"standard-annualleave\"\r\n                        name=\"leave_entitled\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_entitled}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"leave_bal\"\r\n                  control={control}\r\n                  defaultValue={leave_bal}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Leaves Balance\"\r\n                        id=\"standard-leavebal\"\r\n                        name=\"leave_bal\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_bal}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"designation\"\r\n                  control={control}\r\n                  defaultValue={designation}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Designation\"\r\n                        id=\"standard-designation\"\r\n                        name=\"designation\"\r\n                        defaultValue={designation}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"department\"\r\n                  control={control}\r\n                  defaultValue={department}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Department\"\r\n                        id=\"standard-department\"\r\n                        name=\"department\"\r\n                        defaultValue={department}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n\r\n      <Grid xs={12}>\r\n        <EmpFamily />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <EmpEducations />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <EmpExperiences />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <EmpTrainings />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\ClientsPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\PrivateRoute.js",["1587","1588"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import { useUserContext } from '../context/user_context'\r\n\r\nconst PrivateRoute = () => {\r\n  return <div>Private Route</div>;\r\n};\r\nexport default PrivateRoute;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\TablesPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DailyAllowancesStaffPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DesignationPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DailyAllowancesPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\AllowancesPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DepartmentsPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\BatchPayslipsPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\PayslipPage.js",["1589"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport PayslipPeriods from \"../components/PayslipsPeriods\";\r\nimport PayslipTable from \"../components/PayslipTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Payslips = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <PayslipTable />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\n\r\nexport default Payslips;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\PayrollPage.js",["1590"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport PayslipsPeriods from \"../components/PayslipsPeriods\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst PayrollPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <h2>Payroll Page</h2>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default PayrollPage;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\ExpensesStaffPage.js",["1591","1592"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport ExpenseTableStaff from \"../components/ExpenseTableStaff\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesStaffPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n    \r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <ExpenseTableStaff title=\"Expenses Claims\" />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesStaffPage;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\ExpensesPage.js",["1593"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport ExpenseTable from \"../components/ExpenseTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { loadExpenses, expenses_loading } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadExpenses();\r\n  }, []);\r\n\r\n  if (expenses_loading) {\r\n    return (\r\n      <div>\r\n        <Paper className={fixedHeightPaper}>\r\n          \r\n        <h2>Loading...Expenses</h2>\r\n         </Paper>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <ExpenseTable title=\"Expenses Claims\" />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesPage;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\LeaveStaffPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\LeavePage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\AllEmployeesPage.js",["1594"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport AllEmployeesTable from \"../components/AllEmployeesTable\";\r\nimport { headEmployeesTableCells } from \"../utils/constants\";\r\nconst drawerWidth = 240;\r\n\r\nconst AllEmployees = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <AllEmployeesTable title=\"All Employees\" />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n    height: \"95vh\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\nexport default AllEmployees;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\DashboardPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\HomePage.js",["1595","1596","1597","1598","1599","1600","1601","1602","1603"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { loginLevelState } from \"../components/data/atomdata\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport HomeAdmin from \"../components/HomeAdmin\";\r\nimport HomeStaff from \"../components/HomeStaff\";\r\nimport HomeAdminManager from \"../components/HomeAdminManager\";\r\nimport HomeManager from \"../components/HomeManager\";\r\nconst drawerWidth = 240;\r\n\r\nconst HomePage = () => {\r\n  // const classes = useStyles();\r\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\nconst SwitchCase = () => {\r\n \r\n  switch (loginLevel.loginLevel) {\r\n    case \"Staff\":\r\n      return <HomeStaff />;\r\n    case \"Admin\":\r\n      return <HomeAdmin />;\r\n    case \"AdminManager\":\r\n      return <HomeAdminManager />;\r\n    case \"Manager\":\r\n      return <HomeManager />;\r\n    default:\r\n      return \"You are not authorised user!\";\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <SwitchCase />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomePage;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayForm.js",["1604","1605","1606","1607","1608","1609","1610"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Grid,\r\n  Icon,\r\n  TextField,\r\n  Divider,\r\n  ListSubheader,\r\n  MenuItem,\r\n  Select,\r\n  NativeSelect,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { Heading, Text } from \"@chakra-ui/react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst initial_state = [\r\n  {\r\n    name: \"\",\r\n    period: \"\",\r\n    date: \"\",\r\n    payrun: \"\",\r\n    nett_pay: 0,\r\n    bank_name: \"\",\r\n    bank_acno: \"\",\r\n    tap_acno: \"\",\r\n    tap_amount: 0,\r\n    scp_acno: \"\",\r\n    scp_amount: 0,\r\n    total_allowances: 0,\r\n    total_deductions: 0,\r\n    empid: \"\",\r\n    status: \"\",\r\n    allows_type1: \" \",\r\n    allows_type1amt: 0,\r\n    allows_type2: \" \",\r\n    allows_type2amt: 0,\r\n    allows_type3: \" \",\r\n    allows_type3amt: 0,\r\n    allows_type4: \" \",\r\n    allows_type4amt: 0,\r\n    allows_type5: \" \",\r\n    allows_type5amt: 0,\r\n    allows_type6: \" \",\r\n    allows_type6amt: 0,\r\n    allows_type7: \"\",\r\n    allows_type7amt: 0,\r\n    allows_type8: \"\",\r\n    allows_type8amt: 0,\r\n    deducts_type1: \"\",\r\n    deducts_type1amt: 0,\r\n    deducts_type2: \" \",\r\n    deducts_type2amt: 0,\r\n    deducts_type3: \" \",\r\n    deducts_type3amt: 0,\r\n    deducts_type4: \"\",\r\n    deducts_type4amt: 0,\r\n    deducts_type5: \"\",\r\n    deducts_type5amt: 0,\r\n    deducts_type6: \"\",\r\n    deducts_type6amt: 0,\r\n    deducts_type7: \"\",\r\n    deducts_type7amt: 0,\r\n    deducts_type8: \"\",\r\n    deducts_type8amt: 0,\r\n  },\r\n];\r\n\r\nconst PayForm = ({\r\n  formdata,\r\n  setFormdata,\r\n  loadFormdata,\r\n  setLoadFormdata,\r\n  payitems,\r\n  setLoadUpdatedata,\r\n  rowindex,\r\n  isCalc,\r\n  setIsCalc\r\n}) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState(initial_state);\r\n  const { singlebatchpayslip } = usePayslipsContext();\r\n\r\n  useEffect(() => {\r\n    setState(initial_state);\r\n    setState({ ...formdata });\r\n    setLoadFormdata(false);\r\n    console.log(\"useeffect state\", state);\r\n  }, [loadFormdata]);\r\n\r\n  // useEffect(() => {\r\n  //   handleCalc()\r\n  // },[state])\r\n\r\n  const Update_Empdata = ({ name, value }) => {\r\n    let data = singlebatchpayslip[rowindex];\r\n    data[name] = value;\r\n    console.log(\"update data\", data);\r\n    console.log(\"update payslip\", singlebatchpayslip[rowindex]);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    //setFormInput({ [name]: val });\r\n    setState({ ...state, [name]: val });\r\n    Update_Empdata({ name: name, value: val });\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submitform\");\r\n    handleCalc();\r\n  };\r\n\r\n  const handleCalc = (e) => {\r\n    let data = singlebatchpayslip[rowindex];\r\n    const totalTAP = Math.ceil(state.wages * 0.05);\r\n    const totalSCP =\r\n      Math.round((state.wages + Number.EPSILON) * 0.035 * 100) / 100;\r\n\r\n    const allows =\r\n      parseInt(state.allows_type1amt, 10) +\r\n      parseInt(state.allows_type2amt, 10) +\r\n      parseInt(state.allows_type3amt, 10) +\r\n      parseInt(state.allows_type4amt, 10) +\r\n      parseInt(state.allows_type5amt, 10) +\r\n      parseInt(state.allows_type6amt, 10) +\r\n      parseInt(state.allows_type7amt, 10) +\r\n      parseInt(state.allows_type8amt, 10);\r\n\r\n    const deducts =\r\n      parseInt(state.deducts_type1amt, 10) +\r\n      parseInt(state.deducts_type2amt, 10) +\r\n      parseInt(state.deducts_type3amt, 10) +\r\n      parseInt(state.deducts_type4amt, 10) +\r\n      parseInt(state.deducts_type5amt, 10) +\r\n      parseInt(state.deducts_type6amt, 10) +\r\n      parseInt(state.deducts_type7amt, 10) +\r\n      parseInt(state.deducts_type8amt, 10);\r\n\r\n    const nettPay = state.wages - totalTAP - totalSCP + allows - deducts;\r\n    setState({\r\n      ...state,\r\n      total_allowances: allows,\r\n      total_deductions: deducts,\r\n      tap_amount: totalTAP,\r\n      scp_amount: totalSCP,\r\n      nett_pay: nettPay,\r\n    });\r\n    //update employee data\r\n    data.tap_amount = totalTAP;\r\n    data.scp_amount = totalSCP;\r\n    data.total_allowances = allows;\r\n    data.total_deductions = deducts;\r\n    data.nett_pay = nettPay;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Text as=\"u\" fontSize=\"md\">\r\n            Allowances\r\n          </Text>\r\n        </Grid>\r\n\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Text as=\"u\" fontSize=\"md\">\r\n            Deductions\r\n          </Text>\r\n        </Grid>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Text as=\"u\" fontSize=\"md\">\r\n            Summary\r\n          </Text>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n            <Grid\r\n              item\r\n              sm={8}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <div>\r\n                <TextField\r\n                  label=\"Allowance\"\r\n                  name=\"allows_type1\"\r\n                  variant=\"filled\"\r\n                  type=\"text\"\r\n                  value={state.allows_type1}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Allowance\"\r\n                  name=\"allows_type2\"\r\n                  variant=\"filled\"\r\n                  type=\"text\"\r\n                  displayEmpty\r\n                  defaultValue=\"\"\r\n                  value={state.allows_type2}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type3\"\r\n                  value={state.allows_type3}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type4\"\r\n                  value={state.allows_type4}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type5\"\r\n                  value={state.allows_type5}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type6\"\r\n                  value={state.allows_type6}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type7\"\r\n                  value={state.allows_type7}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type8\"\r\n                  value={state.allows_type8}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={4}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type1amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.allows_type1amt}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type2amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.allows_type2amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type3amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.allows_type3amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type4amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.allows_type4amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type5amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.allows_type5amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type6amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.allows_type6amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type7amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.allows_type7amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type8amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.allows_type8amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n            <Grid\r\n              item\r\n              sm={8}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type1\"\r\n                  value={state.deducts_type1}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type2\"\r\n                  value={state.deducts_type2}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type3\"\r\n                  value={state.deducts_type3}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type4\"\r\n                  value={state.deducts_type4}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type5\"\r\n                  value={state.deducts_type5}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type6\"\r\n                  value={state.deducts_type6}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type7\"\r\n                  value={state.deducts_type7}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type8\"\r\n                  value={state.deducts_type8}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={4}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type1amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.deducts_type1amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type2amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.deducts_type2amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type3amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.deducts_type3amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type4amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.deducts_type4amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type5amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.deducts_type5amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type6amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.deducts_type6amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type7amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.deducts_type7amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type8amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={state.deducts_type8amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <div>\r\n            <h3>{state.name}</h3>\r\n          </div>\r\n          <Divider variant=\"fullWidth\" className={classes.divider} />\r\n          <div>\r\n            <TextField\r\n              label=\"Wages\"\r\n              name=\"wages\"\r\n              variant=\"filled\"\r\n              type=\"number\"\r\n              value={state.wages}\r\n              onChange={handleChange}\r\n              style={{ width: \"100%\" }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"TAP Amount\"\r\n              name=\"tap_amount\"\r\n              variant=\"filled\"\r\n              type=\"number\"\r\n              value={state.tap_amount}\r\n              onChange={handleChange}\r\n              style={{ width: \"100%\" }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"SCP Amounut\"\r\n              name=\"scp_amount\"\r\n              variant=\"filled\"\r\n              type=\"number\"\r\n              value={state.scp_amount}\r\n              onChange={handleChange}\r\n              style={{ width: \"100%\" }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Total Allowances\"\r\n              name=\"total_allowances\"\r\n              variant=\"filled\"\r\n              type=\"number\"\r\n              value={state.total_allowances}\r\n              onChange={handleChange}\r\n              style={{ width: \"100%\" }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Total Deductions\"\r\n              name=\"total_deductions\"\r\n              variant=\"filled\"\r\n              type=\"number\"\r\n              value={state.total_deductions}\r\n              onChange={handleChange}\r\n              style={{ width: \"100%\" }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Nett Pay\"\r\n              name=\"nett_pay\"\r\n              variant=\"filled\"\r\n              type=\"number\"\r\n              value={state.nett_pay}\r\n              onChange={handleChange}\r\n              style={{ width: \"100%\" }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              style={{ marginLeft: 10 }}\r\n              onClick={handleCalc}\r\n            >\r\n              Calc <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        {/* <button>Submit</button> */}\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  divContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  formLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    marginLeft: 8,\r\n    marginTop: 5,\r\n  },\r\n}));\r\n\r\nexport default PayForm;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpExperiencesStaff.js",[],["1611","1612"],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpFamilyStaff.js",["1613"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Father\">Father</MenuItem>\r\n        <MenuItem value=\"Mother\">Mother</MenuItem>\r\n        <MenuItem value=\"Daughter\">Daughter</MenuItem>\r\n        <MenuItem value=\"Son\">Son</MenuItem>\r\n        <MenuItem value=\"Son-in-law\">Son-in-law</MenuItem>\r\n        <MenuItem value=\"Daughter-in-law\">Daughter-in-law</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n];\r\n\r\n\r\n\r\nexport default function Emp_Family({\r\n  familydata,\r\n  setFamilydata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    singlebatchfamily,\r\n    addFamily,\r\n    deleteFamily,\r\n    updateFamily,\r\n    singlebatch_family_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {}, [familydata]);\r\n\r\n  const Save_FamilyData = () => {\r\n    // delete unwanted data\r\n    singlebatchfamily.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = familydata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteFamily(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    familydata.forEach((data) => {\r\n      const { id, name, relationship, birth_date, phone, age } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateFamily({ id, ...fields });\r\n      } else {\r\n        addFamily({\r\n          name,\r\n          relationship,\r\n          birth_date,\r\n          phone,\r\n          age,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // const update_Family = (data) => {\r\n  //   const { id, rec_id, tableData, ...fields } = data;\r\n  //   setTimeout(() => {}, 1000);\r\n\r\n  //   updateFamily({ id, ...fields });\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  // const add_Family = (data) => {\r\n  //   addFamily({ ...data, empid: editEmployeeID });\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  // const delete_Family = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteFamily(id);\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  if (singlebatch_family_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Family</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={familydata}\r\n          title=\"Family\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setFamilydata([...familydata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setFamilydata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setFamilydata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_FamilyData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n          // localization={{\r\n          //   body: {\r\n          //     dateTimePickerLocalization: enGB,\r\n          //   },\r\n          // }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmpEducationsStaff.js",["1614"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField onChange={(e) => props.onChange(e.target.value)} type=\"date\" />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Archievement\",\r\n    field: \"archievement\",\r\n  },\r\n\r\n  { title: \"Grade\", field: \"grade\" },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n  },\r\n];\r\n\r\nexport default function EmpEducationsStaff({\r\n  educationdata,\r\n  setEducationdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const {\r\n    singlebatcheducation,\r\n    addEducation,\r\n    deleteEducation,\r\n    updateEducation,\r\n    singlebatch_education_loading,\r\n  } = useTablesContext();\r\n\r\n  //useEffect(() => {}, [educationdata]);\r\n\r\n  const Save_EducationData = () => {\r\n    //console.log(educationdata);\r\n    // delete unwanted data\r\n    singlebatcheducation.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = educationdata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteEducation(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n\r\n    educationdata.forEach((data) => {\r\n      const { id, institution, course, from_date, to_date, grade, remark } =\r\n        data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateEducation({ id, ...fields });\r\n      } else {\r\n        addEducation({\r\n          institution,\r\n          course,\r\n          from_date,\r\n          to_date,\r\n          grade,\r\n          remark,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // const update_Education = (data) => {\r\n  //   updateEducation({ id: data.id, ...data });\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  // const add_Education = (data) => {\r\n  //   addEducation({ ...data, empid: editEmployeeID });\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  // const delete_Education = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteEducation(id);\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  if (singlebatch_education_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Education</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={educationdata}\r\n          title=\"Education\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setEducationdata([...educationdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...educationdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEducationdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...educationdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setEducationdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_EducationData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesPeriods.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\TablesUpdate.js",["1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Grid,\r\n  Toolbar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\"\r\nimport { useAllowances } from \"./allowances/useAllowances\";\r\nimport { useDeductions } from \"./deductions/useDeductions\";\r\n\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport UpdateAllowances from \"./AllowancesTable\";\r\nimport UpdateDeductions from \"./DeductionsTable\";\r\nimport UpdateDepartments from \"./DepartmentsTable\";\r\nimport UpdateDesignations from \"./DesignationsTable\";\r\n\r\nconst TablesUpdate = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const departments = useDepartments();\r\n  const deductions = useDeductions();\r\n  const allowances = useAllowances();\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <Grid container alignItems=\"center\" className={classes.grid}>\r\n        <Grid xs={12}>\r\n          <h2>Tables Maintenance</h2>\r\n        </Grid>\r\n\r\n        <Grid xs={12}>\r\n          <UpdateAllowances />\r\n        </Grid>\r\n        <Divider />\r\n\r\n        <Grid xs={12}>\r\n          <UpdateDeductions />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <UpdateDepartments />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <UpdateDesignations />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n  grid: {\r\n    padding: theme.spacing(3, 2),\r\n    // justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    height: 100,\r\n    display: \"flex\",\r\n    border: \"1px solid black\",\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport default TablesUpdate;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\TableForm.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Example.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTable.js",["1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { payrunState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { usePayrun } from \"./payrun/usePayrun\"\r\n\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Payrun Batch\",\r\n    field: \"payrun\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"Pay Date\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  // { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n  // { title: \"Total Allowances\", field: \"totalallowances\", type: \"currency\" },\r\n  // { title: \"Total Deductions\", field: \"totaldeductions\", type: \"currency\" },\r\n  { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { payrun } = usePayrun()\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [isLoadInput, setIsLoadInput] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [deletestate, setDeletestate] = useState({ id: \"\", payrun: \"\" });\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const { loadPeriodExpenses, periodexpenses, updateExpense } =\r\n    useExpensesContext();\r\n  const {\r\n    getSingleBatchDailyAllowance,\r\n    singlebatchdailyallowance,\r\n    updateDailyAllowance,\r\n    deleteDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n  const {\r\n    //payrun,\r\n    getPayrun,\r\n    payrun_loading,\r\n    payrun_error,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    single_payslip,\r\n    setPayslipPeriod,\r\n    deletePayrun,\r\n    deletePayslip,\r\n    pending_payslips,\r\n    loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n\r\n  useEffect(() => {\r\n    getPayrun();\r\n    // loadPendingPayslips(FILTERSTRING);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (single_payslip.payrun) {\r\n      console.log(\"single_payslip\", single_payslip);\r\n    }\r\n  }, [single_payslip]);\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const update_Input = async (data) => {\r\n    console.log(\"input\", data);\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n    });\r\n    console.log(\"payrun\", input);\r\n  };\r\n\r\n  const update_Payslip = async (data) => {\r\n    console.log(\"data\", data);\r\n    const { id, payrun } = data;\r\n    setPayrunId(id);\r\n    setPayrunStatus(data.status);\r\n    setPayslipPeriod(payrun); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id, payrun } = data;\r\n    setDeletestate({ id: id, payrun: payrun });\r\n    loadPeriodExpenses(payrun);\r\n    getSingleBatchDailyAllowance(payrun);\r\n    handleAlertOpen();\r\n  };\r\n\r\n  const handleOnDeleteConfirm = (data) => {\r\n    console.log(\"payslip delete\", deletestate);\r\n    const { id, payrun } = deletestate;\r\n\r\n    //load period expenses\r\n    loadPeriodExpenses(payrun);\r\n\r\n    //delete allows detls\r\n    pending_payslips.forEach((rec) => {\r\n      if (rec.payrun === payrun) {\r\n        deletePayslip(rec.id);\r\n      }\r\n    });\r\n    //delete allows batch\r\n    deletePayrun(id);\r\n    getPayrun();\r\n\r\n    //unpaid expenses\r\n    periodexpenses.forEach((rec) => {\r\n      if (rec.payrun === payrun) {\r\n        updateExpense({ id: rec.id, payrun: \"\" });\r\n      }\r\n    });\r\n  };\r\n\r\n  if (payrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (payrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n       <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payroll\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          actions={[\r\n            (rowData) => ({\r\n              // disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              position: \"row\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Input(rowData);\r\n                update_Payslip(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                //delete_Payslip(rowData);\r\n                delete_Payslip(rowData);\r\n              },\r\n            }),\r\n\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                {/* <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => handleVerifyPayslipData(e)}\r\n                  >\r\n                    Verify <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Payslip Batch\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipsPeriods.js",["1645","1646","1647","1648","1649","1650"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { payrunIdState,payPeriodState, payPeriodEndMonthState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { periods } from \"../utils/constants\";\r\nimport BatchPayslips from \"./BatchPayslips\";\r\n\r\nconst PayslipsPeriods = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriod = useSetRecoilState(payPeriodState);\r\n  const setPayPeriodEndMonth = useSetRecoilState(payPeriodEndMonthState);\r\n  const { setPayslipPeriod, setPayslipEndMonthDate } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadAllowances, allowances, loadDeductions, deductions } =\r\n    useTablesContext();\r\n\r\n  const handlePeriod = (name, monthenddate) => {\r\n    setPayPeriod(name);\r\n     setPayPeriodEndMonth(monthenddate);\r\n    setPayslipPeriod(name);\r\n    setPayslipEndMonthDate(monthenddate);\r\n    history.push(\"/batchpayslips\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllowances();\r\n    loadDeductions();\r\n    loadEmployees()\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          <h2>Payroll Period</h2>\r\n        </Typography>\r\n      </Toolbar>\r\n      <Grid container spacing={3}>\r\n        {periods.map((e) => {\r\n          const { name, monthenddate } = e;\r\n          return (\r\n            <Grid item xs={3} inline>\r\n              <Paper className={classes.paper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  onClick={() => handlePeriod(name, monthenddate)}\r\n                >\r\n                  {name}\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\nexport default PayslipsPeriods;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTableStaff.js",["1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669","1670"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const deleteExpenses = useDeleteExpenses();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    //expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    addExpense,\r\n    deleteExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpenses(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableStaff.js",["1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTableStaff() {\r\n  const classes = useStyles();\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    editLeaveID,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    //setEditLeaveID(\"\");\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsLeaveEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    handleAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    // if (isLeaveEditing) {\r\n    //   loadEmpLeaves(editEmployeeID);\r\n    // }\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   isEditable: (rowData) => rowData.status === \"Pending\",\r\n          //   isDeletable: (rowData) => rowData.status === \"Pending\",\r\n          //   onRowAdd: (newData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         add_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         update_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowDelete: (oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         delete_Leave(oldData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Leave(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTable.js",["1683","1684","1685","1686","1687","1688","1689","1690","1691"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTable() {\r\n  const classes = useStyles();\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    // leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    setLeaveId(editLeaveID);\r\n  }, []);\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    getSingleLeave(id);\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleLeave();\r\n    setEditLeaveID(\"\");\r\n    setIsLeaveEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    handleAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Leave(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"secondary\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\AllEmployeesTable.js",["1692","1693","1694","1695","1696","1697","1698"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport EmployeeView from \"./EmployeeView\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"IC No\", field: \"ic_no\" },\r\n  { title: \"Gender\", field: \"gender\" },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n  { title: \"Email\", field: \"email\" },\r\n];\r\n\r\nexport default function AllEmployeesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const deleteEmployees = useDeleteEmployees();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    employees_loading,\r\n    deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  const { loadDepartments, loadDesignations, resetTables } = useTablesContext();\r\n\r\n  // useEffect(() => {\r\n  //   resetEmployees();\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  const update_Employee = async (data) => {\r\n    const { id } = data;\r\n    resetTables();\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    getSingleEmployee(id);\r\n    //handleDialogOpen();\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const add_Employee = async (data) => {\r\n    resetSingleEmployee();\r\n    setEditEmployeeID(\"\");\r\n    setIsEditingOff();\r\n    //handleDialogOpen();\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const delete_Employee = (data) => {\r\n    const { id } = data;\r\n    setEditEmployeeID(id);\r\n    handleAlertOpen();\r\n    //deleteEmployee(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editEmployeeID;\r\n    deleteEmployees(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  if (employees_loading) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    console.log(employees);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={employees}\r\n          title=\"Employees Listing\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Employee(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"primary\",\r\n              color: \"secondary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={true}\r\n        >\r\n          <EmployeeView handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Employee\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\CardLayout3.js",["1699","1700","1701","1702","1703","1704","1705","1706"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst CardLayout3 = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={\r\n          <div>\r\n            {/* <IconButton aria-label=\"settings\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </div>\r\n        }\r\n        title={title}\r\n      />\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout3;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\HomeAdmin.js",["1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { TextField, Grid, Paper, Container, Box } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableViewAdmin from \"./LeaveTableViewAdmin\";\r\nimport LeaveTableAdmin from \"./LeaveTableAdmin\";\r\n//import ExpenseTableView from \"./ExpenseTableView\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\n//import PayslipTableView from \"./PayslipTableView\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\n//import DailyAllowancesTableView from \"./DailyAllowancesTableView\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport TrainingsTableViewAdmin from \"./TrainingsTableViewAdmin\";\r\nimport WPExpiryViewAdmin from \"./WPExpiryViewAdmin\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst EmployeeView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees } = useEmployees();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { payslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n  \r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* Chart */}\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            {/* <Paper className={fixedHeightPaper}>\r\n              <div>Chart</div>\r\n            </Paper> */}\r\n            {/* <CardLayout3 title=\"\">\r\n             <h2>Chart</h2>\r\n            </CardLayout3> */}\r\n          </Grid>\r\n          {/* Recent Deposits */}\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2 title=\"\">\r\n              <LeaveTableViewAdmin />\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2 title=\"\">\r\n              <WPExpiryViewAdmin />\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2 title=\"\">\r\n              <TrainingsTableViewAdmin />\r\n            </CardLayout2>\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\Copyright.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\HomeManager.js",["1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { TextField, Grid, Paper, Container, Box } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableView from \"./LeaveTableView\";\r\nimport LeaveTableAdmin from \"./LeaveTableAdmin\";\r\nimport ExpenseTableView from \"./ExpenseTableView\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\nimport PayslipTableViewAdmin from \"./PayslipTableViewAdmin Copy\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport DailyAllowancesTableView from \"./DailyAllowancesTableView\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport OnLeavesView from \"./OnLeavesView\";\r\nimport WPExpiryView from \"./WPExpiryView\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst EmployeeView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { batchpayslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n  \r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    //setPayslipsdata([...batchpayslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* Chart */}\r\n          {/* <Grid item xs={12} md={8} lg={12}>\r\n            <Paper className={fixedHeightPaper}>\r\n              <div>Chart</div>\r\n            </Paper> */}\r\n          {/* <CardLayout3 title=\"\">\r\n             <h2>Chart</h2>\r\n            </CardLayout3>\r\n          </Grid> */}\r\n          {/* Recent Deposits */}\r\n          {/* <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout3 title=\"Staffs Onleave within 30 Days\">\r\n              <OnLeavesView />\r\n            </CardLayout3>\r\n          </Grid> */}\r\n          {/* <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout3 title=\"Work Permit Expiry within 90 Days\">\r\n              <WPExpiryView />\r\n            </CardLayout3>\r\n          </Grid> */}\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Expenses pending for approval\"\r\n              handleClick={handleExpenseDialogOpen}\r\n            >\r\n              <ExpenseTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Site Allowances pending for approval\"\r\n              handleClick={handleDailyAllowancesDialogOpen}\r\n            >\r\n              <DailyAllowancesTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Leaves pending for approval\"\r\n              handleClick={handleLeaveDialogOpen}\r\n            >\r\n              <LeaveTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          {/* Recent Orders */}\r\n\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Payroll pending for approval\"\r\n              handleClick={handlePayslipDialogOpen}\r\n            >\r\n              <PayslipTableViewAdmin />\r\n            </CardLayout3>\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\HomeStaff.js",["1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { TextField, Grid, Paper, Container, Box } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableViewStaff from \"./LeaveTableViewStaff\";\r\nimport TrainingsTableViewStaff from \"./TrainingsTableViewStaff\";\r\nimport LeaveTableAdmin from \"./LeaveTableAdmin\";\r\nimport ExpenseTableViewStaff from \"./ExpenseTableViewStaff\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\nimport PayslipTableViewStaff from \"./PayslipTableViewStaff\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport DailyAllowancesTableViewStaff from \"./DailyAllowancesTableViewStaff\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport OnLeavesViewStaff from \"./OnLeavesViewStaff\";\r\nimport WPExpiryViewStaff from \"./WPExpiryViewStaff\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useSingleEmployee } from \"./employees/useSingleEmployee\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst HomeStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees, setFilter, setEmployeeId } = useEmployees();\r\n  const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { payslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n  const { isEditing, setEditEmployeeID, setIsEditingOn } =\r\n    useEmployeesContext();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    //loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    //loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    //loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditEmployeeID(loginLevel.loginUserId);\r\n    setIsEditingOn();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome Staff {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* Chart */}\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            {/* <Paper className={fixedHeightPaper}>\r\n              <div>Chart</div>\r\n            </Paper> */}\r\n            {/* <CardLayout3 title=\"\">\r\n             <h2>Chart</h2>\r\n            </CardLayout3> */}\r\n          </Grid>\r\n          {/* Recent Deposits */}\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2 title=\"\">\r\n              <LeaveTableViewStaff />\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2 title=\"\" handleClick={handleExpenseDialogOpen}>\r\n              <ExpenseTableViewStaff />\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2 title=\"\">\r\n              <TrainingsTableViewStaff />\r\n            </CardLayout2>\r\n          </Grid>\r\n          {/* <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2\r\n              title=\"Payroll History\"\r\n              handleClick={handlePayslipDialogOpen}\r\n            >\r\n              <PayslipTableViewStaff />\r\n            </CardLayout2>\r\n          </Grid> */}\r\n          {/* <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2\r\n              title=\"Site Allowances History\"\r\n              handleClick={handleDailyAllowancesDialogOpen}\r\n            >\r\n              <DailyAllowancesTableViewStaff />\r\n            </CardLayout2>\r\n          </Grid> */}\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout2 title=\"\">\r\n              <WPExpiryViewStaff />\r\n            </CardLayout2>\r\n          </Grid>\r\n          {/* Recent Orders */}\r\n        </Grid>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomeStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\HomeAdminManager.js",["1752","1753","1754","1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781","1782","1783"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { TextField, Grid, Paper, Container, Box } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableView from \"./LeaveTableView\";\r\nimport LeaveTableAdmin from \"./LeaveTableAdmin\";\r\nimport ExpenseTableView from \"./ExpenseTableView\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\nimport PayslipTableViewAdmin from \"./PayslipTableViewAdmin\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport DailyAllowancesTableView from \"./DailyAllowancesTableView\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport OnLeavesView from \"./OnLeavesView\";\r\nimport WPExpiryView from \"./WPExpiryView\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst EmployeeView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves, loadUnpaidExpenses, loadAppExpenses } =\r\n    useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { payslips, payrun, getPayrun } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances, loadUnpaidDailyAllows } =\r\n    useDailyAllowancesContext();\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  // const handleLeaveDialogClose = () => {\r\n  //   setIsLeaveDialogOpen(false);\r\n  //   loadPendingLeaves(FILTERSTRING);\r\n  // };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  // const handleExpenseDialogClose = () => {\r\n  //   setIsExpenseDialogOpen(false);\r\n  //   loadPendingExpenses(FILTERSTRING);\r\n  // };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  // const handlePayslipDialogClose = () => {\r\n  //   setIsPayslipDialogOpen(false);\r\n  //   getPayrun();\r\n  // };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  // const handleDailyAllowancesDialogClose = () => {\r\n  //   setIsDailyAllowancesDialogOpen(false);\r\n  //   loadPendingDailyAllowances(FILTERSTRING);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   loadUnpaidDailyAllows();\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* Chart */}\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            {/* <Paper className={fixedHeightPaper}>\r\n              <div>Chart</div>\r\n            </Paper> */}\r\n            {/* <CardLayout3 title=\"\">\r\n             <h2>Chart</h2>\r\n            </CardLayout3> */}\r\n          </Grid>\r\n          {/* Recent Deposits */}\r\n\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout2\r\n              title=\"Payroll pending for approval\"\r\n              handleClick={handlePayslipDialogOpen}\r\n            >\r\n              <PayslipTableViewAdmin />\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout2\r\n              title=\"Site Allowances pending for approval\"\r\n              handleClick={handleDailyAllowancesDialogOpen}\r\n            >\r\n              <DailyAllowancesTableView />\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout2\r\n              title=\"Leaves pending for approval\"\r\n              handleClick={handleLeaveDialogOpen}\r\n            >\r\n              <LeaveTableView />\r\n            </CardLayout2>\r\n          </Grid>\r\n          {/* Recent Orders */}\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout2\r\n              title=\"Expenses pending for approval\"\r\n              handleClick={handleExpenseDialogOpen}\r\n            >\r\n              <ExpenseTableView />\r\n            </CardLayout2>\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        {/* <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payrun}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog> */}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DeductionsTable.js",["1784","1785","1786","1787"],"import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { useDeductions } from \"./deductions/useDeductions\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useUpdateDeductions } from \"./deductions/useUpdateDeductions\";\r\nimport { useDeleteDeductions } from \"./deductions/useDeleteDeductions\";\r\nimport { useAddDeductions } from \"./deductions/useAddDeductions\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateDeductions() {\r\n  const classes = useStyles();\r\n  const { deductions } = useDeductions();\r\n  const updateDeductions = useUpdateDeductions();\r\n  const deleteDeductions = useDeleteDeductions();\r\n  const addDeductions = useAddDeductions();\r\n\r\n  const {\r\n    //loadDeductions,\r\n    //deductions,\r\n    deductions_loading,\r\n    addDeduction,\r\n    deleteDeduction,\r\n    updateDeduction,\r\n  } = useTablesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadDeductions();\r\n  // }, []);\r\n\r\n  const update_Deduction = (data) => {\r\n    const { id, rec_id, ...fields } = data;\r\n    updateDeductions({ id, ...fields });\r\n  };\r\n\r\n  const add_Deduction = (data) => {\r\n    addDeductions(data);\r\n  };\r\n\r\n  const delete_Deduction = (data) => {\r\n    const { id } = data;\r\n    deleteDeductions(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={deductions}\r\n          title=\"Deductions\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Deduction(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Deduction(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Deduction(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DesignationsTable.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\AllowancesTable.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DepartmentsTable.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\BatchPayslips.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableAdmin.js",["1788","1789","1790","1791","1792","1793"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Days\",\r\n    field: \"no_of_days\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTable({\r\n  leavesdata,\r\n  setLeavesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n\r\n  const {\r\n    editLeaveID,\r\n    updateLeave,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    update_leave_error,\r\n  } = useLeavesContext();\r\n\r\n  const { employees, updateEmployee, update_employee_error } =\r\n    useEmployeesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadLeaves();\r\n  // }, []);\r\n\r\n  const handleLeaveFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadLeaves();\r\n  };\r\n\r\n  const handleLeaveFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleLeaveFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleLeaveFormOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadLeaves();\r\n  };\r\n\r\n  const Approve_LeaveData = () => {\r\n    leavesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateLeave({ id: rec.id, status: \"Approve\" });\r\n        //update leavesdata\r\n        if (!update_leave_error) {\r\n          const recdata = leavesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approve\";\r\n\r\n          // update leave bal\r\n          console.log(\"leave\", rec.empid, employees);\r\n          const empleavebal = employees\r\n            .filter((r) => r.id === rec.empid)\r\n            .map((item) => {\r\n              return item.leave_bal;\r\n            });\r\n          const leavebal = empleavebal - rec.no_of_days;\r\n          updateEmployee({ id: rec.empid, leave_bal: leavebal });\r\n        }\r\n      }\r\n    });\r\n    leavesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_LeaveData = () => {\r\n    leavesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateLeave({ id: rec.id, status: \"Reject\" });\r\n        //update leavesdata\r\n        if (!update_leave_error) {\r\n          const recdata = leavesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Reject\";\r\n        }\r\n      }\r\n    });\r\n    leavesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Save_LeaveData = () => {\r\n    leavesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateLeave({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n\r\n  // if (leaves_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Leaves</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavesdata}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...leavesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setLeavesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_LeaveData}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_LeaveData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_LeaveData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleLeaveFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm handleDialogClose={handleLeaveFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleLeaveFormAlertClose}\r\n          onConfirm={handleLeaveFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeView.js",["1794"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\nimport EmpViewFamily from \"./EmpViewFamily\";\r\nimport EmpViewEducations from \"./EmpViewEducations\";\r\nimport EmpViewExperiences from \"./EmpViewExperiences\";\r\nimport EmpViewLeaves from \"./EmpViewLeaves\";\r\nimport EmpViewTrainings from \"./EmpViewTrainings\";\r\nimport EmpPersonal from \"./EmpPersonal\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\n\r\n// const drawerWidth = 240;\r\n\r\n// const CardLayout = ({ title, children }) => {\r\n//   const classes = useStyles();\r\n//   return (\r\n//     <div>\r\n//       <CardLayout title=\"Personal Information\">\r\n//         <h2>details</h2>\r\n//       </CardLayout>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst EmployeeView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [familydata, setFamilydata] = useState([]);\r\n  const [educationdata, setEducationdata] = useState([]);\r\n  const [experiencedata, setExperiencedata] = useState([]);\r\n  const [trainingdata, setTrainingdata] = useState([]);\r\n  const [isPersonalDialogOpen, setIsPersonalDialogOpen] = useState(false);\r\n  const [isFamilyDialogOpen, setIsFamilyDialogOpen] = useState(false);\r\n  const [isEducationDialogOpen, setIsEducationDialogOpen] = useState(false);\r\n  const [isExperienceDialogOpen, setIsExperienceDialogOpen] = useState(false);\r\n  const [isTrainingDialogOpen, setIsTrainingDialogOpen] = useState(false);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    getSingleEmployee,\r\n    single_employee,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n  const { singlebatch_training } = useTrainingsContext();\r\n\r\n  const {\r\n    loadDepartments,\r\n    loadDesignations,\r\n    loadSingleBatchFamily,\r\n    loadSingleBatchEducation,\r\n    singlebatchfamily,\r\n    singlebatcheducation,\r\n    singlebatchexperience,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleEmployee(editEmployeeID);\r\n    loadDepartments();\r\n    loadDesignations();\r\n  }, []);\r\n\r\n  //useEffect(() => {}, [singlebatchfamily]);\r\n\r\n  if (single_employee_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Employee</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handlePersonalDialogOpen = () => {\r\n    //setFamilydata([...singlebatchfamily]);\r\n    setIsPersonalDialogOpen(true);\r\n  };\r\n\r\n  const handlePersonalDialogClose = () => {\r\n    setIsPersonalDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleFamilyDialogOpen = () => {\r\n    setFamilydata([]);\r\n    setFamilydata([...singlebatchfamily]);\r\n    setIsFamilyDialogOpen(true);\r\n  };\r\n\r\n  const handleFamilyDialogClose = () => {\r\n    setIsFamilyDialogOpen(false);\r\n    loadSingleBatchFamily(editEmployeeID);\r\n  };\r\n\r\n  const handleEducationDialogOpen = () => {\r\n    setEducationdata([]);\r\n    setEducationdata([...singlebatcheducation]);\r\n    setIsEducationDialogOpen(true);\r\n  };\r\n\r\n  const handleEducationDialogClose = () => {\r\n    setIsEducationDialogOpen(false);\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  };\r\n\r\n  const handleExperienceDialogOpen = () => {\r\n    setExperiencedata([...singlebatchexperience]);\r\n    setIsExperienceDialogOpen(true);\r\n  };\r\n\r\n  const handleExperienceDialogClose = () => {\r\n    setIsExperienceDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleTrainingDialogOpen = () => {\r\n    setTrainingdata([...singlebatch_training]);\r\n    setIsTrainingDialogOpen(true);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleTrainingDialogClose = () => {\r\n    setIsTrainingDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout2 title=\"Employee Profile\">\r\n              <div>\r\n                <form className={classes.form}>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={single_employee.name}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={single_employee.phone}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={single_employee.email}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Birth Date\"\r\n                    name=\"birthdate\"\r\n                    value={single_employee.birhdate}\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Gender\"\r\n                    name=\"gender\"\r\n                    value={single_employee.gender}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Leave Balance\"\r\n                    name=\"leave_bal\"\r\n                    value={single_employee.leave_bal}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Personal Information\"\r\n                handleClick={handlePersonalDialogOpen}\r\n              >\r\n                <div>\r\n                  <form className={classes.form}>\r\n                    <TextField\r\n                      label=\"I/C No\"\r\n                      name=\"icno\"\r\n                      value={single_employee.ic_no}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"I/C Expiry Date\"\r\n                      name=\"ic_expirydate\"\r\n                      value={single_employee.ic_expirydate}\r\n                      type=\"date\"\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Passport No\"\r\n                      name=\"passportno\"\r\n                      value={single_employee.passportno}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      label=\"Passport Expiry Date\"\r\n                      name=\"passport_expirydate\"\r\n                      value={single_employee.passport_expirydate}\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Work Permit No\"\r\n                      name=\"workpermitno\"\r\n                      value={single_employee.workpermitno}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      label=\"W/P Expiry Date\"\r\n                      name=\"workpermit_expirydate\"\r\n                      value={single_employee.workpermit_expirydate}\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        name=\"nationality\"\r\n                        value={single_employee.nationality}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Marital Status\"\r\n                        name=\"marital_status\"\r\n                        value={single_employee.marital_status}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout2 title=\"Leaves\">\r\n                <div>\r\n                  <EmpViewLeaves />\r\n                </div>\r\n              </CardLayout2>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Training\"\r\n                handleClick={handleTrainingDialogOpen}\r\n              >\r\n                <EmpViewTrainings />\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Experiences\"\r\n                handleClick={handleExperienceDialogOpen}\r\n              >\r\n                <div>\r\n                  <EmpViewExperiences />\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Education\"\r\n                handleClick={handleEducationDialogOpen}\r\n              >\r\n                <div>\r\n                  <EmpViewEducations />\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout title=\"Family\" handleClick={handleFamilyDialogOpen}>\r\n                <EmpViewFamily />\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <CustomDialog\r\n        isOpen={isPersonalDialogOpen}\r\n        handleClose={handlePersonalDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpPersonal\r\n          //setPersonaldata={setFamilydata}\r\n          //familydata={familydata}\r\n          handleDialogClose={handlePersonalDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isFamilyDialogOpen}\r\n        handleClose={handleFamilyDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpFamily\r\n          setFamilydata={setFamilydata}\r\n          familydata={familydata}\r\n          handleDialogClose={handleFamilyDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isEducationDialogOpen}\r\n        handleClose={handleEducationDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpEducations\r\n          setEducationdata={setEducationdata}\r\n          educationdata={educationdata}\r\n          handleDialogClose={handleEducationDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isExperienceDialogOpen}\r\n        handleClose={handleExperienceDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpExperiences\r\n          setExperiencedata={setExperiencedata}\r\n          experiencedata={experiencedata}\r\n          handleDialogClose={handleExperienceDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isTrainingDialogOpen}\r\n        handleClose={handleTrainingDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpTrainings\r\n          setTrainingdata={setTrainingdata}\r\n          trainingdata={trainingdata}\r\n          handleDialogClose={handleTrainingDialogClose}\r\n        />\r\n      </CustomDialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  form: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableView.js",["1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\"\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Days\", field: \"no_of_days\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\n\r\n\r\nexport default function LeaveTableView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    leaves_error,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadPendingLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingLeaves(FILTERSTRING);\r\n  }, []);\r\n \r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  if (leaves_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (leaves_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTableView.js",["1817","1818","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTableView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    addExpense,\r\n    expenses_loading,\r\n    updateExpense,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingExpenses(FILTERSTRING);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  if (expenses_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesTableView.js",["1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","1867","1868","1869","1870","1871","1872","1873"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager\", field: \"manager_name\" },\r\n  { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances,\r\n    loadPendingDailyAllowances,\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  if (singlebatch_dailyallowance_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowances}\r\n          title={title}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTableAdmin.js",["1874","1875","1876","1877","1878","1879","1880","1881","1882"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable({\r\n  expensesdata,\r\n  setExpensesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    editExpenseID,\r\n    updateExpense,\r\n    update_expense_error,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n  } = useExpensesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setExpensesdata(expenses);\r\n  //   console.log(expensesdata)\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const handleExpenseFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleExpenseFormOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const Save_ExpenseData = () => {\r\n    expensesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateExpense({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Approve\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approve\";\r\n        }\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Reject\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Reject\";\r\n        }\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  if (!expensesdata) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_ExpenseData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_ExpenseData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_ExpenseData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleExpenseFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleExpenseFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleExpenseFormAlertClose}\r\n          onConfirm={handleExpenseFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesTableAdmin.js",["1883","1884","1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899","1900","1901","1902","1903","1904","1905"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  { title: \"Location\", field: \"location\", editable: \"never\" },\r\n  { title: \"Manager Name\", field: \"manager\", editable: \"never\" },\r\n  {\r\n    title: \"No Of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function DailyAllowancesTable({\r\n  dailyallowancesdata,\r\n  setDailyAllowancesdata,\r\n  update_dailyallowance_error,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances_loading,\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    updateDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  const Save_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateDailyAllowance({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateDailyAllowance({ id: rec.id, status: \"Approve\" });\r\n        //update leavesdata\r\n        if (!update_dailyallowance_error) {\r\n          const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approve\";\r\n        }\r\n      }\r\n    });\r\n    dailyallowancesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateDailyAllowance({ id: rec.id, status: \"Reject\" });\r\n        //update leavesdata\r\n        if (!update_dailyallowance_error) {\r\n          const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Reject\";\r\n        }\r\n      }\r\n    });\r\n    dailyallowancesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  if (dailyallowances_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowancesdata}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...dailyallowancesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setDailyAllowancesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_DailyAllowancesData}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_DailyAllowancesData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_DailyAllowancesData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableView.js",["1906","1907","1908","1909","1910","1911","1912","1913","1914","1915","1916"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"PayDate\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIew() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { payrun, getPayrun,payrun_loading, loadPendingPayslips } =\r\n    usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    getPayrun();\r\n  }, []);\r\n\r\n  if (payrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n",["1917","1918"],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\WPExpiryView.js",["1919","1920","1921","1922","1923","1924","1925","1926","1927"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { atom, selector, useRecoilValueLoadable } from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { wpexpiry_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit No\",\r\n    field: \"workpermitno\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit Expiry\",\r\n    field: \"workpermit_expirydate\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nexport const onleavesdatastate = atom({\r\n  key: \"onleavesdatastate\",\r\n  default: [],\r\n});\r\n\r\nconst fetchWPExpiryDetails = selector({\r\n  key: \"wpExpiryDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const { data } = await axios.get(wpexpiry_url);\r\n      const wpexpirydata = data;\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst WPExpiryView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  const wpExpiryDetails = useRecoilValueLoadable(fetchWPExpiryDetails);\r\n  const { state, contents } = wpExpiryDetails;\r\n\r\n  console.log(wpExpiryDetails);\r\n  if (wpExpiryDetails.state === \"hasError\") {\r\n    return (\r\n      <div>\r\n        <h2>Internet connections problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state === \"loading\") {\r\n    return (\r\n      <div>\r\n        <h2>Loading....WP Expiry</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state === \"hasValue\") {\r\n    const editable = contents.map((r) => {\r\n      return { ...r };\r\n    });\r\n    return (\r\n      <List className={classes.root}>\r\n        <Grid container direction=\"row\">\r\n          {editable.map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.workpermitno}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.workpermit_expirydate}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </List>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default WPExpiryView;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableAdmin.js",["1928","1929","1930","1931","1932","1933","1934"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, MenuItem, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payPeriodEmpIdState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"Pay Date\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Wages\",\r\n    field: \"totalwages\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"totaltap\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"totalscp\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Earnings\",\r\n    field: \"totalallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"totaldeducts\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Total Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function PayslipTableAdmin({\r\n  payslipsdata,\r\n  setPayslipsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { updatePayrun, batchpayrun, update_payrun_loading, update_payrun_error } = usePayslipsContext();\r\n\r\n  const Save_PayslipData = () => {\r\n    payslipsdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayrun({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_PayslipData = () => {\r\n    batchpayrun.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updatePayrun({ id: rec.id, status: \"Approve\" });\r\n\r\n        if (!update_payrun_error) {\r\n          const recdata = batchpayrun.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approve\";\r\n        }\r\n      }\r\n    });\r\n    batchpayrun.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_PayslipData = () => {\r\n    batchpayrun.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updatePayrun({ id: rec.id, status: \"Reject\" });\r\n        //update leavesdata\r\n        if (!update_payrun_error) {\r\n          const recdata = batchpayrun.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Reject\";\r\n        }\r\n      }\r\n    });\r\n    batchpayrun.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...payslipsdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setPayslipsdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            exportButton: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_PayslipData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_PayslipData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_PayslipData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\OnLeavesView.js",["1935","1936","1937","1938","1939","1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, ListItemText, Grid } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useSetRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { onleaves_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\n// export const onleavesdatastate = atom({\r\n//   key: \"onleavesdatastate\",\r\n//   default: [],\r\n// });\r\n\r\n// const fetchOnLeavesDetails = selector({\r\n//   key: \"onLeaveDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(onleaves_url);\r\n//       const onleavesdata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst loadUsers = async () => {\r\n  const { data } = await axios.get(onleaves_url);\r\n  return data;\r\n};\r\n//   await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst fetchDetails = async () =>\r\n  await fetch(\"localhost:8888/api/onleavesview\")\r\n    .then((res) => (res.ok ? res : Promise.reject(res)))\r\n    .then((res) => res.json());\r\n\r\nconst OnLeavesView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n    const [userdata, setUserdata] = useState([]);\r\n    const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n    \r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n  const { data, error, isLoading } = useAsync({ promiseFn: loadUsers });\r\n  if (isLoading) return \"Loading...\";\r\n if (error) return `Internet connections problem!`;\r\n  if (data) console.log(\"data\", data);\r\n  return (\r\n    <List className={classes.roow}>\r\n      <Grid container direction=\"row\">\r\n        {data.map((row) => {\r\n          return (\r\n            <ListItem key={row.id}>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.name}</ListItemText>\r\n              </Grid>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.from_date}</ListItemText>\r\n              </Grid>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.to_date}</ListItemText>\r\n              </Grid>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2\",\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(1), //grid padding\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default OnLeavesView;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableViewStaff.js",["1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\"; \r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { leaves_loading, leaves_error, loadEmpLeaves } =\r\n    useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <List className={classes.root}>\r\n  \r\n      <Grid container direction=\"row\">\r\n        <Heading as=\"h4\" size=\"md\">Leaves Schedule</Heading>\r\n        {leaves\r\n          .filter((i) => i.status === \"Pending\")\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.from_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.to_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.reason}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\DailyAllowancesTableViewStaff.js",["1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Grid, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager\", field: \"manager_name\" },\r\n  { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTableViewStaff() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances,\r\n    loadEmpDailyAllowances,\r\n    dailyallowances_loading,\r\n    dailyallowances_error,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    loadEmpDailyAllowances(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  if (dailyallowances_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (dailyallowances_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connections problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        {dailyallowances\r\n          .filter((i) => i.empid === loginLevel.loginUserId)\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                {/* <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid> */}\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.period}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={5} align=\"center\">\r\n                  <ListItemText>{row.no_of_days}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.amount}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ExpenseTableViewStaff.js",["1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { expenses_url } from \"../utils/constants\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nconst fetchExpensesDetails = selector({\r\n  key: \"fetchExpensesDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const { data } = await axios.get(expenses_url);\r\n      const wpexpirydata = data;\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst ExpenseTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n   const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  const { state, contents } = ExpensesDetails;\r\n  const {  expenses_loading, expenses_error, loadEmpExpenses } =\r\n    useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Heading as=\"h4\" size=\"md\">\r\n          Expenses Claims (Pending)\r\n        </Heading>\r\n        {expenses\r\n          .filter((i) => i.status === \"Pending\")\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                {/* <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid> */}\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.description}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.amount}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default ExpenseTableViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableViewStaff.js",["2012","2013","2014","2015","2016","2017","2018","2019","2020"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Grid, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { payPeriodEmpIdState, loginLevelState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"currency\", editable: \"never\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIewStaff() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { payslips, payslips_loading, payslips_error, loadEmpPayslips } =\r\n    usePayslipsContext();\r\n\r\n  useEffect(() => {\r\n    loadEmpPayslips(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  if (payslips_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (payslips_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connections problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        {payslips\r\n          // .filter((i) => i.empid === loginLevel.loginUserId && i.status === \"Approve\")\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                {/* <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid> */}\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.payrun}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.pay_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={5} align=\"center\">\r\n                  <ListItemText>{row.period}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.nett_pay}</ListItemText>\r\n                </Grid>\r\n                {/* <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid> */}\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\WPExpiryViewStaff.js",["2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUser } from \"./user/useUser\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit No\",\r\n    field: \"workpermitno\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit Expiry\",\r\n    field: \"workpermit_expirydate\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nconst WPExpiryViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees, setFilter } = useEmployees();\r\n  const { user } = useUser();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  const today = Date().toLocaleString();\r\n\r\n  // useEffect(() => {\r\n  //   setFilter(user.id);\r\n  // }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Heading as=\"h4\" size=\"md\">\r\n          Work Permit Expiry Within 90 days\r\n        </Heading>\r\n        {employees\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(\r\n                new Date(i.workpermit_expirydate),\r\n                new Date(today)\r\n              ) < 90 && i.id === loginLevel.loginUserId\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.workpermitno}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.workpermit_expirydate}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default WPExpiryViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\OnLeavesViewStaff.js",["2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, ListItemText, Grid } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { selector, useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\n// export const onleavesdatastate = atom({\r\n//   key: \"onleavesdatastate\",\r\n//   default: [],\r\n// });\r\n\r\n// const fetchOnLeavesDetails = selector({\r\n//   key: \"onLeaveDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(leaves_url);\r\n//       const onleavesdata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst loadUsers = async () => {\r\n  const { data } = await axios.get(leaves_url);\r\n  return data;\r\n};\r\n//   await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst fetchDetails = async () =>\r\n  await fetch(leaves_url)\r\n    .then((res) => (res.ok ? res : Promise.reject(res)))\r\n    .then((res) => res.json());\r\n\r\nconst OnLeavesViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useState([]);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const {\r\n    leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n    getSingleBatchLeave,\r\n    loadEmpLeaves,\r\n    singlebatch_leave_loading,\r\n    singlebatch_leave_error,\r\n    singlebatch_leave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadEmpLeaves(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n\r\n  if (singlebatch_leave_loading) return \"Loading...\";\r\n  if (singlebatch_leave_error) return `Internet connections problem!`;\r\n  if (singlebatch_leave)\r\n    return (\r\n      <List className={classes.roow}>\r\n        <Grid container direction=\"row\">\r\n          {singlebatch_leave.map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.from_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.to_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </List>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2\",\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(1), //grid padding\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default OnLeavesViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\EmployeeFormNew.js",["2057","2058","2059","2060","2061"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useAddEmployees } from \"./employees/useAddEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\n\r\n// import EmpFamily from \"./EmpFamily\";\r\n// import EmpEducations from \"./EmpEducations\";\r\n// import EmpExperiences from \"./EmpExperiences\";\r\n// import EmpTrainings from \"./EmpTrainings\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  address:\"\",\r\n  basic_salary: 0,\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  date_of_join: null,\r\n  date_of_resign: null,\r\n  designation: \"\",\r\n  department: \"\",\r\n  passportno: \"\",\r\n  passport_expirydate: null,\r\n  workpermitno: \"\",\r\n  workpermit_expirydate: null,\r\n  siteallows_fee: 0,\r\n  perdiem_fee: 0,\r\n  role: 1,\r\n  password: \"abc123*\",\r\n  empno: \"\",\r\n};\r\n\r\nconst EmployeeFormNew = () => {\r\n  const classes = useStyles();\r\n  const {\r\n    isEditing,\r\n    single_employee,\r\n    updateEmployee,\r\n    //addEmployee,\r\n    editEmployeeID,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n  const {\r\n    name,\r\n    ic_no,\r\n    gender,\r\n    age,\r\n    email,\r\n    address,\r\n    basic_salary,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_acno,\r\n    scp_acno,\r\n    date_of_join,\r\n    date_of_resign,\r\n    designation,\r\n    department,\r\n    passportno,\r\n    passport_expirydate,\r\n    workpermitno,\r\n    workpermit_expirydate,\r\n    siteallows_fee,\r\n    perdiem_fee,\r\n  } = single_employee || initial_values;\r\n  const addEmployees = useAddEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n  const [alert, setAlert] = useState(false);\r\n  const { handleSubmit, control } = useForm();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  console.log(\"emplevel\", loginLevel);\r\n  const onSubmit = (data) => {\r\n    if (isEditing) {\r\n      updateEmployees({ id: editEmployeeID, ...data });\r\n    } else {\r\n      addEmployees({ ...data });\r\n    }\r\n    // setAlert(true);\r\n    // setTimeout(() => {\r\n    //   setAlert(false);\r\n    // }, 3000);\r\n    //loadEmployees();\r\n    // <Alert severity=\"success\">\r\n    //   <AlertTitle>Success</AlertTitle>\r\n    //   This is a success alert — <strong>check it out!</strong>\r\n    // </Alert>;\r\n    //history.push(\"/allemployees\");\r\n  };\r\n\r\n  if (single_employee_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                EMPLOYEE FORM\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Divider className={classes.divider} />\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"margin-normal\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={email}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        id=\"margin-normal\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"ic_no\"\r\n                  control={control}\r\n                  defaultValue={ic_no}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"IC No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"ic_no\"\r\n                        defaultValue={ic_no}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"gender\"\r\n                  control={control}\r\n                  defaultValue={gender}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Gender\"\r\n                        id=\"margin-normal\"\r\n                        name=\"gender\"\r\n                        defaultValue={gender}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"age\"\r\n                  control={control}\r\n                  defaultValue={age}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"standard-number\"\r\n                        name=\"age\"\r\n                        defaultValue={age}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"passportno\"\r\n                  control={control}\r\n                  defaultValue={passportno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"passportno\"\r\n                        defaultValue={passportno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"passport_expirydate\"\r\n                  control={control}\r\n                  defaultValue={passport_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport Expiry Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"passport_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={passport_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"address\"\r\n                  control={control}\r\n                  defaultValue={address}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        id=\"standard-address\"\r\n                        name=\"address\"\r\n                        defaultValue={address}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.divider} />\r\n            <div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"basic_salary\"\r\n                    control={control}\r\n                    defaultValue={basic_salary}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Basic Salary\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"basic_pay\"\r\n                          defaultValue={basic_salary}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"siteallows_fee\"\r\n                    control={control}\r\n                    defaultValue={siteallows_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Site Allowances Fee\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"siteallows_fee\"\r\n                          defaultValue={siteallows_fee}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"perdiem_fee\"\r\n                    control={control}\r\n                    defaultValue={perdiem_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Perdiem Fee\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"perdiem_fee\"\r\n                          defaultValue={perdiem_fee}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"margin-normal\"\r\n                        name=\"bank_name\"\r\n                        defaultValue={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"bank_acno\"\r\n                        defaultValue={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_acno\"\r\n                  control={control}\r\n                  defaultValue={tap_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"tap_acno\"\r\n                        defaultValue={tap_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"scp_acno\"\r\n                  control={control}\r\n                  defaultValue={scp_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"scp_acno\"\r\n                        defaultValue={scp_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"workpermitno\"\r\n                  control={control}\r\n                  defaultValue={workpermitno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"workpermitno\"\r\n                        defaultValue={workpermitno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"workpermit_expirydate\"\r\n                  control={control}\r\n                  defaultValue={workpermit_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit Expiry Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"workpermit_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={workpermit_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n              <div>\r\n                <Controller\r\n                  name=\"date_of_join\"\r\n                  control={control}\r\n                  defaultValue={date_of_join}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Joining Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"date_of_join\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_join}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"date_of_resign\"\r\n                  control={control}\r\n                  defaultValue={date_of_resign}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Resign Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"date_of_resign\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_resign}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"designation\"\r\n                  control={control}\r\n                  defaultValue={designation}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Designation\"\r\n                        id=\"margin-normal\"\r\n                        name=\"designation\"\r\n                        defaultValue={designation}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        {designations &&\r\n                          designations.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"department\"\r\n                  control={control}\r\n                  defaultValue={department}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Department\"\r\n                        id=\"margin-normal\"\r\n                        name=\"department\"\r\n                        defaultValue={department}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        {departments &&\r\n                          departments.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n\r\n      {/* <div>\r\n        <Grid xs={12}>\r\n          <EmpFamily />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpEducations />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpExperiences />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpTrainings />\r\n        </Grid>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeFormNew;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\react-query\\constants.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useEmployees.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\departments\\useDepartments.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\designations\\useDesignations.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\allowances\\useAllowances.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\deductions\\useDeductions.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\app\\Loading.tsx",[],["2062","2063"],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\departments\\useUpdateDepartments.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\departments\\useDeleteDepartments.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\departments\\useAddDepartments.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\useCustomToast.ts",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\theme\\index.js",["2064"],"import { extendTheme, withDefaultColorScheme } from \"@chakra-ui/react\";\r\n\r\n// const config = {\r\n//   initialColorMode: \"light\",\r\n//   useSystemColorMode: false,\r\n// };\r\n\r\n//export const theme = extendTheme({ config });\r\n\r\nexport const theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      body: {\r\n        color: \"olive.800\",\r\n        backgroundColor: \"olive.100\",\r\n        lightbackgroundColor: \"olive.50\"\r\n      },\r\n    },\r\n  },\r\n  fonts: {\r\n    body: \"Lato, sans-serif\",\r\n    heading: \"Forum, sans-serif\",\r\n    mono: \"Menlo, monospace\",\r\n  },\r\n  colors: {\r\n    olive: {\r\n      50: \"#ebf8ff\",\r\n      100: \"#bee3f8\",\r\n      200: \"#90cdf4\",\r\n      300: \"#63b3ed\",\r\n      400: \"#4299e1\",\r\n      500: \"#3182ce\",\r\n      600: \"#2b6cb0\",\r\n      700: \"#2c5282\",\r\n      800: \"#2a4365\",\r\n      900: \"#1a365d\",\r\n    },\r\n  },\r\n  //withDefaultColorScheme({ colorScheme: \"brand\" }),\r\n});\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\deductions\\useUpdateDeductions.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\deductions\\useDeleteDeductions.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\deductions\\useAddDeductions.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\designations\\useUpdateDesignations.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\designations\\useDeleteDesignations.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\designations\\useAddDesignations.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\allowances\\useUpdateAllowances.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\allowances\\useDeleteAllowances.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\allowances\\useAddAllowances.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useDeleteEmployees.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useAddEmployees.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useUpdateEmployees.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\useFamily.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\utils.js",["2065"],"export function filterByEmpId(family, empId) {\r\n  return family.filter((item) => {\r\n    item.empId.map((t) => t).includes(empId);\r\n  });\r\n}\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\useUpdateFamily.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\useAddFamily.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\family\\useDeleteFamily.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\useEducations.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\useUpdateEducations.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\useAddEducations.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\useDeleteEducations.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\educations\\utils.js",["2066"],"export function filterByEmpId(educations, empId) {\r\n  return educations.filter((item) => {\r\n    item.empId.map((t) => t).includes(empId);\r\n  });\r\n}\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\useExperiences.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\utils.js",["2067"],"export function filterByEmpId(experiences, empId) {\r\n  return experiences.filter((item) => {\r\n    item.empId.map((t) => t).includes(empId);\r\n  });\r\n}\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\useUpdateExperiences.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\useAddExperiences.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\experiences\\useDeleteExperiences.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\useTrainings.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\useUpdateTrainings.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\useAddTrainings.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\trainings\\useDeleteTrainings.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\useLeaves.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\useAddLeaves.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\useDeleteLeaves.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\useUpdateLeaves.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\leaves\\utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\user-storage\\index.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\user\\useUser.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\useAddExpenses.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\useDeleteExpenses.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\useUpdateExpenses.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\useExpenses.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\expenses\\utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleEmployeeStaff old.js",["2068","2069","2070","2071","2072","2073","2074","2075","2076","2077"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { atom, selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { Container, Grid, Paper, Toolbar, Typography } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport EmployeeFormStaff from \"./EmployeeFormStaff\";\r\nimport EmployeeViewStaff from \"./EmployeeViewStaff\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleEmployeeStaff = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  \r\n  \r\n  // useEffect(() => {\r\n  //   getSingleEmployee(loginLevel.loginUserId);\r\n  //   loadSingleBatchFamily(loginLevel.loginUserId);\r\n  //   loadSingleBatchEducation(loginLevel.loginUserId);\r\n  //   loadSingleBatchExperience(loginLevel.loginUserId);\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/home\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <EmployeeViewStaff />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleEmployeeStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\SingleEmployeeStaff.js",["2078","2079","2080","2081"],"import React,{useEffect} from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EmployeeFormStaff from \"./EmployeeFormStaff\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst SingleEmployee = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { isEditing, setEditEmployeeID, setIsEditingOn } =\r\n    useEmployeesContext();\r\n   \r\n  \r\n  if (isEditing) {\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n\r\n        <div className={classes.appBarSpacer}>\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n              {/* <Grid item xs={12} md={8} lg={9}> */}\r\n              <Grid item xs={12}>\r\n                <Paper className={fixedHeightPaper}>\r\n                  <Link to=\"/allemployees\">\r\n                    <div>\r\n                      <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                    </div>\r\n                  </Link>\r\n                  <div>\r\n                    {/* <ToolbarHeader title={title} /> */}\r\n\r\n                    <EmployeeFormStaff />\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n\r\n        <div className={classes.appBarSpacer}>\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n              {/* <Grid item xs={12} md={8} lg={9}> */}\r\n              <Grid item xs={12}>\r\n                <Paper className={fixedHeightPaper}>\r\n                  {/* <Link to=\"/allemployees\">\r\n                    <div>\r\n                      <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                    </div>\r\n                  </Link> */}\r\n                  <div>\r\n                    {/* <ToolbarHeader title={title} /> */}\r\n\r\n                    <EmployeeFormStaff />\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleEmployee;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\employees\\useSingleEmployee.js",["2082"],"import React, { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { employees_url } from \"../../utils/constants\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getSingleEmployee(empid) {\r\n  const { data } = await axios.get(`${employees_url}?fv=${empid}`);\r\n  return data;\r\n}\r\n\r\nexport function useSingleEmployee() {\r\n  const [singleEmployeeId, setSingleEmployeeId] = useState(\"\");\r\n  const fallback = [];\r\n  const { data: singleemployee = fallback } = useQuery(\r\n    queryKeys.singleemployee,\r\n    ()=>getSingleEmployee(singleEmployeeId)\r\n  );\r\n\r\n  return { singleemployee, setSingleEmployeeId };\r\n}\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\useDailyAllows.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\useAddDailyAllows.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\useUpdateDailyAllows.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallows\\useDeleteDailyAllows.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\useDailyAllowsDetls.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\useAddDailyAllowsDetls.js",["2083"],"import { useMutation, useQueryClient } from \"react-query\";\r\nimport { dailyallowsdetls_url } from \"../../utils/constants\";\r\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\r\n\r\nasync function addDailyAllowsDetls(data) {\r\n  await fetch(dailyallowsdetls_url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ ...data }),\r\n  });\r\n}\r\n\r\nexport function useAddDailyAllowsDetls(data) {\r\n  const queryClient = useQueryClient();\r\n  const toast = useCustomToast();\r\n\r\n  const { mutate } = useMutation((data) => addDailyAllowsDetls(data), {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"dailyallowsdetls\");\r\n    //   toast({\r\n    //     title: \"Site Allowance daily record being added!\",\r\n    //     status: \"success\",\r\n    //   });\r\n    },\r\n  });\r\n\r\n  return mutate;\r\n}\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\useUpdateDailyAllowsDetls.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\dailyallowsdetls\\useDeleteDailyAllowsDetls.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableStaff.js",["2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslips } from \"./payslips/usePayslips\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport PrintPayslip from \"./PrintPayslip\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  { title: \"Basic Pay\", field: \"basic_pay\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"tap_amount\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"scp_amount\", type: \"currency\" },\r\n  { title: \"Earnings\", field: \"total_earnings\", type: \"currency\" },\r\n  { title: \"Deductions\", field: \"total_deductions\", type: \"currency\" },\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"currency\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees } = useEmployees();\r\n  const [emp, setEmp] = useState();\r\n  const { payslips, setFilter } = usePayslips();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    deletePayslip,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    setIsPayslipEditingOff,\r\n    resetSinglePayslip,\r\n    payslip_period,\r\n    payslip_endmonthdate,\r\n  } = usePayslipsContext();\r\n\r\n  const exportPdfTable = ({ data, emp }) => {\r\n    PrintPayslip({data, emp});\r\n  };\r\n\r\n  const print_Payslip = async (data) => {\r\n    const { empid} = data.rowData\r\n    const emp = employees.filter((f) => f.id === empid).map((r) => { return { ...r }})\r\n    exportPdfTable({ data, emp })\r\n  }\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id } = data;\r\n    setPayPeriodEmpId(id); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const add_Payslip = async (data) => {\r\n    const { id } = data;\r\n    resetSinglePayslip();\r\n    setEditPayslipID(\"\");\r\n    setIsPayslipEditingOff();\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id } = data;\r\n    setEditPayslipID(id);\r\n    deletePayslip(id);\r\n    loadPayslips();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"paytable\");\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslips}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n            Print: (props) => <PrintIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"print\",\r\n              tooltip: \"Print Payslip\",\r\n              onClick: (event, rowData) => {\r\n                print_Payslip({ rowData });\r\n              },\r\n            },\r\n            // {\r\n            //   icon: \"delete\",\r\n            //   tooltip: \"Delete Record\",\r\n            //   onClick: (event, rowData) => {\r\n            //     delete_Payslip(rowData);\r\n            //   },\r\n            // },\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\payslips\\usePayslips.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\payslips\\utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\PayslipStaffPage.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\TrainingsStaffPage.js",["2100"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { headLeaveTableCells } from \"../utils/constants\";\r\nimport TrainingsTableStaff from \"../components/LeaveTableStaff\";\r\nimport EmpTrainings from \"../components/EmpTrainings\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst TrainingsStaffPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <EmpTrainings title=\"Trainings\" headCells={headLeaveTableCells} />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 300,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\n\r\nexport default TrainingsStaffPage;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\TrainingsTableViewStaff.js",["2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst TrainingsTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { trainings, filter, setFilter, setTrainingId } = useTrainings();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const today = Date().toLocaleString();\r\n  \r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Heading as=\"h4\" size=\"md\">\r\n          Trainings Schedule Expiry Within 90 days\r\n        </Heading>\r\n        {trainings\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(new Date(i.expiry_date), new Date(today)) < 90 &&\r\n              differenceInDays(new Date(today), new Date(i.expiry_date)) < 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.institute}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.course}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.expiry_date}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default TrainingsTableViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\LeaveTableViewAdmin.js",["2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\"; \r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { differenceInDays, differenceInMonths } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { leaves_loading, leaves_error, loadEmpLeaves } =\r\n    useLeavesContext();\r\nconst today = Date().toLocaleString();\r\n\r\n  \r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Heading as=\"h4\" size=\"md\">\r\n          Leaves Schedule\r\n        </Heading>\r\n        {leaves\r\n          .filter(\r\n            (i) =>\r\n              i.status === \"Approve\" &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.to_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) > 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.from_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.to_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.reason}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\WPExpiryViewAdmin.js",["2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUser } from \"./user/useUser\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit No\",\r\n    field: \"workpermitno\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit Expiry\",\r\n    field: \"workpermit_expirydate\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nconst WPExpiryViewAdmin = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees, setFilter } = useEmployees();\r\n  const { user } = useUser();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  const today = Date().toLocaleString();\r\n\r\n  // useEffect(() => {\r\n  //   setFilter(user.id);\r\n  // }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Heading as=\"h4\" size=\"md\">\r\n          Work Permit Expiry Within 90 days\r\n        </Heading>\r\n        {employees\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(\r\n                new Date(i.workpermit_expirydate),\r\n                new Date(today)\r\n              ) < 90\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.workpermitno}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.workpermit_expirydate}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default WPExpiryViewAdmin;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\TrainingsTableViewAdmin.js",["2146","2147","2148","2149","2150","2151","2152","2153","2154","2155","2156","2157","2158","2159","2160"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst TrainingsTableViewAdmin = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { trainings, filter, setFilter, setTrainingId } = useTrainings();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const today = Date().toLocaleString();\r\n  \r\n  // useEffect(() => {\r\n  //   setFilter(loginLevel.loginUserId);\r\n  // }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Heading as=\"h4\" size=\"md\">\r\n          Trainings Schedule Expiry Within 90 days\r\n        </Heading>\r\n        {trainings\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(new Date(i.expiry_date), new Date(today)) < 90 &&\r\n              differenceInDays(new Date(today), new Date(i.expiry_date)) < 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.institute}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.course}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.expiry_date}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default TrainingsTableViewAdmin;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableViewAdmin Copy.js",["2161","2162","2163","2164","2165","2166","2167","2168","2169","2170"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Verified\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"PayDate\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIew() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    batchpayrun,\r\n    getBatchPayrun,\r\n    batchpayrun_loading,\r\n    batchpayrun_error,\r\n    loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    getBatchPayrun(FILTERSTRING);\r\n  }, []);\r\n\r\n  if (batchpayrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (batchpayrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PayslipTableViewAdmin.js",["2171","2172","2173","2174","2175","2176","2177","2178","2179","2180","2181"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"PayDate\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIewAdmin() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { payrun } = usePayrun();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  // const { getPayrun, payrun_loading, loadPendingPayslips } =\r\n  //   usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  // useEffect(() => {\r\n  //   getPayrun();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\payrun\\usePayrun.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\payrun\\utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\pages\\UserAccessPage.js",["2182"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { headLeaveTableCells } from \"../utils/constants\";\r\nimport UserAccessTable from \"../components/UserAccessTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst LeavePage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <UserAccessTable  />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 300,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\n\r\nexport default LeavePage;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\UserAccessTable.js",["2183","2184","2185","2186","2187","2188","2189","2190"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Department\",\r\n    field: \"department\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Designation\",\r\n    field: \"designation\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Role\",\r\n    field: \"role\",\r\n    lookup: { 1: \"Staff\", 2: \"Admin\", 3: \"AdminManager\", 4: \"Manager\" },\r\n  },\r\n];\r\n\r\nexport default function UserAccessTable() {\r\n  const classes = useStyles();\r\n  const { employees } = useEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const update_rec = (data) => {\r\n    const { id, rec_id, role, ...fields } = data;\r\n    updateEmployees({ id, role: parseInt(role, 10), ...fields });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={employees}\r\n          title=\"User Access Table\"\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...employees];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  update_rec(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}></div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PrintPaySummary.js",["2191","2192","2193","2194"],"import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payrunState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst PrintPDFTest = ({ singlebatchpayslip }) => {\r\n  const period = singlebatchpayslip[0].period;\r\n  const subtitle = `Payroll Summary for the period  ${period}`;\r\n  const names = singlebatchpayslip.map((r) => {\r\n    return r.name;\r\n  });\r\n  const wages = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.wages);\r\n    return amount;\r\n  });\r\n  const tapamount = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.tap_amount);\r\n    return amount;\r\n  });\r\n  const scpamount = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.scp_amount);\r\n    return amount;\r\n  });\r\n  const allowsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.total_allowances);\r\n    return amount;\r\n  });\r\n  const deductsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.total_deductions);\r\n    return amount;\r\n  });\r\n  const nettpay = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.nett_pay);\r\n    return amount;\r\n  });\r\n  const totalwages = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.wages;\r\n  }, 0);\r\n  const totaltap = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.tap_amount;\r\n  }, 0);\r\n  const totalscp = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.scp_amount;\r\n  }, 0);\r\n  const totalallows = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.total_allowances;\r\n  }, 0);\r\n  const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.total_deductions;\r\n  }, 0);\r\n  const totalnettpay = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.nett_pay;\r\n  }, 0);\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"landscape\",\r\n    content: [\r\n      { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle, style: \"subheader\" },\r\n\r\n      {\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [150, 80, 80, 80, 80, 80, 80],\r\n          body: [\r\n            [\r\n              \"Name\",\r\n              { alignment: \"right\", text: \"Wages\" },\r\n              { alignment: \"right\", text: \"TAP Amount\" },\r\n              { alignment: \"right\", text: \"SCP Amount\" },\r\n              { alignment: \"right\", text: \"Allowances\" },\r\n              { alignment: \"right\", text: \"Deductions\" },\r\n              { alignment: \"right\", text: \"Nett Pay\" },\r\n            ],\r\n            [\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: names,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: wages,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: tapamount,\r\n                  },\r\n                ],\r\n              },\r\n\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: scpamount,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: allowsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: deductsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: nettpay,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n            [\r\n              \"\",\r\n              { alignment: \"right\", text: formatPrice(totalwages) },\r\n              { alignment: \"right\", text: formatPrice(totaltap) },\r\n              { alignment: \"right\", text: formatPrice(totalscp) },\r\n              { alignment: \"right\", text: formatPrice(totalallows) },\r\n              { alignment: \"right\", text: formatPrice(totaldeducts) },\r\n              { alignment: \"right\", text: formatPrice(totalnettpay) },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPDFTest;\r\n","D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\ComponentToPrint.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\helpers\\Utils.js",[],"D:\\react-myprojects\\hrms-airtable-july2\\src\\components\\PrintPayslip.js",["2195","2196","2197","2198","2199","2200","2201"],"import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\nimport img1 from \"../assets/SimPay.png\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payrunState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst PrintPayslip = ({ data, emp }) => {\r\n  console.log(\"payslip\", data);\r\n  console.log(\"payslip emp\", emp);\r\n  const subtitle = \"Payslips for the period \" + data.rowData.period;\r\n  const { empno, address, phone } = emp[0];\r\n  const { name, total_allowances, total_deductions } = data.rowData;\r\n  const totalEarnings = data.rowData.wages + data.rowData.total_allowances;\r\n  const totalDeductions =\r\n    data.rowData.tap_amount +\r\n    data.rowData.scp_amount +\r\n    data.rowData.total_deductions;\r\n  const earningsdesp = [\r\n    \"Wages\",\r\n    data.rowData.allows_type1,\r\n    data.rowData.allows_type2,\r\n    data.rowData.allows_type3,\r\n    data.rowData.allows_type4,\r\n    data.rowData.allows_type5,\r\n    data.rowData.allows_type6,\r\n    data.rowData.allows_type7,\r\n    data.rowData.allows_type8,\r\n  ];\r\n  const earningsamt = [\r\n    formatPrice(data.rowData.wages),\r\n    formatPrice(data.rowData.allows_type1amt),\r\n    formatPrice(data.rowData.allows_type2amt),\r\n    formatPrice(data.rowData.allows_type3amt),\r\n    formatPrice(data.rowData.allows_type4amt),\r\n    formatPrice(data.rowData.allows_type5amt),\r\n    formatPrice(data.rowData.allows_type6amt),\r\n    formatPrice(data.rowData.allows_type7amt),\r\n    formatPrice(data.rowData.allows_type8amt),\r\n  ];\r\n  const deductionsdesp = [\r\n    \"TAP Amount\",\r\n    \"SCP Amount\",\r\n    data.rowData.deducts_type1,\r\n    data.rowData.deducts_type2,\r\n    data.rowData.deducts_type3,\r\n    data.rowData.deducts_type4,\r\n    data.rowData.deducts_type5,\r\n    data.rowData.deducts_type6,\r\n    data.rowData.deducts_type7,\r\n    data.rowData.deducts_type8,\r\n  ];\r\n  const deductionsamt = [\r\n    formatPrice(parseInt(data.rowData.tap_amount, 10)),\r\n    formatPrice(parseInt(data.rowData.scp_amount, 10)),\r\n    formatPrice(data.rowData.deducts_type1amt),\r\n    formatPrice(data.rowData.deducts_type2amt),\r\n    formatPrice(data.rowData.deducts_type3amt),\r\n    formatPrice(data.rowData.deducts_type4amt),\r\n    formatPrice(data.rowData.deducts_type5amt),\r\n    formatPrice(data.rowData.deducts_type6amt),\r\n    formatPrice(data.rowData.deducts_type7amt),\r\n    formatPrice(data.rowData.deducts_type8amt),\r\n  ];\r\n\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"landscape\",\r\n    content: [\r\n      // {\r\n      //   image: \"logo\",\r\n      //   width: 200,\r\n      // },\r\n      { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle + \"\\n\\n\", style: \"subheader\" },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     body: [\r\n      //     { text: \"Emp No: \" + empno + \"\\n\", style: \"text\" },\r\n      //       { text: \"Name: \" + name + \"\\n\", style: \"text\" },\r\n      //       { text: \"Addess: \" + address + \"\\n\", style: \"text\" },\r\n      //     { text: \"Phone: \" + phone + \"\\n\", style: \"text\" },\r\n      //     ],\r\n      //   },\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     { width: 80, text: \"Emp No\", style: \"text\" },\r\n      //     { width: \"auto\",text: empno + \"\\n\", style: \"Text\"}\r\n      //   ]\r\n      // },\r\n      {\r\n        text: [\r\n          { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\r\n          { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\r\n          { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\r\n          { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\r\n        ],\r\n      },\r\n\r\n      {\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [200, 80, 200, 80],\r\n          body: [\r\n            [\r\n              { alignment: \"left\", text: \"Earnings\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n              { alignment: \"left\", text: \"Deductions\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n            ],\r\n            [\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: earningsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: earningsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: deductionsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: deductionsamt,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"Total Earnings\" },\r\n              { alignment: \"right\", text: formatPrice(totalEarnings) },\r\n              { alignment: \"left\", text: \"Total Deductions\" },\r\n              { alignment: \"right\", text: formatPrice(totalDeductions) },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"\" },\r\n              { alignment: \"right\", text: \"\" },\r\n              { alignment: \"left\", text: \"NettPay\" },\r\n              { alignment: \"right\", text: formatPrice(data.rowData.nett_pay) },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     widths: [480, 80],\r\n      //     body: [\r\n      //       [\r\n      //         { alignment: \"left\", text: \"Nettpay\" },\r\n      //         { alignment: \"right\", text: \"Amount\" },\r\n      //       ],\r\n      //     ],\r\n      //   },\r\n      // },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      text: {\r\n        fontSize: 12,\r\n        bold: false,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n    },\r\n    images: {\r\n      logo: img1,\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPayslip;\r\n",{"ruleId":"2202","severity":1,"message":"2203","line":5,"column":10,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":17},{"ruleId":"2206","replacedBy":"2207"},{"ruleId":"2208","replacedBy":"2209"},{"ruleId":"2202","severity":1,"message":"2210","line":3,"column":26,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2211","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2212","line":13,"column":8,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2213","line":21,"column":9,"nodeType":"2204","messageId":"2205","endLine":21,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2214","line":32,"column":9,"nodeType":"2204","messageId":"2205","endLine":32,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2215","line":44,"column":9,"nodeType":"2204","messageId":"2205","endLine":44,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":29,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2217","line":10,"column":3,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2218","line":118,"column":13,"nodeType":"2204","messageId":"2205","endLine":118,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":118,"column":17,"nodeType":"2204","messageId":"2205","endLine":118,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2220","line":118,"column":23,"nodeType":"2204","messageId":"2205","endLine":118,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2221","line":118,"column":30,"nodeType":"2204","messageId":"2205","endLine":118,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2222","line":118,"column":37,"nodeType":"2204","messageId":"2205","endLine":118,"endColumn":40},{"ruleId":"2202","severity":1,"message":"2223","line":118,"column":42,"nodeType":"2204","messageId":"2205","endLine":118,"endColumn":48},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":29,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2224","line":11,"column":3,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2218","line":167,"column":13,"nodeType":"2204","messageId":"2205","endLine":167,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":167,"column":17,"nodeType":"2204","messageId":"2205","endLine":167,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2225","line":167,"column":23,"nodeType":"2204","messageId":"2205","endLine":167,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2226","line":167,"column":29,"nodeType":"2204","messageId":"2205","endLine":167,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2227","line":167,"column":45,"nodeType":"2204","messageId":"2205","endLine":167,"endColumn":51},{"ruleId":"2202","severity":1,"message":"2228","line":167,"column":53,"nodeType":"2204","messageId":"2205","endLine":167,"endColumn":59},{"ruleId":"2202","severity":1,"message":"2229","line":167,"column":61,"nodeType":"2204","messageId":"2205","endLine":167,"endColumn":67},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":29,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2230","line":10,"column":3,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2231","line":30,"column":3,"nodeType":"2204","messageId":"2205","endLine":30,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2218","line":155,"column":13,"nodeType":"2204","messageId":"2205","endLine":155,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":155,"column":17,"nodeType":"2204","messageId":"2205","endLine":155,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2232","line":155,"column":23,"nodeType":"2204","messageId":"2205","endLine":155,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2233","line":155,"column":34,"nodeType":"2204","messageId":"2205","endLine":155,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2234","line":155,"column":43,"nodeType":"2204","messageId":"2205","endLine":155,"endColumn":49},{"ruleId":"2202","severity":1,"message":"2235","line":155,"column":51,"nodeType":"2204","messageId":"2205","endLine":155,"endColumn":61},{"ruleId":"2202","severity":1,"message":"2229","line":155,"column":63,"nodeType":"2204","messageId":"2205","endLine":155,"endColumn":69},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":29,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2236","line":16,"column":3,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2237","line":17,"column":3,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2238","line":40,"column":3,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2218","line":238,"column":7,"nodeType":"2204","messageId":"2205","endLine":238,"endColumn":9},{"ruleId":"2202","severity":1,"message":"2219","line":239,"column":7,"nodeType":"2204","messageId":"2205","endLine":239,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2239","line":240,"column":7,"nodeType":"2204","messageId":"2205","endLine":240,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2240","line":241,"column":7,"nodeType":"2204","messageId":"2205","endLine":241,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2241","line":242,"column":7,"nodeType":"2204","messageId":"2205","endLine":242,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2235","line":243,"column":7,"nodeType":"2204","messageId":"2205","endLine":243,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2228","line":244,"column":7,"nodeType":"2204","messageId":"2205","endLine":244,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2229","line":245,"column":7,"nodeType":"2204","messageId":"2205","endLine":245,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2218","line":380,"column":7,"nodeType":"2204","messageId":"2205","endLine":380,"endColumn":9},{"ruleId":"2202","severity":1,"message":"2219","line":381,"column":7,"nodeType":"2204","messageId":"2205","endLine":381,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2239","line":382,"column":7,"nodeType":"2204","messageId":"2205","endLine":382,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2240","line":383,"column":7,"nodeType":"2204","messageId":"2205","endLine":383,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2241","line":384,"column":7,"nodeType":"2204","messageId":"2205","endLine":384,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2235","line":385,"column":7,"nodeType":"2204","messageId":"2205","endLine":385,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2228","line":386,"column":7,"nodeType":"2204","messageId":"2205","endLine":386,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2229","line":387,"column":7,"nodeType":"2204","messageId":"2205","endLine":387,"endColumn":13},{"ruleId":"2242","severity":1,"message":"2243","line":459,"column":9,"nodeType":"2244","messageId":"2245","endLine":459,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":29,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2246","line":19,"column":3,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2247","line":74,"column":3,"nodeType":"2204","messageId":"2205","endLine":74,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2248","line":75,"column":3,"nodeType":"2204","messageId":"2205","endLine":75,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2249","line":76,"column":3,"nodeType":"2204","messageId":"2205","endLine":76,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2250","line":89,"column":3,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2251","line":90,"column":3,"nodeType":"2204","messageId":"2205","endLine":90,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2252","line":91,"column":3,"nodeType":"2204","messageId":"2205","endLine":91,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2218","line":328,"column":13,"nodeType":"2204","messageId":"2205","endLine":328,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":328,"column":17,"nodeType":"2204","messageId":"2205","endLine":328,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2232","line":328,"column":23,"nodeType":"2204","messageId":"2205","endLine":328,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2233","line":328,"column":34,"nodeType":"2204","messageId":"2205","endLine":328,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2234","line":328,"column":43,"nodeType":"2204","messageId":"2205","endLine":328,"endColumn":49},{"ruleId":"2202","severity":1,"message":"2235","line":328,"column":51,"nodeType":"2204","messageId":"2205","endLine":328,"endColumn":61},{"ruleId":"2202","severity":1,"message":"2229","line":328,"column":63,"nodeType":"2204","messageId":"2205","endLine":328,"endColumn":69},{"ruleId":"2202","severity":1,"message":"2218","line":528,"column":13,"nodeType":"2204","messageId":"2205","endLine":528,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":528,"column":17,"nodeType":"2204","messageId":"2205","endLine":528,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2239","line":528,"column":23,"nodeType":"2204","messageId":"2205","endLine":528,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2253","line":528,"column":31,"nodeType":"2204","messageId":"2205","endLine":528,"endColumn":42},{"ruleId":"2202","severity":1,"message":"2228","line":528,"column":44,"nodeType":"2204","messageId":"2205","endLine":528,"endColumn":50},{"ruleId":"2202","severity":1,"message":"2218","line":610,"column":13,"nodeType":"2204","messageId":"2205","endLine":610,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":610,"column":17,"nodeType":"2204","messageId":"2205","endLine":610,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2239","line":610,"column":23,"nodeType":"2204","messageId":"2205","endLine":610,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2253","line":610,"column":31,"nodeType":"2204","messageId":"2205","endLine":610,"endColumn":42},{"ruleId":"2202","severity":1,"message":"2228","line":610,"column":44,"nodeType":"2204","messageId":"2205","endLine":610,"endColumn":50},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":29,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2254","line":10,"column":3,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2231","line":30,"column":3,"nodeType":"2204","messageId":"2205","endLine":30,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2218","line":125,"column":13,"nodeType":"2204","messageId":"2205","endLine":125,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":125,"column":17,"nodeType":"2204","messageId":"2205","endLine":125,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2232","line":125,"column":23,"nodeType":"2204","messageId":"2205","endLine":125,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2233","line":125,"column":34,"nodeType":"2204","messageId":"2205","endLine":125,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2234","line":125,"column":43,"nodeType":"2204","messageId":"2205","endLine":125,"endColumn":49},{"ruleId":"2202","severity":1,"message":"2235","line":125,"column":51,"nodeType":"2204","messageId":"2205","endLine":125,"endColumn":61},{"ruleId":"2202","severity":1,"message":"2229","line":125,"column":63,"nodeType":"2204","messageId":"2205","endLine":125,"endColumn":69},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":29,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2255","line":2,"column":8,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2218","line":185,"column":13,"nodeType":"2204","messageId":"2205","endLine":185,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":185,"column":17,"nodeType":"2204","messageId":"2205","endLine":185,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2218","line":245,"column":13,"nodeType":"2204","messageId":"2205","endLine":245,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":245,"column":17,"nodeType":"2204","messageId":"2205","endLine":245,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2218","line":306,"column":13,"nodeType":"2204","messageId":"2205","endLine":306,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":306,"column":17,"nodeType":"2204","messageId":"2205","endLine":306,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2218","line":367,"column":13,"nodeType":"2204","messageId":"2205","endLine":367,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":367,"column":17,"nodeType":"2204","messageId":"2205","endLine":367,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2218","line":428,"column":13,"nodeType":"2204","messageId":"2205","endLine":428,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":428,"column":17,"nodeType":"2204","messageId":"2205","endLine":428,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2218","line":500,"column":13,"nodeType":"2204","messageId":"2205","endLine":500,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":500,"column":17,"nodeType":"2204","messageId":"2205","endLine":500,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2218","line":572,"column":13,"nodeType":"2204","messageId":"2205","endLine":572,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":572,"column":17,"nodeType":"2204","messageId":"2205","endLine":572,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2218","line":643,"column":13,"nodeType":"2204","messageId":"2205","endLine":643,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2219","line":643,"column":17,"nodeType":"2204","messageId":"2205","endLine":643,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2212","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2257","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2258","line":14,"column":22,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2236","line":6,"column":3,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2238","line":30,"column":3,"nodeType":"2204","messageId":"2205","endLine":30,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2224","line":5,"column":3,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2254","line":5,"column":3,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2231","line":25,"column":3,"nodeType":"2204","messageId":"2205","endLine":25,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2230","line":5,"column":3,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2246","line":12,"column":3,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2259","line":6,"column":3,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2260","line":7,"column":3,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2261","line":9,"column":3,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":12},{"ruleId":"2202","severity":1,"message":"2262","line":25,"column":10,"nodeType":"2204","messageId":"2205","endLine":25,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2263","line":26,"column":10,"nodeType":"2204","messageId":"2205","endLine":26,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2264","line":27,"column":10,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":27,"column":22,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2265","line":29,"column":9,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2266","line":33,"column":9,"nodeType":"2204","messageId":"2205","endLine":33,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2267","line":13,"column":8,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2268","line":16,"column":8,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2269","line":17,"column":8,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2270","line":18,"column":8,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2271","line":19,"column":8,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2272","line":21,"column":8,"nodeType":"2204","messageId":"2205","endLine":21,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2273","line":22,"column":8,"nodeType":"2204","messageId":"2205","endLine":22,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2274","line":27,"column":3,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":8},{"ruleId":"2202","severity":1,"message":"2275","line":28,"column":3,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2276","line":29,"column":3,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":10},{"ruleId":"2202","severity":1,"message":"2277","line":30,"column":3,"nodeType":"2204","messageId":"2205","endLine":30,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2278","line":31,"column":3,"nodeType":"2204","messageId":"2205","endLine":31,"endColumn":10},{"ruleId":"2202","severity":1,"message":"2279","line":37,"column":3,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2280","line":31,"column":3,"nodeType":"2204","messageId":"2205","endLine":31,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2281","line":13,"column":8,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2282","line":21,"column":8,"nodeType":"2204","messageId":"2205","endLine":21,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2272","line":22,"column":8,"nodeType":"2204","messageId":"2205","endLine":22,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2273","line":23,"column":8,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2283","line":27,"column":3,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2274","line":28,"column":3,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":8},{"ruleId":"2202","severity":1,"message":"2284","line":35,"column":3,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2285","line":36,"column":3,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2286","line":37,"column":3,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":9},{"ruleId":"2202","severity":1,"message":"2287","line":38,"column":3,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":10},{"ruleId":"2202","severity":1,"message":"2288","line":39,"column":3,"nodeType":"2204","messageId":"2205","endLine":39,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2289","line":4,"column":22,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2290","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2291","line":13,"column":8,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2292","line":23,"column":11,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2293","line":9,"column":7,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2294","line":10,"column":7,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":10},{"ruleId":"2202","severity":1,"message":"2295","line":26,"column":10,"nodeType":"2204","messageId":"2205","endLine":26,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2296","line":26,"column":19,"nodeType":"2204","messageId":"2205","endLine":26,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2297","line":27,"column":10,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2298","line":27,"column":16,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2218","line":37,"column":13,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2299","line":4,"column":8,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2300","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2301","line":12,"column":3,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2302","line":13,"column":3,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":7},{"ruleId":"2202","severity":1,"message":"2303","line":14,"column":3,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2304","line":16,"column":3,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2305","line":17,"column":3,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2306","line":20,"column":8,"nodeType":"2204","messageId":"2205","endLine":20,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2307","line":26,"column":8,"nodeType":"2204","messageId":"2205","endLine":26,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2258","line":32,"column":22,"nodeType":"2204","messageId":"2205","endLine":32,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2308","line":18,"column":7,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2309","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2310","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2308","line":18,"column":7,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2309","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2310","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2308","line":18,"column":7,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2309","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2310","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2308","line":18,"column":7,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2308","line":16,"column":7,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2309","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2310","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2308","line":19,"column":7,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2311","line":13,"column":3,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2312","line":14,"column":3,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2313","line":38,"column":7,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2314","line":56,"column":7,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2315","line":62,"column":31,"nodeType":"2204","messageId":"2205","endLine":62,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2316","line":77,"column":10,"nodeType":"2204","messageId":"2205","endLine":77,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2317","line":79,"column":17,"nodeType":"2204","messageId":"2205","endLine":79,"endColumn":25},{"ruleId":"2318","severity":1,"message":"2319","line":87,"column":6,"nodeType":"2320","endLine":87,"endColumn":20,"suggestions":"2321"},{"ruleId":"2202","severity":1,"message":"2322","line":95,"column":11,"nodeType":"2204","messageId":"2205","endLine":95,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2323","line":97,"column":11,"nodeType":"2204","messageId":"2205","endLine":97,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2324","line":98,"column":11,"nodeType":"2204","messageId":"2205","endLine":98,"endColumn":12},{"ruleId":"2318","severity":1,"message":"2325","line":270,"column":6,"nodeType":"2320","endLine":270,"endColumn":8,"suggestions":"2326"},{"ruleId":"2202","severity":1,"message":"2327","line":2,"column":10,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2328","line":3,"column":19,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2305","line":20,"column":10,"nodeType":"2204","messageId":"2205","endLine":20,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2329","line":23,"column":3,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2293","line":29,"column":7,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2330","line":32,"column":7,"nodeType":"2204","messageId":"2205","endLine":32,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2331","line":34,"column":9,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2332","line":51,"column":20,"nodeType":"2204","messageId":"2205","endLine":51,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2333","line":52,"column":10,"nodeType":"2204","messageId":"2205","endLine":52,"endColumn":22},{"ruleId":"2318","severity":1,"message":"2334","line":65,"column":6,"nodeType":"2320","endLine":65,"endColumn":8,"suggestions":"2335"},{"ruleId":"2202","severity":1,"message":"2336","line":76,"column":9,"nodeType":"2204","messageId":"2205","endLine":76,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2337","line":2,"column":18,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2338","line":23,"column":5,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2339","line":25,"column":5,"nodeType":"2204","messageId":"2205","endLine":25,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2340","line":26,"column":5,"nodeType":"2204","messageId":"2205","endLine":26,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2341","line":78,"column":9,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2342","line":84,"column":9,"nodeType":"2204","messageId":"2205","endLine":84,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2343","line":89,"column":9,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2344","line":94,"column":9,"nodeType":"2204","messageId":"2205","endLine":94,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2308","line":16,"column":7,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2345","line":3,"column":10,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2346","line":3,"column":20,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2347","line":7,"column":17,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2348","line":7,"column":23,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2349","line":7,"column":32,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2293","line":10,"column":7,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2294","line":11,"column":7,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":10},{"ruleId":"2202","severity":1,"message":"2295","line":27,"column":10,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2296","line":27,"column":19,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2297","line":28,"column":10,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2298","line":28,"column":16,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2350","line":29,"column":10,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2351","line":29,"column":17,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2352","line":32,"column":9,"nodeType":"2204","messageId":"2205","endLine":32,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2353","line":34,"column":9,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2218","line":36,"column":13,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2354","line":25,"column":9,"nodeType":"2204","messageId":"2205","endLine":25,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2355","line":29,"column":9,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2354","line":24,"column":9,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2355","line":28,"column":9,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2356","line":14,"column":8,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2357","line":17,"column":8,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2358","line":18,"column":8,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2359","line":19,"column":8,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2355","line":32,"column":9,"nodeType":"2204","messageId":"2205","endLine":32,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2356","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2357","line":12,"column":8,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2358","line":13,"column":8,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2359","line":14,"column":8,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2354","line":24,"column":9,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2355","line":28,"column":9,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2360","line":58,"column":5,"nodeType":"2204","messageId":"2205","endLine":58,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2361","line":59,"column":5,"nodeType":"2204","messageId":"2205","endLine":59,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2362","line":91,"column":11,"nodeType":"2204","messageId":"2205","endLine":91,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2363","line":91,"column":18,"nodeType":"2204","messageId":"2205","endLine":91,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2258","line":93,"column":22,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2364","line":13,"column":8,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2365","line":14,"column":10,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2366","line":19,"column":10,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2367","line":34,"column":11,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2368","line":34,"column":19,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2369","line":34,"column":27,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2370","line":34,"column":38,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":48},{"ruleId":"2202","severity":1,"message":"2371","line":37,"column":10,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2372","line":37,"column":17,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2258","line":38,"column":22,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2373","line":40,"column":9,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2356","line":13,"column":8,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2357","line":16,"column":8,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2358","line":17,"column":8,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2359","line":18,"column":8,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2355","line":31,"column":9,"nodeType":"2204","messageId":"2205","endLine":31,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2364","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2365","line":7,"column":10,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2374","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2375","line":15,"column":7,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2315","line":28,"column":11,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2368","line":28,"column":21,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2369","line":28,"column":29,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2376","line":28,"column":40,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":52},{"ruleId":"2202","severity":1,"message":"2258","line":31,"column":22,"nodeType":"2204","messageId":"2205","endLine":31,"endColumn":35},{"ruleId":"2318","severity":1,"message":"2377","line":46,"column":6,"nodeType":"2320","endLine":46,"endColumn":8,"suggestions":"2378"},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2289","line":2,"column":22,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2303","line":7,"column":3,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2379","line":10,"column":3,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2380","line":11,"column":3,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2381","line":15,"column":3,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2382","line":19,"column":10,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2330","line":75,"column":7,"nodeType":"2204","messageId":"2205","endLine":75,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2264","line":81,"column":10,"nodeType":"2204","messageId":"2205","endLine":81,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":81,"column":22,"nodeType":"2204","messageId":"2205","endLine":81,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2383","line":85,"column":5,"nodeType":"2204","messageId":"2205","endLine":85,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2384","line":86,"column":5,"nodeType":"2204","messageId":"2205","endLine":86,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2385","line":87,"column":5,"nodeType":"2204","messageId":"2205","endLine":87,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2386","line":88,"column":5,"nodeType":"2204","messageId":"2205","endLine":88,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2387","line":89,"column":5,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2388","line":93,"column":5,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2389","line":94,"column":5,"nodeType":"2204","messageId":"2205","endLine":94,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2390","line":95,"column":5,"nodeType":"2204","messageId":"2205","endLine":95,"endColumn":25},{"ruleId":"2318","severity":1,"message":"2391","line":100,"column":6,"nodeType":"2320","endLine":100,"endColumn":8,"suggestions":"2392"},{"ruleId":"2202","severity":1,"message":"2393","line":163,"column":25,"nodeType":"2204","messageId":"2205","endLine":163,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2349","line":5,"column":10,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2394","line":5,"column":21,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2395","line":5,"column":27,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2364","line":5,"column":35,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2305","line":7,"column":10,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2304","line":7,"column":29,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2396","line":35,"column":9,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2397","line":36,"column":9,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2398","line":37,"column":9,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2258","line":38,"column":22,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2399","line":40,"column":10,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2400","line":40,"column":25,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2401","line":42,"column":10,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2402","line":42,"column":27,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":45},{"ruleId":"2202","severity":1,"message":"2403","line":44,"column":10,"nodeType":"2204","messageId":"2205","endLine":44,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2404","line":45,"column":10,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2405","line":47,"column":10,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2383","line":53,"column":5,"nodeType":"2204","messageId":"2205","endLine":53,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2406","line":54,"column":5,"nodeType":"2204","messageId":"2205","endLine":54,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2407","line":56,"column":5,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2408","line":57,"column":5,"nodeType":"2204","messageId":"2205","endLine":57,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2409","line":59,"column":5,"nodeType":"2204","messageId":"2205","endLine":59,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2410","line":111,"column":9,"nodeType":"2204","messageId":"2205","endLine":111,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2411","line":159,"column":9,"nodeType":"2204","messageId":"2205","endLine":159,"endColumn":35},{"ruleId":"2318","severity":1,"message":"2412","line":171,"column":6,"nodeType":"2320","endLine":171,"endColumn":8,"suggestions":"2413"},{"ruleId":"2202","severity":1,"message":"2414","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":37},{"ruleId":"2202","severity":1,"message":"2415","line":1,"column":50,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":56},{"ruleId":"2202","severity":1,"message":"2416","line":8,"column":3,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":9},{"ruleId":"2202","severity":1,"message":"2417","line":11,"column":3,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":10},{"ruleId":"2202","severity":1,"message":"2300","line":12,"column":3,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":6},{"ruleId":"2202","severity":1,"message":"2364","line":18,"column":8,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2418","line":24,"column":3,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2375","line":38,"column":7,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2419","line":55,"column":10,"nodeType":"2204","messageId":"2205","endLine":55,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2420","line":55,"column":16,"nodeType":"2204","messageId":"2205","endLine":55,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2421","line":58,"column":5,"nodeType":"2204","messageId":"2205","endLine":58,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2422","line":61,"column":5,"nodeType":"2204","messageId":"2205","endLine":61,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2423","line":63,"column":5,"nodeType":"2204","messageId":"2205","endLine":63,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2424","line":67,"column":5,"nodeType":"2204","messageId":"2205","endLine":67,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2425","line":68,"column":5,"nodeType":"2204","messageId":"2205","endLine":68,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2426","line":69,"column":5,"nodeType":"2204","messageId":"2205","endLine":69,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2338","line":77,"column":11,"nodeType":"2204","messageId":"2205","endLine":77,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2427","line":77,"column":26,"nodeType":"2204","messageId":"2205","endLine":77,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2428","line":78,"column":11,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2429","line":78,"column":27,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2430","line":78,"column":43,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":53},{"ruleId":"2202","severity":1,"message":"2431","line":78,"column":55,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":65},{"ruleId":"2202","severity":1,"message":"2432","line":82,"column":9,"nodeType":"2204","messageId":"2205","endLine":82,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2433","line":83,"column":9,"nodeType":"2204","messageId":"2205","endLine":83,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2229","line":99,"column":5,"nodeType":"2204","messageId":"2205","endLine":99,"endColumn":11},{"ruleId":"2318","severity":1,"message":"2434","line":108,"column":13,"nodeType":"2435","endLine":110,"endColumn":4},{"ruleId":"2318","severity":1,"message":"2436","line":110,"column":6,"nodeType":"2320","endLine":110,"endColumn":8,"suggestions":"2437"},{"ruleId":"2438","severity":1,"message":"2439","line":564,"column":19,"nodeType":"2440","endLine":564,"endColumn":43},{"ruleId":"2438","severity":1,"message":"2441","line":574,"column":19,"nodeType":"2440","endLine":574,"endColumn":45},{"ruleId":"2438","severity":1,"message":"2442","line":589,"column":11,"nodeType":"2440","endLine":594,"endColumn":13},{"ruleId":"2438","severity":1,"message":"2443","line":604,"column":11,"nodeType":"2440","endLine":609,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2444","line":2,"column":8,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2445","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2328","line":4,"column":19,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2395","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2394","line":6,"column":18,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2446","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2447","line":69,"column":9,"nodeType":"2204","messageId":"2205","endLine":69,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2371","line":71,"column":10,"nodeType":"2204","messageId":"2205","endLine":71,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2372","line":71,"column":17,"nodeType":"2204","messageId":"2205","endLine":71,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2448","line":73,"column":24,"nodeType":"2204","messageId":"2205","endLine":73,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2449","line":77,"column":9,"nodeType":"2204","messageId":"2205","endLine":77,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2450","line":156,"column":9,"nodeType":"2204","messageId":"2205","endLine":156,"endColumn":29},{"ruleId":"2318","severity":1,"message":"2451","line":164,"column":6,"nodeType":"2320","endLine":164,"endColumn":14,"suggestions":"2452"},{"ruleId":"2202","severity":1,"message":"2453","line":10,"column":10,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2454","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2289","line":2,"column":22,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2455","line":17,"column":10,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2330","line":77,"column":7,"nodeType":"2204","messageId":"2205","endLine":77,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2456","line":80,"column":9,"nodeType":"2204","messageId":"2205","endLine":80,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2457","line":81,"column":9,"nodeType":"2204","messageId":"2205","endLine":81,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2458","line":82,"column":9,"nodeType":"2204","messageId":"2205","endLine":82,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2258","line":88,"column":22,"nodeType":"2204","messageId":"2205","endLine":88,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2401","line":89,"column":10,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2402","line":89,"column":27,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":45},{"ruleId":"2202","severity":1,"message":"2459","line":93,"column":22,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2460","line":94,"column":10,"nodeType":"2204","messageId":"2205","endLine":94,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2461","line":94,"column":24,"nodeType":"2204","messageId":"2205","endLine":94,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2462","line":95,"column":10,"nodeType":"2204","messageId":"2205","endLine":95,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2463","line":95,"column":24,"nodeType":"2204","messageId":"2205","endLine":95,"endColumn":39},{"ruleId":"2318","severity":1,"message":"2464","line":127,"column":6,"nodeType":"2320","endLine":127,"endColumn":24,"suggestions":"2465"},{"ruleId":"2202","severity":1,"message":"2466","line":193,"column":9,"nodeType":"2204","messageId":"2205","endLine":193,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2258","line":61,"column":22,"nodeType":"2204","messageId":"2205","endLine":61,"endColumn":35},{"ruleId":"2318","severity":1,"message":"2467","line":77,"column":6,"nodeType":"2320","endLine":77,"endColumn":8,"suggestions":"2468"},{"ruleId":"2202","severity":1,"message":"2469","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":26},{"ruleId":"2318","severity":1,"message":"2470","line":66,"column":6,"nodeType":"2320","endLine":66,"endColumn":8,"suggestions":"2471"},{"ruleId":"2202","severity":1,"message":"2304","line":2,"column":20,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2305","line":2,"column":36,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":53},{"ruleId":"2202","severity":1,"message":"2472","line":6,"column":3,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2305","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2418","line":9,"column":3,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2473","line":26,"column":9,"nodeType":"2204","messageId":"2205","endLine":26,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2474","line":31,"column":5,"nodeType":"2204","messageId":"2205","endLine":31,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2219","line":42,"column":11,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2228","line":42,"column":17,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2475","line":45,"column":9,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":23},{"ruleId":"2318","severity":1,"message":"2476","line":73,"column":6,"nodeType":"2320","endLine":73,"endColumn":8,"suggestions":"2477"},{"ruleId":"2202","severity":1,"message":"2478","line":84,"column":9,"nodeType":"2204","messageId":"2205","endLine":84,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2479","line":91,"column":9,"nodeType":"2204","messageId":"2205","endLine":91,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2480","line":103,"column":9,"nodeType":"2204","messageId":"2205","endLine":103,"endColumn":32},{"ruleId":"2206","replacedBy":"2481"},{"ruleId":"2208","replacedBy":"2482"},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2415","line":1,"column":38,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":44},{"ruleId":"2202","severity":1,"message":"2289","line":7,"column":22,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2305","line":8,"column":10,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2418","line":11,"column":3,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2330","line":25,"column":7,"nodeType":"2204","messageId":"2205","endLine":25,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2473","line":29,"column":9,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2219","line":45,"column":11,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2228","line":45,"column":17,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":23},{"ruleId":"2318","severity":1,"message":"2483","line":71,"column":6,"nodeType":"2320","endLine":71,"endColumn":8,"suggestions":"2484"},{"ruleId":"2202","severity":1,"message":"2485","line":73,"column":9,"nodeType":"2204","messageId":"2205","endLine":73,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2486","line":89,"column":9,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2487","line":98,"column":9,"nodeType":"2204","messageId":"2205","endLine":98,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2488","line":112,"column":9,"nodeType":"2204","messageId":"2205","endLine":112,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2305","line":5,"column":10,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2418","line":8,"column":3,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2474","line":23,"column":5,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2219","line":34,"column":11,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2228","line":34,"column":17,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2431","line":35,"column":11,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2475","line":37,"column":9,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":23},{"ruleId":"2318","severity":1,"message":"2489","line":52,"column":6,"nodeType":"2320","endLine":52,"endColumn":8,"suggestions":"2490"},{"ruleId":"2202","severity":1,"message":"2478","line":64,"column":9,"nodeType":"2204","messageId":"2205","endLine":64,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2479","line":71,"column":9,"nodeType":"2204","messageId":"2205","endLine":71,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2480","line":83,"column":9,"nodeType":"2204","messageId":"2205","endLine":83,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2415","line":1,"column":38,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":44},{"ruleId":"2202","severity":1,"message":"2289","line":5,"column":22,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2305","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2418","line":9,"column":3,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2330","line":18,"column":7,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2491","line":19,"column":10,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2492","line":19,"column":16,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2493","line":27,"column":5,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2494","line":29,"column":5,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2495","line":30,"column":5,"nodeType":"2204","messageId":"2205","endLine":30,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2424","line":34,"column":5,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2253","line":38,"column":11,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2228","line":38,"column":24,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2430","line":39,"column":11,"nodeType":"2204","messageId":"2205","endLine":39,"endColumn":21},{"ruleId":"2318","severity":1,"message":"2496","line":52,"column":6,"nodeType":"2320","endLine":52,"endColumn":8,"suggestions":"2497"},{"ruleId":"2202","severity":1,"message":"2485","line":54,"column":9,"nodeType":"2204","messageId":"2205","endLine":54,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2498","line":60,"column":9,"nodeType":"2204","messageId":"2205","endLine":60,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2499","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2500","line":18,"column":7,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2501","line":19,"column":7,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2314","line":30,"column":7,"nodeType":"2204","messageId":"2205","endLine":30,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2383","line":36,"column":11,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2258","line":40,"column":22,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2502","line":41,"column":10,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2503","line":41,"column":24,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2362","line":42,"column":10,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2363","line":42,"column":17,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":25},{"ruleId":"2318","severity":1,"message":"2504","line":60,"column":6,"nodeType":"2320","endLine":60,"endColumn":8,"suggestions":"2505"},{"ruleId":"2202","severity":1,"message":"2506","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2260","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2261","line":8,"column":8,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2395","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2507","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2508","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2291","line":14,"column":8,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2506","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2260","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2261","line":8,"column":8,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2395","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2507","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2508","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2509","line":12,"column":8,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2309","line":13,"column":8,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2509","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2510","line":61,"column":10,"nodeType":"2204","messageId":"2205","endLine":61,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2511","line":61,"column":18,"nodeType":"2204","messageId":"2205","endLine":61,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2338","line":65,"column":11,"nodeType":"2204","messageId":"2205","endLine":65,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2512","line":70,"column":5,"nodeType":"2204","messageId":"2205","endLine":70,"endColumn":21},{"ruleId":"2318","severity":1,"message":"2513","line":83,"column":6,"nodeType":"2320","endLine":83,"endColumn":8,"suggestions":"2514"},{"ruleId":"2202","severity":1,"message":"2515","line":107,"column":9,"nodeType":"2204","messageId":"2205","endLine":107,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2395","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2394","line":4,"column":18,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2368","line":69,"column":22,"nodeType":"2204","messageId":"2205","endLine":69,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2369","line":69,"column":30,"nodeType":"2204","messageId":"2205","endLine":69,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2258","line":70,"column":22,"nodeType":"2204","messageId":"2205","endLine":70,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2516","line":76,"column":5,"nodeType":"2204","messageId":"2205","endLine":76,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2517","line":77,"column":5,"nodeType":"2204","messageId":"2205","endLine":77,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2518","line":81,"column":5,"nodeType":"2204","messageId":"2205","endLine":81,"endColumn":33},{"ruleId":"2318","severity":1,"message":"2519","line":86,"column":6,"nodeType":"2320","endLine":86,"endColumn":8,"suggestions":"2520"},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2395","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2394","line":4,"column":18,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2368","line":59,"column":19,"nodeType":"2204","messageId":"2205","endLine":59,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2369","line":59,"column":27,"nodeType":"2204","messageId":"2205","endLine":59,"endColumn":36},{"ruleId":"2318","severity":1,"message":"2521","line":81,"column":6,"nodeType":"2320","endLine":81,"endColumn":8,"suggestions":"2522"},{"ruleId":"2318","severity":1,"message":"2523","line":68,"column":6,"nodeType":"2320","endLine":68,"endColumn":8,"suggestions":"2524"},{"ruleId":"2318","severity":1,"message":"2525","line":50,"column":6,"nodeType":"2320","endLine":50,"endColumn":8,"suggestions":"2526"},{"ruleId":"2318","severity":1,"message":"2527","line":50,"column":6,"nodeType":"2320","endLine":50,"endColumn":8,"suggestions":"2528"},{"ruleId":"2318","severity":1,"message":"2529","line":46,"column":6,"nodeType":"2320","endLine":46,"endColumn":8,"suggestions":"2530"},{"ruleId":"2318","severity":1,"message":"2531","line":41,"column":6,"nodeType":"2320","endLine":41,"endColumn":8,"suggestions":"2532"},{"ruleId":"2318","severity":1,"message":"2533","line":41,"column":6,"nodeType":"2320","endLine":41,"endColumn":8,"suggestions":"2534"},{"ruleId":"2202","severity":1,"message":"2303","line":14,"column":10,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2379","line":14,"column":36,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":58},{"ruleId":"2202","severity":1,"message":"2427","line":56,"column":11,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2369","line":56,"column":22,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2264","line":58,"column":10,"nodeType":"2204","messageId":"2205","endLine":58,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":58,"column":22,"nodeType":"2204","messageId":"2205","endLine":58,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2535","line":60,"column":5,"nodeType":"2204","messageId":"2205","endLine":60,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2536","line":91,"column":5,"nodeType":"2204","messageId":"2205","endLine":91,"endColumn":17},{"ruleId":"2318","severity":1,"message":"2537","line":101,"column":6,"nodeType":"2320","endLine":101,"endColumn":8,"suggestions":"2538"},{"ruleId":"2202","severity":1,"message":"2539","line":2,"column":10,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2540","line":2,"column":17,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2541","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2542","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2543","line":10,"column":10,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":28},{"ruleId":"2318","severity":1,"message":"2544","line":22,"column":6,"nodeType":"2320","endLine":22,"endColumn":8,"suggestions":"2545"},{"ruleId":"2202","severity":1,"message":"2546","line":10,"column":10,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2547","line":2,"column":8,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":12},{"ruleId":"2202","severity":1,"message":"2300","line":4,"column":8,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2548","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2347","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":12},{"ruleId":"2202","severity":1,"message":"2549","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2550","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2551","line":12,"column":8,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2258","line":22,"column":22,"nodeType":"2204","messageId":"2205","endLine":22,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2552","line":47,"column":7,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2337","line":4,"column":3,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2553","line":9,"column":3,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2364","line":10,"column":3,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2416","line":11,"column":3,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":9},{"ruleId":"2202","severity":1,"message":"2445","line":15,"column":10,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2554","line":16,"column":10,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":22},{"ruleId":"2318","severity":1,"message":"2555","line":92,"column":6,"nodeType":"2320","endLine":92,"endColumn":20,"suggestions":"2556"},{"ruleId":"2206","replacedBy":"2557"},{"ruleId":"2208","replacedBy":"2558"},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2395","line":3,"column":3,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":9},{"ruleId":"2202","severity":1,"message":"2394","line":4,"column":3,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":7},{"ruleId":"2202","severity":1,"message":"2349","line":5,"column":3,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":12},{"ruleId":"2202","severity":1,"message":"2549","line":6,"column":3,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":8},{"ruleId":"2202","severity":1,"message":"2507","line":7,"column":3,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2416","line":8,"column":3,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":9},{"ruleId":"2202","severity":1,"message":"2417","line":11,"column":3,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":10},{"ruleId":"2202","severity":1,"message":"2300","line":12,"column":3,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":6},{"ruleId":"2202","severity":1,"message":"2289","line":15,"column":22,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2559","line":18,"column":10,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2469","line":22,"column":10,"nodeType":"2204","messageId":"2205","endLine":22,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2330","line":29,"column":7,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2560","line":31,"column":9,"nodeType":"2204","messageId":"2205","endLine":31,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2431","line":32,"column":9,"nodeType":"2204","messageId":"2205","endLine":32,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2430","line":33,"column":9,"nodeType":"2204","messageId":"2205","endLine":33,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2395","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2394","line":4,"column":18,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2561","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2289","line":12,"column":22,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2305","line":13,"column":10,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2562","line":22,"column":7,"nodeType":"2204","messageId":"2205","endLine":22,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2563","line":50,"column":10,"nodeType":"2204","messageId":"2205","endLine":50,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2564","line":50,"column":23,"nodeType":"2204","messageId":"2205","endLine":50,"endColumn":37},{"ruleId":"2202","severity":1,"message":"2316","line":53,"column":10,"nodeType":"2204","messageId":"2205","endLine":53,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2333","line":54,"column":10,"nodeType":"2204","messageId":"2205","endLine":54,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2565","line":59,"column":5,"nodeType":"2204","messageId":"2205","endLine":59,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2566","line":60,"column":5,"nodeType":"2204","messageId":"2205","endLine":60,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2567","line":61,"column":5,"nodeType":"2204","messageId":"2205","endLine":61,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2568","line":76,"column":5,"nodeType":"2204","messageId":"2205","endLine":76,"endColumn":24},{"ruleId":"2318","severity":1,"message":"2569","line":82,"column":6,"nodeType":"2320","endLine":82,"endColumn":8,"suggestions":"2570"},{"ruleId":"2202","severity":1,"message":"2571","line":10,"column":10,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2277","line":15,"column":8,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2427","line":23,"column":26,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2430","line":24,"column":27,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":37},{"ruleId":"2202","severity":1,"message":"2431","line":24,"column":55,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":65},{"ruleId":"2318","severity":1,"message":"2572","line":39,"column":6,"nodeType":"2320","endLine":39,"endColumn":8,"suggestions":"2573"},{"ruleId":"2202","severity":1,"message":"2395","line":3,"column":31,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":37},{"ruleId":"2202","severity":1,"message":"2394","line":3,"column":39,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2574","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2509","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2510","line":71,"column":10,"nodeType":"2204","messageId":"2205","endLine":71,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2511","line":71,"column":18,"nodeType":"2204","messageId":"2205","endLine":71,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2368","line":72,"column":21,"nodeType":"2204","messageId":"2205","endLine":72,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2376","line":72,"column":40,"nodeType":"2204","messageId":"2205","endLine":72,"endColumn":52},{"ruleId":"2202","severity":1,"message":"2575","line":73,"column":9,"nodeType":"2204","messageId":"2205","endLine":73,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2576","line":74,"column":9,"nodeType":"2204","messageId":"2205","endLine":74,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2577","line":78,"column":10,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2578","line":78,"column":24,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2579","line":79,"column":10,"nodeType":"2204","messageId":"2205","endLine":79,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2580","line":79,"column":24,"nodeType":"2204","messageId":"2205","endLine":79,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2258","line":81,"column":22,"nodeType":"2204","messageId":"2205","endLine":81,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2581","line":82,"column":11,"nodeType":"2204","messageId":"2205","endLine":82,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2582","line":86,"column":5,"nodeType":"2204","messageId":"2205","endLine":86,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2583","line":87,"column":5,"nodeType":"2204","messageId":"2205","endLine":87,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2584","line":88,"column":5,"nodeType":"2204","messageId":"2205","endLine":88,"endColumn":18},{"ruleId":"2318","severity":1,"message":"2412","line":96,"column":6,"nodeType":"2320","endLine":96,"endColumn":8,"suggestions":"2585"},{"ruleId":"2202","severity":1,"message":"2395","line":3,"column":31,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":37},{"ruleId":"2202","severity":1,"message":"2394","line":3,"column":39,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2574","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2368","line":92,"column":19,"nodeType":"2204","messageId":"2205","endLine":92,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2370","line":92,"column":38,"nodeType":"2204","messageId":"2205","endLine":92,"endColumn":48},{"ruleId":"2202","severity":1,"message":"2586","line":93,"column":9,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2587","line":94,"column":9,"nodeType":"2204","messageId":"2205","endLine":94,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2579","line":98,"column":10,"nodeType":"2204","messageId":"2205","endLine":98,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2580","line":98,"column":24,"nodeType":"2204","messageId":"2205","endLine":98,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2258","line":99,"column":22,"nodeType":"2204","messageId":"2205","endLine":99,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2581","line":101,"column":11,"nodeType":"2204","messageId":"2205","endLine":101,"endColumn":25},{"ruleId":"2318","severity":1,"message":"2412","line":111,"column":6,"nodeType":"2320","endLine":111,"endColumn":8,"suggestions":"2588"},{"ruleId":"2202","severity":1,"message":"2368","line":79,"column":19,"nodeType":"2204","messageId":"2205","endLine":79,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2369","line":79,"column":27,"nodeType":"2204","messageId":"2205","endLine":79,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2586","line":80,"column":9,"nodeType":"2204","messageId":"2205","endLine":80,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2587","line":81,"column":9,"nodeType":"2204","messageId":"2205","endLine":81,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2338","line":85,"column":11,"nodeType":"2204","messageId":"2205","endLine":85,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2589","line":89,"column":5,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2590","line":90,"column":5,"nodeType":"2204","messageId":"2205","endLine":90,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2591","line":91,"column":5,"nodeType":"2204","messageId":"2205","endLine":91,"endColumn":15},{"ruleId":"2318","severity":1,"message":"2592","line":101,"column":6,"nodeType":"2320","endLine":101,"endColumn":8,"suggestions":"2593"},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2594","line":35,"column":11,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2560","line":36,"column":11,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2595","line":45,"column":5,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2596","line":55,"column":11,"nodeType":"2204","messageId":"2205","endLine":55,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2597","line":55,"column":28,"nodeType":"2204","messageId":"2205","endLine":55,"endColumn":44},{"ruleId":"2202","severity":1,"message":"2598","line":90,"column":9,"nodeType":"2204","messageId":"2205","endLine":90,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2506","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2260","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2261","line":8,"column":8,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2395","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2507","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2508","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2291","line":14,"column":8,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2290","line":15,"column":8,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2349","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2549","line":4,"column":27,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2599","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2550","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2600","line":34,"column":9,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2427","line":35,"column":11,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2264","line":36,"column":10,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":36,"column":22,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2601","line":53,"column":9,"nodeType":"2204","messageId":"2205","endLine":53,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2602","line":64,"column":9,"nodeType":"2204","messageId":"2205","endLine":64,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2603","line":75,"column":9,"nodeType":"2204","messageId":"2205","endLine":75,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2604","line":86,"column":9,"nodeType":"2204","messageId":"2205","endLine":86,"endColumn":40},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2349","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2549","line":4,"column":27,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2599","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2605","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2606","line":24,"column":8,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2607","line":25,"column":8,"nodeType":"2204","messageId":"2205","endLine":25,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2600","line":33,"column":9,"nodeType":"2204","messageId":"2205","endLine":33,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2264","line":34,"column":10,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":34,"column":22,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2608","line":47,"column":11,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2349","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2549","line":4,"column":27,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2599","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2550","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2609","line":23,"column":8,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2610","line":25,"column":8,"nodeType":"2204","messageId":"2205","endLine":25,"endColumn":37},{"ruleId":"2202","severity":1,"message":"2611","line":27,"column":8,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2600","line":38,"column":9,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2258","line":39,"column":22,"nodeType":"2204","messageId":"2205","endLine":39,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2427","line":40,"column":11,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2369","line":40,"column":22,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2612","line":40,"column":33,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":46},{"ruleId":"2202","severity":1,"message":"2613","line":41,"column":11,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2614","line":41,"column":27,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":46},{"ruleId":"2202","severity":1,"message":"2615","line":52,"column":19,"nodeType":"2204","messageId":"2205","endLine":52,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2616","line":53,"column":21,"nodeType":"2204","messageId":"2205","endLine":53,"endColumn":40},{"ruleId":"2202","severity":1,"message":"2568","line":54,"column":21,"nodeType":"2204","messageId":"2205","endLine":54,"endColumn":40},{"ruleId":"2202","severity":1,"message":"2535","line":57,"column":11,"nodeType":"2204","messageId":"2205","endLine":57,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2601","line":60,"column":9,"nodeType":"2204","messageId":"2205","endLine":60,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2603","line":82,"column":9,"nodeType":"2204","messageId":"2205","endLine":82,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2604","line":93,"column":9,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":40},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2349","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2549","line":4,"column":27,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":32},{"ruleId":"2202","severity":1,"message":"2599","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2550","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2617","line":9,"column":10,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2618","line":17,"column":8,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2619","line":19,"column":8,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2620","line":21,"column":8,"nodeType":"2204","messageId":"2205","endLine":21,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2621","line":23,"column":8,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2606","line":24,"column":8,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2607","line":25,"column":8,"nodeType":"2204","messageId":"2205","endLine":25,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2562","line":29,"column":7,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2600","line":33,"column":9,"nodeType":"2204","messageId":"2205","endLine":33,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2264","line":34,"column":10,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":34,"column":22,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2622","line":35,"column":10,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2623","line":36,"column":10,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2577","line":37,"column":10,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2624","line":38,"column":10,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2625","line":39,"column":10,"nodeType":"2204","messageId":"2205","endLine":39,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2626","line":40,"column":10,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2627","line":41,"column":10,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2628","line":42,"column":10,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":37},{"ruleId":"2202","severity":1,"message":"2615","line":45,"column":19,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2629","line":45,"column":38,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":56},{"ruleId":"2202","severity":1,"message":"2630","line":45,"column":58,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":73},{"ruleId":"2202","severity":1,"message":"2616","line":47,"column":21,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":40},{"ruleId":"2202","severity":1,"message":"2631","line":48,"column":21,"nodeType":"2204","messageId":"2205","endLine":48,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2632","line":48,"column":29,"nodeType":"2204","messageId":"2205","endLine":48,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2633","line":49,"column":28,"nodeType":"2204","messageId":"2205","endLine":49,"endColumn":54},{"ruleId":"2202","severity":1,"message":"2634","line":49,"column":56,"nodeType":"2204","messageId":"2205","endLine":49,"endColumn":77},{"ruleId":"2202","severity":1,"message":"2635","line":28,"column":5,"nodeType":"2204","messageId":"2205","endLine":28,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2636","line":29,"column":5,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2637","line":30,"column":5,"nodeType":"2204","messageId":"2205","endLine":30,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2638","line":31,"column":5,"nodeType":"2204","messageId":"2205","endLine":31,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2264","line":96,"column":10,"nodeType":"2204","messageId":"2205","endLine":96,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":96,"column":22,"nodeType":"2204","messageId":"2205","endLine":96,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2639","line":108,"column":38,"nodeType":"2204","messageId":"2205","endLine":108,"endColumn":59},{"ruleId":"2202","severity":1,"message":"2640","line":115,"column":9,"nodeType":"2204","messageId":"2205","endLine":115,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2641","line":124,"column":9,"nodeType":"2204","messageId":"2205","endLine":124,"endColumn":33},{"ruleId":"2318","severity":1,"message":"2642","line":73,"column":6,"nodeType":"2320","endLine":73,"endColumn":8,"suggestions":"2643"},{"ruleId":"2202","severity":1,"message":"2644","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2509","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2645","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2646","line":8,"column":8,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2647","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2648","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2617","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2649","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2650","line":63,"column":10,"nodeType":"2204","messageId":"2205","endLine":63,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2651","line":64,"column":10,"nodeType":"2204","messageId":"2205","endLine":64,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2338","line":65,"column":11,"nodeType":"2204","messageId":"2205","endLine":65,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2652","line":73,"column":5,"nodeType":"2204","messageId":"2205","endLine":73,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2653","line":74,"column":5,"nodeType":"2204","messageId":"2205","endLine":74,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2654","line":75,"column":5,"nodeType":"2204","messageId":"2205","endLine":75,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2655","line":76,"column":5,"nodeType":"2204","messageId":"2205","endLine":76,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2656","line":77,"column":5,"nodeType":"2204","messageId":"2205","endLine":77,"endColumn":21},{"ruleId":"2318","severity":1,"message":"2657","line":82,"column":6,"nodeType":"2320","endLine":82,"endColumn":8,"suggestions":"2658"},{"ruleId":"2202","severity":1,"message":"2598","line":84,"column":9,"nodeType":"2204","messageId":"2205","endLine":84,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2659","line":88,"column":9,"nodeType":"2204","messageId":"2205","endLine":88,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2660","line":93,"column":9,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2661","line":97,"column":9,"nodeType":"2204","messageId":"2205","endLine":97,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2662","line":101,"column":9,"nodeType":"2204","messageId":"2205","endLine":101,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2349","line":3,"column":10,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2364","line":3,"column":21,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2644","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2509","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2645","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2646","line":8,"column":8,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2647","line":9,"column":8,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2648","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2617","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2649","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2650","line":37,"column":10,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2651","line":38,"column":10,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2338","line":39,"column":11,"nodeType":"2204","messageId":"2205","endLine":39,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2583","line":42,"column":5,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2582","line":44,"column":5,"nodeType":"2204","messageId":"2205","endLine":44,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2584","line":45,"column":5,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2663","line":47,"column":5,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2664","line":48,"column":5,"nodeType":"2204","messageId":"2205","endLine":48,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2665","line":49,"column":5,"nodeType":"2204","messageId":"2205","endLine":49,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2666","line":50,"column":5,"nodeType":"2204","messageId":"2205","endLine":50,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2667","line":51,"column":5,"nodeType":"2204","messageId":"2205","endLine":51,"endColumn":23},{"ruleId":"2318","severity":1,"message":"2668","line":56,"column":6,"nodeType":"2320","endLine":56,"endColumn":8,"suggestions":"2669"},{"ruleId":"2202","severity":1,"message":"2598","line":58,"column":9,"nodeType":"2204","messageId":"2205","endLine":58,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2659","line":62,"column":9,"nodeType":"2204","messageId":"2205","endLine":62,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2660","line":67,"column":9,"nodeType":"2204","messageId":"2205","endLine":67,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2661","line":71,"column":9,"nodeType":"2204","messageId":"2205","endLine":71,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2289","line":2,"column":22,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2670","line":3,"column":25,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2379","line":9,"column":3,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2671","line":16,"column":10,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2644","line":17,"column":8,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2509","line":18,"column":8,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2645","line":19,"column":8,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2646","line":20,"column":8,"nodeType":"2204","messageId":"2205","endLine":20,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2647","line":21,"column":8,"nodeType":"2204","messageId":"2205","endLine":21,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2561","line":22,"column":8,"nodeType":"2204","messageId":"2205","endLine":22,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2617","line":23,"column":10,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2672","line":26,"column":8,"nodeType":"2204","messageId":"2205","endLine":26,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2330","line":44,"column":7,"nodeType":"2204","messageId":"2205","endLine":44,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2650","line":46,"column":10,"nodeType":"2204","messageId":"2205","endLine":46,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2399","line":47,"column":10,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2400","line":47,"column":25,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2404","line":49,"column":9,"nodeType":"2204","messageId":"2205","endLine":49,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2673","line":50,"column":10,"nodeType":"2204","messageId":"2205","endLine":50,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2459","line":50,"column":22,"nodeType":"2204","messageId":"2205","endLine":50,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2674","line":51,"column":9,"nodeType":"2204","messageId":"2205","endLine":51,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2675","line":56,"column":5,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2567","line":58,"column":5,"nodeType":"2204","messageId":"2205","endLine":58,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2676","line":59,"column":5,"nodeType":"2204","messageId":"2205","endLine":59,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2677","line":60,"column":5,"nodeType":"2204","messageId":"2205","endLine":60,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2678","line":61,"column":5,"nodeType":"2204","messageId":"2205","endLine":61,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2679","line":62,"column":5,"nodeType":"2204","messageId":"2205","endLine":62,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2388","line":63,"column":5,"nodeType":"2204","messageId":"2205","endLine":63,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2680","line":64,"column":5,"nodeType":"2204","messageId":"2205","endLine":64,"endColumn":33},{"ruleId":"2318","severity":1,"message":"2681","line":69,"column":6,"nodeType":"2320","endLine":69,"endColumn":8,"suggestions":"2682"},{"ruleId":"2202","severity":1,"message":"2598","line":71,"column":9,"nodeType":"2204","messageId":"2205","endLine":71,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2659","line":77,"column":9,"nodeType":"2204","messageId":"2205","endLine":77,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2509","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2510","line":67,"column":10,"nodeType":"2204","messageId":"2205","endLine":67,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2511","line":67,"column":18,"nodeType":"2204","messageId":"2205","endLine":67,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2338","line":70,"column":11,"nodeType":"2204","messageId":"2205","endLine":70,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2512","line":75,"column":5,"nodeType":"2204","messageId":"2205","endLine":75,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2683","line":98,"column":9,"nodeType":"2204","messageId":"2205","endLine":98,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2684","line":107,"column":9,"nodeType":"2204","messageId":"2205","endLine":107,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2685","line":121,"column":9,"nodeType":"2204","messageId":"2205","endLine":121,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2289","line":2,"column":22,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2394","line":5,"column":21,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2379","line":10,"column":3,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2671","line":17,"column":10,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2561","line":23,"column":8,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2562","line":29,"column":7,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2330","line":73,"column":7,"nodeType":"2204","messageId":"2205","endLine":73,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2686","line":75,"column":24,"nodeType":"2204","messageId":"2205","endLine":75,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2399","line":76,"column":10,"nodeType":"2204","messageId":"2205","endLine":76,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2400","line":76,"column":25,"nodeType":"2204","messageId":"2205","endLine":76,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2404","line":78,"column":9,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2674","line":80,"column":9,"nodeType":"2204","messageId":"2205","endLine":80,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2675","line":84,"column":5,"nodeType":"2204","messageId":"2205","endLine":84,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2687","line":85,"column":5,"nodeType":"2204","messageId":"2205","endLine":85,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2567","line":86,"column":5,"nodeType":"2204","messageId":"2205","endLine":86,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2676","line":88,"column":5,"nodeType":"2204","messageId":"2205","endLine":88,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2677","line":89,"column":5,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2678","line":90,"column":5,"nodeType":"2204","messageId":"2205","endLine":90,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2679","line":91,"column":5,"nodeType":"2204","messageId":"2205","endLine":91,"endColumn":30},{"ruleId":"2202","severity":1,"message":"2388","line":92,"column":5,"nodeType":"2204","messageId":"2205","endLine":92,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2680","line":93,"column":5,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2410","line":96,"column":9,"nodeType":"2204","messageId":"2205","endLine":96,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2670","line":2,"column":25,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2289","line":4,"column":22,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2304","line":5,"column":29,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2688","line":7,"column":3,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2418","line":8,"column":3,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2365","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2562","line":14,"column":7,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2330","line":43,"column":7,"nodeType":"2204","messageId":"2205","endLine":43,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2689","line":45,"column":9,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2568","line":46,"column":45,"nodeType":"2204","messageId":"2205","endLine":46,"endColumn":64},{"ruleId":"2318","severity":1,"message":"2569","line":52,"column":6,"nodeType":"2320","endLine":52,"endColumn":8,"suggestions":"2690"},{"ruleId":"2206","replacedBy":"2691"},{"ruleId":"2208","replacedBy":"2692"},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2693","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2694","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2293","line":13,"column":7,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2695","line":15,"column":7,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2696","line":45,"column":13,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2600","line":56,"column":9,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2697","line":57,"column":10,"nodeType":"2204","messageId":"2205","endLine":57,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2698","line":57,"column":20,"nodeType":"2204","messageId":"2205","endLine":57,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2289","line":11,"column":22,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2304","line":12,"column":29,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2330","line":99,"column":7,"nodeType":"2204","messageId":"2205","endLine":99,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2689","line":101,"column":9,"nodeType":"2204","messageId":"2205","endLine":101,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2699","line":102,"column":38,"nodeType":"2204","messageId":"2205","endLine":102,"endColumn":59},{"ruleId":"2202","severity":1,"message":"2700","line":104,"column":9,"nodeType":"2204","messageId":"2205","endLine":104,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2693","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2549","line":8,"column":8,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2302","line":10,"column":3,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":7},{"ruleId":"2202","severity":1,"message":"2303","line":11,"column":3,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2304","line":12,"column":3,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2305","line":14,"column":3,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2379","line":15,"column":3,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2380","line":16,"column":3,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2694","line":20,"column":10,"nodeType":"2204","messageId":"2205","endLine":20,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2293","line":22,"column":7,"nodeType":"2204","messageId":"2205","endLine":22,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2695","line":24,"column":7,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2701","line":73,"column":7,"nodeType":"2204","messageId":"2205","endLine":73,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2600","line":80,"column":9,"nodeType":"2204","messageId":"2205","endLine":80,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2697","line":81,"column":12,"nodeType":"2204","messageId":"2205","endLine":81,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2698","line":81,"column":22,"nodeType":"2204","messageId":"2205","endLine":81,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2264","line":82,"column":12,"nodeType":"2204","messageId":"2205","endLine":82,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2258","line":82,"column":24,"nodeType":"2204","messageId":"2205","endLine":82,"endColumn":37},{"ruleId":"2202","severity":1,"message":"2255","line":5,"column":8,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2693","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2303","line":8,"column":10,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2379","line":8,"column":36,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":58},{"ruleId":"2202","severity":1,"message":"2702","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2293","line":15,"column":7,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2600","line":33,"column":9,"nodeType":"2204","messageId":"2205","endLine":33,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2368","line":34,"column":19,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2370","line":34,"column":38,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":48},{"ruleId":"2202","severity":1,"message":"2258","line":35,"column":22,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2697","line":36,"column":10,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2698","line":36,"column":20,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2581","line":40,"column":11,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2589","line":41,"column":11,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2703","line":41,"column":27,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2704","line":41,"column":41,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":54},{"ruleId":"2318","severity":1,"message":"2412","line":46,"column":6,"nodeType":"2320","endLine":46,"endColumn":8,"suggestions":"2705"},{"ruleId":"2202","severity":1,"message":"2289","line":2,"column":22,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2379","line":9,"column":3,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2671","line":17,"column":10,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2644","line":18,"column":8,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2509","line":19,"column":8,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2645","line":20,"column":8,"nodeType":"2204","messageId":"2205","endLine":20,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2646","line":21,"column":8,"nodeType":"2204","messageId":"2205","endLine":21,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2647","line":22,"column":8,"nodeType":"2204","messageId":"2205","endLine":22,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2561","line":23,"column":8,"nodeType":"2204","messageId":"2205","endLine":23,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2617","line":24,"column":10,"nodeType":"2204","messageId":"2205","endLine":24,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2672","line":27,"column":8,"nodeType":"2204","messageId":"2205","endLine":27,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2562","line":29,"column":7,"nodeType":"2204","messageId":"2205","endLine":29,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2695","line":31,"column":7,"nodeType":"2204","messageId":"2205","endLine":31,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2330","line":45,"column":7,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2258","line":47,"column":22,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2650","line":48,"column":10,"nodeType":"2204","messageId":"2205","endLine":48,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2399","line":49,"column":10,"nodeType":"2204","messageId":"2205","endLine":49,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2400","line":49,"column":25,"nodeType":"2204","messageId":"2205","endLine":49,"endColumn":41},{"ruleId":"2202","severity":1,"message":"2404","line":51,"column":9,"nodeType":"2204","messageId":"2205","endLine":51,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2673","line":52,"column":10,"nodeType":"2204","messageId":"2205","endLine":52,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2459","line":52,"column":22,"nodeType":"2204","messageId":"2205","endLine":52,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2674","line":53,"column":9,"nodeType":"2204","messageId":"2205","endLine":53,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2706","line":54,"column":9,"nodeType":"2204","messageId":"2205","endLine":54,"endColumn":14},{"ruleId":"2318","severity":1,"message":"2707","line":64,"column":6,"nodeType":"2320","endLine":64,"endColumn":8,"suggestions":"2708"},{"ruleId":"2202","severity":1,"message":"2598","line":66,"column":9,"nodeType":"2204","messageId":"2205","endLine":66,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2659","line":72,"column":9,"nodeType":"2204","messageId":"2205","endLine":72,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2693","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2293","line":14,"column":7,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2695","line":16,"column":7,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2696","line":38,"column":13,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2600","line":49,"column":9,"nodeType":"2204","messageId":"2205","endLine":49,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2258","line":50,"column":22,"nodeType":"2204","messageId":"2205","endLine":50,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2368","line":51,"column":22,"nodeType":"2204","messageId":"2205","endLine":51,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2376","line":51,"column":41,"nodeType":"2204","messageId":"2205","endLine":51,"endColumn":53},{"ruleId":"2202","severity":1,"message":"2697","line":52,"column":10,"nodeType":"2204","messageId":"2205","endLine":52,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2698","line":52,"column":20,"nodeType":"2204","messageId":"2205","endLine":52,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2371","line":55,"column":11,"nodeType":"2204","messageId":"2205","endLine":55,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2709","line":55,"column":18,"nodeType":"2204","messageId":"2205","endLine":55,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2512","line":56,"column":12,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2710","line":56,"column":30,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":44},{"ruleId":"2202","severity":1,"message":"2711","line":56,"column":46,"nodeType":"2204","messageId":"2205","endLine":56,"endColumn":61},{"ruleId":"2318","severity":1,"message":"2412","line":61,"column":6,"nodeType":"2320","endLine":61,"endColumn":8,"suggestions":"2712"},{"ruleId":"2202","severity":1,"message":"2289","line":3,"column":22,"nodeType":"2204","messageId":"2205","endLine":3,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2365","line":8,"column":10,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2562","line":10,"column":7,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2695","line":12,"column":7,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2330","line":34,"column":7,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2689","line":36,"column":9,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2258","line":37,"column":22,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2713","line":38,"column":39,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":53},{"ruleId":"2318","severity":1,"message":"2714","line":43,"column":6,"nodeType":"2320","endLine":43,"endColumn":8,"suggestions":"2715"},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2255","line":4,"column":8,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2716","line":6,"column":28,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2293","line":13,"column":7,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2695","line":15,"column":7,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2600","line":37,"column":9,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2369","line":38,"column":22,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2292","line":39,"column":11,"nodeType":"2204","messageId":"2205","endLine":39,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2258","line":40,"column":22,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2697","line":41,"column":10,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2698","line":41,"column":20,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2717","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2693","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2549","line":8,"column":8,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2303","line":9,"column":10,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2694","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":34},{"ruleId":"2202","severity":1,"message":"2293","line":15,"column":7,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2695","line":17,"column":7,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2718","line":63,"column":7,"nodeType":"2204","messageId":"2205","endLine":63,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2701","line":71,"column":7,"nodeType":"2204","messageId":"2205","endLine":71,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2600","line":78,"column":9,"nodeType":"2204","messageId":"2205","endLine":78,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2697","line":79,"column":10,"nodeType":"2204","messageId":"2205","endLine":79,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2698","line":79,"column":20,"nodeType":"2204","messageId":"2205","endLine":79,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2258","line":80,"column":22,"nodeType":"2204","messageId":"2205","endLine":80,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2367","line":83,"column":5,"nodeType":"2204","messageId":"2205","endLine":83,"endColumn":11},{"ruleId":"2202","severity":1,"message":"2719","line":84,"column":5,"nodeType":"2204","messageId":"2205","endLine":84,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2589","line":85,"column":5,"nodeType":"2204","messageId":"2205","endLine":85,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2590","line":86,"column":5,"nodeType":"2204","messageId":"2205","endLine":86,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2591","line":87,"column":5,"nodeType":"2204","messageId":"2205","endLine":87,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2652","line":88,"column":5,"nodeType":"2204","messageId":"2205","endLine":88,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2653","line":89,"column":5,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2654","line":90,"column":5,"nodeType":"2204","messageId":"2205","endLine":90,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2655","line":91,"column":5,"nodeType":"2204","messageId":"2205","endLine":91,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2656","line":92,"column":5,"nodeType":"2204","messageId":"2205","endLine":92,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2720","line":93,"column":5,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":24},{"ruleId":"2318","severity":1,"message":"2721","line":102,"column":6,"nodeType":"2320","endLine":102,"endColumn":8,"suggestions":"2722"},{"ruleId":"2202","severity":1,"message":"2574","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2360","line":61,"column":5,"nodeType":"2204","messageId":"2205","endLine":61,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2362","line":93,"column":10,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2363","line":93,"column":17,"nodeType":"2204","messageId":"2205","endLine":93,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2258","line":95,"column":22,"nodeType":"2204","messageId":"2205","endLine":95,"endColumn":35},{"ruleId":"2206","replacedBy":"2207"},{"ruleId":"2208","replacedBy":"2209"},{"ruleId":"2202","severity":1,"message":"2723","line":1,"column":23,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":45},{"ruleId":"2724","severity":1,"message":"2725","line":2,"column":31,"nodeType":"2435","messageId":"2726","endLine":2,"endColumn":33},{"ruleId":"2724","severity":1,"message":"2725","line":2,"column":35,"nodeType":"2435","messageId":"2726","endLine":2,"endColumn":37},{"ruleId":"2724","severity":1,"message":"2725","line":2,"column":36,"nodeType":"2435","messageId":"2726","endLine":2,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2302","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2303","line":6,"column":16,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2379","line":6,"column":42,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":64},{"ruleId":"2202","severity":1,"message":"2727","line":11,"column":8,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2365","line":13,"column":10,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2469","line":14,"column":10,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2308","line":18,"column":7,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2264","line":40,"column":10,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":40,"column":22,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":15,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2308","line":17,"column":7,"nodeType":"2204","messageId":"2205","endLine":17,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2728","line":40,"column":22,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2729","line":40,"column":41,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":55},{"ruleId":"2202","severity":1,"message":"2730","line":1,"column":8,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2731","line":14,"column":9,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2561","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2289","line":12,"column":22,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2304","line":13,"column":45,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":59},{"ruleId":"2202","severity":1,"message":"2688","line":15,"column":3,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2418","line":16,"column":3,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2365","line":21,"column":10,"nodeType":"2204","messageId":"2205","endLine":21,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2258","line":52,"column":22,"nodeType":"2204","messageId":"2205","endLine":52,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2732","line":54,"column":10,"nodeType":"2204","messageId":"2205","endLine":54,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2733","line":54,"column":15,"nodeType":"2204","messageId":"2205","endLine":54,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2424","line":65,"column":5,"nodeType":"2204","messageId":"2205","endLine":65,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2734","line":66,"column":5,"nodeType":"2204","messageId":"2205","endLine":66,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2498","line":79,"column":9,"nodeType":"2204","messageId":"2205","endLine":79,"endColumn":23},{"ruleId":"2202","severity":1,"message":"2735","line":88,"column":9,"nodeType":"2204","messageId":"2205","endLine":88,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2218","line":89,"column":13,"nodeType":"2204","messageId":"2205","endLine":89,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2736","line":96,"column":9,"nodeType":"2204","messageId":"2205","endLine":96,"endColumn":23},{"ruleId":"2318","severity":1,"message":"2412","line":106,"column":6,"nodeType":"2320","endLine":106,"endColumn":8,"suggestions":"2737"},{"ruleId":"2202","severity":1,"message":"2738","line":10,"column":8,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":27},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2716","line":5,"column":28,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2303","line":7,"column":10,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2379","line":7,"column":36,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":58},{"ruleId":"2202","severity":1,"message":"2365","line":9,"column":10,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2739","line":10,"column":10,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2702","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2293","line":14,"column":7,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2600","line":18,"column":9,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2368","line":19,"column":22,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2740","line":19,"column":41,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":54},{"ruleId":"2202","severity":1,"message":"2258","line":20,"column":22,"nodeType":"2204","messageId":"2205","endLine":20,"endColumn":35},{"ruleId":"2318","severity":1,"message":"2412","line":25,"column":6,"nodeType":"2320","endLine":25,"endColumn":8,"suggestions":"2741"},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2742","line":5,"column":28,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":46},{"ruleId":"2202","severity":1,"message":"2255","line":6,"column":8,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2693","line":7,"column":8,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2303","line":9,"column":10,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2379","line":9,"column":36,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":58},{"ruleId":"2202","severity":1,"message":"2702","line":13,"column":10,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2293","line":16,"column":7,"nodeType":"2204","messageId":"2205","endLine":16,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2600","line":34,"column":9,"nodeType":"2204","messageId":"2205","endLine":34,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2368","line":35,"column":19,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2369","line":35,"column":27,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2370","line":35,"column":38,"nodeType":"2204","messageId":"2205","endLine":35,"endColumn":48},{"ruleId":"2202","severity":1,"message":"2264","line":36,"column":10,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":36,"column":22,"nodeType":"2204","messageId":"2205","endLine":36,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2697","line":37,"column":10,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2698","line":37,"column":20,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2581","line":41,"column":11,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2589","line":42,"column":11,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2703","line":42,"column":27,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2704","line":42,"column":41,"nodeType":"2204","messageId":"2205","endLine":42,"endColumn":54},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2255","line":4,"column":8,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":13},{"ruleId":"2202","severity":1,"message":"2716","line":6,"column":28,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2293","line":13,"column":7,"nodeType":"2204","messageId":"2205","endLine":13,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2695","line":15,"column":7,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2600","line":37,"column":9,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2369","line":38,"column":22,"nodeType":"2204","messageId":"2205","endLine":38,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2292","line":39,"column":11,"nodeType":"2204","messageId":"2205","endLine":39,"endColumn":15},{"ruleId":"2202","severity":1,"message":"2264","line":40,"column":10,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":40,"column":22,"nodeType":"2204","messageId":"2205","endLine":40,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2697","line":41,"column":10,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2698","line":41,"column":20,"nodeType":"2204","messageId":"2205","endLine":41,"endColumn":31},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2716","line":5,"column":28,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2303","line":7,"column":10,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2379","line":7,"column":36,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":58},{"ruleId":"2202","severity":1,"message":"2365","line":9,"column":10,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2739","line":10,"column":10,"nodeType":"2204","messageId":"2205","endLine":10,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2702","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2293","line":14,"column":7,"nodeType":"2204","messageId":"2205","endLine":14,"endColumn":18},{"ruleId":"2202","severity":1,"message":"2600","line":18,"column":9,"nodeType":"2204","messageId":"2205","endLine":18,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2368","line":19,"column":22,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2369","line":19,"column":30,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":39},{"ruleId":"2202","severity":1,"message":"2740","line":19,"column":41,"nodeType":"2204","messageId":"2205","endLine":19,"endColumn":54},{"ruleId":"2202","severity":1,"message":"2264","line":20,"column":10,"nodeType":"2204","messageId":"2205","endLine":20,"endColumn":20},{"ruleId":"2202","severity":1,"message":"2258","line":20,"column":22,"nodeType":"2204","messageId":"2205","endLine":20,"endColumn":35},{"ruleId":"2202","severity":1,"message":"2670","line":2,"column":25,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2289","line":4,"column":22,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2304","line":5,"column":29,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2688","line":7,"column":3,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2418","line":8,"column":3,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2365","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2330","line":43,"column":7,"nodeType":"2204","messageId":"2205","endLine":43,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2689","line":45,"column":9,"nodeType":"2204","messageId":"2205","endLine":45,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2568","line":51,"column":5,"nodeType":"2204","messageId":"2205","endLine":51,"endColumn":24},{"ruleId":"2318","severity":1,"message":"2743","line":57,"column":6,"nodeType":"2320","endLine":57,"endColumn":8,"suggestions":"2744"},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2670","line":2,"column":25,"nodeType":"2204","messageId":"2205","endLine":2,"endColumn":38},{"ruleId":"2202","severity":1,"message":"2289","line":4,"column":22,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2304","line":5,"column":29,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2688","line":7,"column":3,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":17},{"ruleId":"2202","severity":1,"message":"2418","line":8,"column":3,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2745","line":11,"column":10,"nodeType":"2204","messageId":"2205","endLine":11,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2365","line":12,"column":10,"nodeType":"2204","messageId":"2205","endLine":12,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2562","line":15,"column":7,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":19},{"ruleId":"2202","severity":1,"message":"2330","line":44,"column":7,"nodeType":"2204","messageId":"2205","endLine":44,"endColumn":14},{"ruleId":"2202","severity":1,"message":"2689","line":47,"column":9,"nodeType":"2204","messageId":"2205","endLine":47,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2746","line":9,"column":10,"nodeType":"2204","messageId":"2205","endLine":9,"endColumn":29},{"ruleId":"2202","severity":1,"message":"2256","line":1,"column":17,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2216","line":1,"column":27,"nodeType":"2204","messageId":"2205","endLine":1,"endColumn":36},{"ruleId":"2202","severity":1,"message":"2395","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":16},{"ruleId":"2202","severity":1,"message":"2394","line":4,"column":18,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2349","line":4,"column":24,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2364","line":4,"column":35,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":43},{"ruleId":"2202","severity":1,"message":"2469","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":26},{"ruleId":"2202","severity":1,"message":"2581","line":37,"column":11,"nodeType":"2204","messageId":"2205","endLine":37,"endColumn":25},{"ruleId":"2202","severity":1,"message":"2747","line":4,"column":10,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2304","line":4,"column":26,"nodeType":"2204","messageId":"2205","endLine":4,"endColumn":40},{"ruleId":"2202","severity":1,"message":"2748","line":5,"column":10,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2745","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2747","line":5,"column":10,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":24},{"ruleId":"2202","severity":1,"message":"2304","line":5,"column":26,"nodeType":"2204","messageId":"2205","endLine":5,"endColumn":40},{"ruleId":"2202","severity":1,"message":"2748","line":6,"column":10,"nodeType":"2204","messageId":"2205","endLine":6,"endColumn":21},{"ruleId":"2202","severity":1,"message":"2745","line":7,"column":10,"nodeType":"2204","messageId":"2205","endLine":7,"endColumn":28},{"ruleId":"2202","severity":1,"message":"2749","line":8,"column":10,"nodeType":"2204","messageId":"2205","endLine":8,"endColumn":22},{"ruleId":"2202","severity":1,"message":"2750","line":15,"column":17,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":33},{"ruleId":"2202","severity":1,"message":"2751","line":15,"column":35,"nodeType":"2204","messageId":"2205","endLine":15,"endColumn":51},"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","no-native-reassign",["2752"],"no-negated-in-lhs",["2753"],"'ThemeProvider' is defined but never used.","'Switch' is defined but never used.","'DashboardMain' is defined but never used.","'darkTheme' is assigned a value but never used.","'lightTheme' is assigned a value but never used.","'handleThemeChange' is assigned a value but never used.","'useEffect' is defined but never used.","'SET_SINGLEEMPLOYEE' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'ic_no' is assigned a value but never used.","'email' is assigned a value but never used.","'age' is assigned a value but never used.","'gender' is assigned a value but never used.","'SET_SINGLEEXPENSE' is defined but never used.","'date' is assigned a value but never used.","'purchased_date' is assigned a value but never used.","'remark' is assigned a value but never used.","'amount' is assigned a value but never used.","'status' is assigned a value but never used.","'SET_SINGLELEAVE' is defined but never used.","'RESET_TABLES' is defined but never used.","'from_date' is assigned a value but never used.","'to_date' is assigned a value but never used.","'reason' is assigned a value but never used.","'no_of_days' is assigned a value but never used.","'SET_SINGLEDAILYALLOWANCE' is defined but never used.","'LOAD_DAILYALLOWANCES' is defined but never used.","'LOAD_DAILYALLOWSDETLS' is defined but never used.","'period' is assigned a value but never used.","'location' is assigned a value but never used.","'manager_name' is assigned a value but never used.","no-dupe-keys","Duplicate key 'setDailyAllowsDetlPeriod'.","ObjectExpression","unexpected","'SET_SINGLEPAYSLIP' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_BEGIN' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_SUCCESS' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_ERROR' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_BEGIN' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_ERROR' is defined but never used.","'description' is assigned a value but never used.","'SET_SINGLETRAINING' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'useUser' is defined but never used.","'setLoginLevel' is assigned a value but never used.","'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'openDialog' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'loginLevel' is assigned a value but never used.","'handleOpenDialog' is assigned a value but never used.","'handleCloseDialog' is assigned a value but never used.","'SingleEmployeeStaff' is defined but never used.","'SingleDailyAllowance' is defined but never used.","'SingleDailyAllowsDetls' is defined but never used.","'BatchDailyAllowances' is defined but never used.","'SinglePayslip' is defined but never used.","'Payrun' is defined but never used.","'Payrunbatch' is defined but never used.","'Leave' is defined but never used.","'Expenses' is defined but never used.","'Payslip' is defined but never used.","'BatchPayslips' is defined but never used.","'Payroll' is defined but never used.","'DailyAllowances' is defined but never used.","'UserAccess' is defined but never used.","'SingleEmployee' is defined but never used.","'Login' is defined but never used.","'AllEmployees' is defined but never used.","'Departments' is defined but never used.","'Designation' is defined but never used.","'Tables' is defined but never used.","'Clients' is defined but never used.","'Allowances' is defined but never used.","'Link' is defined but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'user' is assigned a value but never used.","'drawerWidth' is assigned a value but never used.","'url' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'jobs' is assigned a value but never used.","'setJobs' is assigned a value but never used.","'CssBaseline' is defined but never used.","'Box' is defined but never used.","'RecoilRoot' is defined but never used.","'atom' is defined but never used.","'selector' is defined but never used.","'useRecoilValue' is defined but never used.","'useSetRecoilState' is defined but never used.","'MenuListItems' is defined but never used.","'headerlogo' is defined but never used.","'ToolbarHeader' is assigned a value but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'NativeSelect' is defined but never used.","'InputLabel' is defined but never used.","'selectmonths' is assigned a value but never used.","'longMonth' is assigned a value but never used.","'expenses' is assigned a value but never used.","'payrunId' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'payrun_loading'. Either include it or remove the dependency array.","ArrayExpression",["2754"],"'yy' is assigned a value but never used.","'mm' is assigned a value but never used.","'d' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPayrun', 'loadEmployees', 'loadUnpaidDailyAllows', and 'loadUnpaidExpenses'. Either include them or remove the dependency array.",["2755"],"'useReactToPrint' is defined but never used.","'Text' is defined but never used.","'paydataState' is defined but never used.","'history' is assigned a value but never used.","'componentRef' is assigned a value but never used.","'setPayrunId' is assigned a value but never used.","'payrunstatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslip', 'loadPayitems', and 'payslip_period'. Either include them or remove the dependency array.",["2756"],"'handlePrintSummary' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'loadEmployees' is assigned a value but never used.","'employees_loading' is assigned a value but never used.","'employees_error' is assigned a value but never used.","'handleStaffClick' is assigned a value but never used.","'handleAdminClick' is assigned a value but never used.","'handleAdminManagerClick' is assigned a value but never used.","'handleManagerClick' is assigned a value but never used.","'useTable' is defined but never used.","'usePagination' is defined but never used.","'Grid' is defined but never used.","'Divider' is defined but never used.","'TextField' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleButtonClick' is assigned a value but never used.","'handleClickPay' is assigned a value but never used.","'handleClickTable' is assigned a value but never used.","'FlightIcon' is defined but never used.","'MonetizationOnIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'MoneyIcon' is defined but never used.","'updateEmployee' is assigned a value but never used.","'addEmployee' is assigned a value but never used.","'alert' is assigned a value but never used.","'setAlert' is assigned a value but never used.","'MenuItem' is defined but never used.","'useEmployeesContext' is defined but never used.","'useDeleteLeaves' is defined but never used.","'leaves' is assigned a value but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'setLeaveId' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'useDeleteExpenses' is defined but never used.","'initial_values' is assigned a value but never used.","'setExpenseId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadEmployees'. Either include it or remove the dependency array.",["2757"],"'useRecoilValueLoadable' is defined but never used.","'useRecoilStateLoadable' is defined but never used.","'allowsDataState' is defined but never used.","'fetchDailyAllowsDetlsSelector' is defined but never used.","'dailyallowsdetls' is assigned a value but never used.","'addDailyAllowsDetl' is assigned a value but never used.","'dailyallowsdetls_loading' is assigned a value but never used.","'updateDailyAllowsDetl' is assigned a value but never used.","'deleteDailyAllowsDetl' is assigned a value but never used.","'dailyallowance_period' is assigned a value but never used.","'single_dailyallowance' is assigned a value but never used.","'editDailyAllowanceID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allows_empid', 'allows_period', and 'getSingleBatchDailyAllowsDetl'. Either include them or remove the dependency array.",["2758"],"'index' is assigned a value but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'addDailyAllows' is assigned a value but never used.","'updateDailyAllows' is assigned a value but never used.","'deleteDailyAllows' is assigned a value but never used.","'tmpallowsdata' is assigned a value but never used.","'setTmpallowsdata' is assigned a value but never used.","'allowsDetlsdata' is assigned a value but never used.","'setAllowsDetlsdata' is assigned a value but never used.","'allows_period' is assigned a value but never used.","'allows_empid' is assigned a value but never used.","'toLoad' is assigned a value but never used.","'loadEmpDailyAllowances' is assigned a value but never used.","'dailyallowances_loading' is assigned a value but never used.","'dailyallowances_error' is assigned a value but never used.","'getSingleBatchDailyAllowsDetl' is assigned a value but never used.","'Save_DailyAllowancesData' is assigned a value but never used.","'handleAllowsDetlDialogOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loginLevel.loginUserId' and 'setFilter'. Either include them or remove the dependency array.",["2759"],"'useReducer' is defined but never used.","'useRef' is defined but never used.","'Select' is defined but never used.","'Toolbar' is defined but never used.","'payPeriodEndMonthState' is defined but never used.","'calc' is assigned a value but never used.","'setCalc' is assigned a value but never used.","'isPayslipEditing' is assigned a value but never used.","'addPayslip' is assigned a value but never used.","'loadPayslips' is assigned a value but never used.","'payslip_period' is assigned a value but never used.","'payslip_earning_amount' is assigned a value but never used.","'payslip_deduction_amount' is assigned a value but never used.","'employees' is assigned a value but never used.","'loadAllowances' is assigned a value but never used.","'loadDeductions' is assigned a value but never used.","'allowances' is assigned a value but never used.","'deductions' is assigned a value but never used.","'setPayEarningData' is assigned a value but never used.","'setPayDeductionData' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'editPayslipID' and 'getSinglePayslip'. Either include them or remove the dependency array.",["2760"],"react/jsx-pascal-case","Imported JSX component Payslip_ViewEarnings must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Payslip_ViewDeductions must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Payslip_Earnings must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Payslip_Deductions must be in PascalCase or SCREAMING_SNAKE_CASE","'ReactToPrint' is defined but never used.","'Heading' is defined but never used.","'ComponentToPrint' is defined but never used.","'classes' is assigned a value but never used.","'setPayrunStatus' is assigned a value but never used.","'handlePrint' is assigned a value but never used.","'handleSaveCalcTotals' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleCalcTotals'. Either include it or remove the dependency array.",["2761"],"'headExpenseTableCells' is defined but never used.","'ExpenseTable' is defined but never used.","'useDailyAllowsDetls' is defined but never used.","'addDailyAllowsDetls' is assigned a value but never used.","'updateDailyAllowsDetls' is assigned a value but never used.","'deleteDailyAllowsDetls' is assigned a value but never used.","'setAllowsdata' is assigned a value but never used.","'allowsdataId' is assigned a value but never used.","'setAllowsdataId' is assigned a value but never used.","'tabledeldata' is assigned a value but never used.","'setTableDelData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handle_calc'. Either include it or remove the dependency array.",["2762"],"'handle_refresh' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleEmployee', 'loadDepartments', 'loadDesignations', 'loginLevel.loginUserId', and 'setEditEmployeeID'. Either include them or remove the dependency array.",["2763"],"'useTablesContext' is defined but never used.","React Hook useEffect has missing dependencies: 'editEmployeeID' and 'setExperienceId'. Either include them or remove the dependency array.",["2764"],"'allowsDataDetlsState' is defined but never used.","'payEarningData' is assigned a value but never used.","'loadPayslipDeductions' is assigned a value but never used.","'calc_Deduction' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipDeductions', 'payslip_period', and 'single_payslip.empid'. Either include them or remove the dependency array.",["2765"],"'update_PayslipDeduction' is assigned a value but never used.","'add_PayslipDeduction' is assigned a value but never used.","'delete_PayslipDeduction' is assigned a value but never used.",["2752"],["2753"],"React Hook useEffect has missing dependencies: 'getSingleBatchPayslipEarnings', 'payslip_period', and 'single_payslip.empid'. Either include them or remove the dependency array.",["2766"],"'calc_Earning' is assigned a value but never used.","'update_PayslipEarning' is assigned a value but never used.","'add_PayslipEarning' is assigned a value but never used.","'delete_PayslipEarning' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipDeductions', 'payPeriod', and 'payPeriodEmpId'. Either include them or remove the dependency array.",["2767"],"'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'addPayslipEarning' is assigned a value but never used.","'updatePayslipEarning' is assigned a value but never used.","'deletePayslipEarning' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipEarnings', 'payPeriod', and 'payPeriodEmpId'. Either include them or remove the dependency array.",["2768"],"'update_Payslip' is assigned a value but never used.","'useDailyAllowancesContext' is defined but never used.","'selectYear' is assigned a value but never used.","'selectMonth' is assigned a value but never used.","'allowsPeriod' is assigned a value but never used.","'setAllowsPeriod' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'input', 'loginLevel.loginUser', 'loginLevel.loginUserId', 'loginLevel.perdiem_fee', 'loginLevel.reporting_to', 'loginLevel.siteallows_fee', and 'setInput'. Either include them or remove the dependency array.",["2769"],"'CardActionArea' is defined but never used.","'Typography' is defined but never used.","'MoreVertIcon' is defined but never used.","'EditIcon' is defined but never used.","'isLoad' is assigned a value but never used.","'setIsLoad' is assigned a value but never used.","'expenses_loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'expenses' and 'expensesdata'. Either include them or remove the dependency array.",["2770"],"'approve_Expense' is assigned a value but never used.","'getSingleBatchTraining' is assigned a value but never used.","'singlebatch_training' is assigned a value but never used.","'singlebatch_training_loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editEmployeeID' and 'setTrainingId'. Either include them or remove the dependency array.",["2771"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'setFamilyId'. Either include them or remove the dependency array.",["2772"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'setEducationId'. Either include them or remove the dependency array.",["2773"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'getSingleBatchTraining'. Either include them or remove the dependency array.",["2774"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchExperience'. Either include them or remove the dependency array.",["2775"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'getSingleBatchLeave'. Either include them or remove the dependency array.",["2776"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchEducation'. Either include them or remove the dependency array.",["2777"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchFamily'. Either include them or remove the dependency array.",["2778"],"'isEditing' is assigned a value but never used.","'reporting_to' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editEmployeeID' and 'getSingleEmployee'. Either include them or remove the dependency array.",["2779"],"'Route' is defined but never used.","'Redirect' is defined but never used.","'PayslipPeriods' is defined but never used.","'PayslipsPeriods' is defined but never used.","'useExpensesContext' is defined but never used.","React Hook useEffect has a missing dependency: 'loadExpenses'. Either include it or remove the dependency array.",["2780"],"'headEmployeesTableCells' is defined but never used.","'clsx' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'CardLayout3' is defined but never used.","'Copyright' is defined but never used.","'useStyles' is assigned a value but never used.","'ListSubheader' is defined but never used.","'Autocomplete' is defined but never used.","React Hook useEffect has missing dependencies: 'formdata', 'setLoadFormdata', and 'state'. Either include them or remove the dependency array. If 'setLoadFormdata' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["2781"],["2752"],["2753"],"'useDesignations' is defined but never used.","'departments' is assigned a value but never used.","'ArrowBackIcon' is defined but never used.","'FILTERSTRING' is assigned a value but never used.","'isLoadInput' is assigned a value but never used.","'setIsLoadInput' is assigned a value but never used.","'singlebatchdailyallowance' is assigned a value but never used.","'updateDailyAllowance' is assigned a value but never used.","'deleteDailyAllowance' is assigned a value but never used.","'loadPendingPayslips' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPayrun'. Either include it or remove the dependency array.",["2782"],"'payrunIdState' is defined but never used.","React Hook useEffect has missing dependencies: 'loadAllowances', 'loadDeductions', and 'loadEmployees'. Either include them or remove the dependency array.",["2783"],"'Alert' is defined but never used.","'updateExpenses' is assigned a value but never used.","'addExpenses' is assigned a value but never used.","'expensesdata' is assigned a value but never used.","'setExpensesdata' is assigned a value but never used.","'alertSuccess' is assigned a value but never used.","'setAlertSuccess' is assigned a value but never used.","'editEmployeeID' is assigned a value but never used.","'updateExpense' is assigned a value but never used.","'addExpense' is assigned a value but never used.","'deleteExpense' is assigned a value but never used.",["2784"],"'updateLeaves' is assigned a value but never used.","'addLeaves' is assigned a value but never used.",["2785"],"'leaves_loading' is assigned a value but never used.","'deleteLeave' is assigned a value but never used.","'loadLeaves' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editLeaveID' and 'setLeaveId'. Either include them or remove the dependency array.",["2786"],"'designations' is assigned a value but never used.","'deleteEmployee' is assigned a value but never used.","'loadDepartments' is assigned a value but never used.","'loadDesignations' is assigned a value but never used.","'handleDialogOpen' is assigned a value but never used.","'CardLayout' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'handleLeaveDialogOpen' is assigned a value but never used.","'handleExpenseDialogOpen' is assigned a value but never used.","'handlePayslipDialogOpen' is assigned a value but never used.","'handleDailyAllowancesDialogOpen' is assigned a value but never used.","'CardLayout2' is defined but never used.","'OnLeavesView' is defined but never used.","'WPExpiryView' is defined but never used.","'batchpayslips' is assigned a value but never used.","'PayslipTableViewStaff' is defined but never used.","'DailyAllowancesTableViewStaff' is defined but never used.","'OnLeavesViewStaff' is defined but never used.","'setEmployeeId' is assigned a value but never used.","'singleemployee' is assigned a value but never used.","'setSingleEmployeeId' is assigned a value but never used.","'loadPendingLeaves' is assigned a value but never used.","'loadPendingExpenses' is assigned a value but never used.","'CustomDialog' is defined but never used.","'LeaveTableAdmin' is defined but never used.","'ExpenseTableAdmin' is defined but never used.","'PayslipTableAdmin' is defined but never used.","'DailyAllowancesTableAdmin' is defined but never used.","'leavesdata' is assigned a value but never used.","'isLeaveDialogOpen' is assigned a value but never used.","'isExpenseDialogOpen' is assigned a value but never used.","'payslipsdata' is assigned a value but never used.","'isPayslipDialogOpen' is assigned a value but never used.","'dailyallowancesdata' is assigned a value but never used.","'isDailyAllowancesDialogOpen' is assigned a value but never used.","'loadUnpaidExpenses' is assigned a value but never used.","'loadAppExpenses' is assigned a value but never used.","'payrun' is assigned a value but never used.","'getPayrun' is assigned a value but never used.","'loadPendingDailyAllowances' is assigned a value but never used.","'loadUnpaidDailyAllows' is assigned a value but never used.","'deductions_loading' is assigned a value but never used.","'addDeduction' is assigned a value but never used.","'deleteDeduction' is assigned a value but never used.","'updateDeduction' is assigned a value but never used.","'update_employee_error' is assigned a value but never used.","'handleLeaveFormDialogOpen' is assigned a value but never used.","'handleLeaveFormAlertOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editEmployeeID', 'getSingleEmployee', 'loadDepartments', and 'loadDesignations'. Either include them or remove the dependency array.",["2787"],"'AddIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'CheckIcon' is defined but never used.","'SearchIcon' is defined but never used.","'LeaveForm' is defined but never used.","'AlertDialog' is defined but never used.","'isDialogOpen' is assigned a value but never used.","'isAlertOpen' is assigned a value but never used.","'getSingleLeave' is assigned a value but never used.","'setEditLeaveID' is assigned a value but never used.","'setIsLeaveEditingOn' is assigned a value but never used.","'setIsLeaveEditingOff' is assigned a value but never used.","'resetSingleLeave' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPendingLeaves'. Either include it or remove the dependency array.",["2788"],"'handleDialogClose' is assigned a value but never used.","'handleAlertOpen' is assigned a value but never used.","'handleAlertClose' is assigned a value but never used.","'handleOnDeleteConfirm' is assigned a value but never used.","'getSingleExpense' is assigned a value but never used.","'setEditExpenseID' is assigned a value but never used.","'setIsExpenseEditingOn' is assigned a value but never used.","'setIsExpenseEditingOff' is assigned a value but never used.","'resetSingleExpense' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPendingExpenses'. Either include it or remove the dependency array.",["2789"],"'MTableToolbar' is defined but never used.","'fetchDailyAllowancesSelector' is defined but never used.","'DailyAllowsDetlsTable' is defined but never used.","'allowsdata' is assigned a value but never used.","'setEmpID' is assigned a value but never used.","'singlebatch_dailyallowance' is assigned a value but never used.","'setEditDailyAllowanceID' is assigned a value but never used.","'setIsDailyAllowanceEditingOn' is assigned a value but never used.","'setIsDailyAllowanceEditingOff' is assigned a value but never used.","'resetSingleDailyAllowance' is assigned a value but never used.","'getSingleBatchDailyAllowance' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPendingDailyAllowances'. Either include it or remove the dependency array.",["2790"],"'handleExpenseFormDialogOpen' is assigned a value but never used.","'handleExpenseFormAlertOpen' is assigned a value but never used.","'Save_ExpenseData' is assigned a value but never used.","'setIsDialogOpen' is assigned a value but never used.","'singlebatch_dailyallowance_loading' is assigned a value but never used.","'payPeriodState' is defined but never used.","'setPayPeriodEmpId' is assigned a value but never used.",["2791"],["2752"],["2753"],"'MaterialTable' is defined but never used.","'fetchDepartmentsSelector' is defined but never used.","'columns' is assigned a value but never used.","'wpexpirydata' is assigned a value but never used.","'userdata' is assigned a value but never used.","'setUserdata' is assigned a value but never used.","'update_payrun_loading' is assigned a value but never used.","'Save_PayslipData' is assigned a value but never used.","'fetchDetails' is assigned a value but never used.","'leaves_url' is defined but never used.","'leaves_error' is assigned a value but never used.","'loadEmpLeaves' is assigned a value but never used.",["2792"],"'title' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadEmpDailyAllowances' and 'loginLevel.loginUserId'. Either include them or remove the dependency array.",["2793"],"'contents' is assigned a value but never used.","'expenses_error' is assigned a value but never used.","'loadEmpExpenses' is assigned a value but never used.",["2794"],"'payslips_error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadEmpPayslips' and 'loginLevel.loginUserId'. Either include them or remove the dependency array.",["2795"],"'addDays' is defined but never used.","'useAsync' is defined but never used.","'loadUsers' is assigned a value but never used.","'editLeaveID' is assigned a value but never used.","'getSingleBatchLeave' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadEmpLeaves' and 'loginLevel.loginUserId'. Either include them or remove the dependency array.",["2796"],"'withDefaultColorScheme' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","expectedInside","'EmployeeFormStaff' is defined but never used.","'setEditEmployeeID' is assigned a value but never used.","'setIsEditingOn' is assigned a value but never used.","'React' is defined but never used.","'toast' is assigned a value but never used.","'emp' is assigned a value but never used.","'setEmp' is assigned a value but never used.","'payslip_endmonthdate' is assigned a value but never used.","'add_Payslip' is assigned a value but never used.","'delete_Payslip' is assigned a value but never used.",["2797"],"'TrainingsTableStaff' is defined but never used.","'useLeavesContext' is defined but never used.","'setTrainingId' is assigned a value but never used.",["2798"],"'differenceInMonths' is defined but never used.","React Hook useEffect has a missing dependency: 'getBatchPayrun'. Either include it or remove the dependency array.",["2799"],"'usePayslipsContext' is defined but never used.","'headLeaveTableCells' is defined but never used.","'useRecoilState' is defined but never used.","'payrunState' is defined but never used.","'useEmployees' is defined but never used.","'total_allowances' is assigned a value but never used.","'total_deductions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"2800","fix":"2801"},{"desc":"2802","fix":"2803"},{"desc":"2804","fix":"2805"},{"desc":"2806","fix":"2807"},{"desc":"2808","fix":"2809"},{"desc":"2810","fix":"2811"},{"desc":"2812","fix":"2813"},{"desc":"2814","fix":"2815"},{"desc":"2816","fix":"2817"},{"desc":"2818","fix":"2819"},{"desc":"2820","fix":"2821"},{"desc":"2822","fix":"2823"},{"desc":"2824","fix":"2825"},{"desc":"2826","fix":"2827"},{"desc":"2828","fix":"2829"},{"desc":"2830","fix":"2831"},{"desc":"2832","fix":"2833"},{"desc":"2834","fix":"2835"},{"desc":"2836","fix":"2837"},{"desc":"2838","fix":"2839"},{"desc":"2840","fix":"2841"},{"desc":"2842","fix":"2843"},{"desc":"2844","fix":"2845"},{"desc":"2846","fix":"2847"},{"desc":"2848","fix":"2849"},{"desc":"2850","fix":"2851"},{"desc":"2852","fix":"2853"},{"desc":"2854","fix":"2855"},{"desc":"2856","fix":"2857"},{"desc":"2858","fix":"2859"},{"desc":"2810","fix":"2860"},{"desc":"2810","fix":"2861"},{"desc":"2862","fix":"2863"},{"desc":"2864","fix":"2865"},{"desc":"2866","fix":"2867"},{"desc":"2868","fix":"2869"},{"desc":"2870","fix":"2871"},{"desc":"2856","fix":"2872"},{"desc":"2810","fix":"2873"},{"desc":"2874","fix":"2875"},{"desc":"2810","fix":"2876"},{"desc":"2877","fix":"2878"},{"desc":"2879","fix":"2880"},{"desc":"2810","fix":"2881"},{"desc":"2810","fix":"2882"},{"desc":"2883","fix":"2884"},"Update the dependencies array to be: [loadPaybatch, payrun_loading]",{"range":"2885","text":"2886"},"Update the dependencies array to be: [getPayrun, loadEmployees, loadUnpaidDailyAllows, loadUnpaidExpenses]",{"range":"2887","text":"2888"},"Update the dependencies array to be: [getSingleBatchPayslip, loadPayitems, payslip_period]",{"range":"2889","text":"2890"},"Update the dependencies array to be: [loadEmployees]",{"range":"2891","text":"2892"},"Update the dependencies array to be: [allows_empid, allows_period, getSingleBatchDailyAllowsDetl]",{"range":"2893","text":"2894"},"Update the dependencies array to be: [loginLevel.loginUserId, setFilter]",{"range":"2895","text":"2896"},"Update the dependencies array to be: [editPayslipID, getSinglePayslip]",{"range":"2897","text":"2898"},"Update the dependencies array to be: [handleCalcTotals, isCalc]",{"range":"2899","text":"2900"},"Update the dependencies array to be: [dailyallowsdetls, handle_calc]",{"range":"2901","text":"2902"},"Update the dependencies array to be: [getSingleEmployee, loadDepartments, loadDesignations, loginLevel.loginUserId, setEditEmployeeID]",{"range":"2903","text":"2904"},"Update the dependencies array to be: [editEmployeeID, setExperienceId]",{"range":"2905","text":"2906"},"Update the dependencies array to be: [getSingleBatchPayslipDeductions, payslip_period, single_payslip.empid]",{"range":"2907","text":"2908"},"Update the dependencies array to be: [getSingleBatchPayslipEarnings, payslip_period, single_payslip.empid]",{"range":"2909","text":"2910"},"Update the dependencies array to be: [getSingleBatchPayslipDeductions, payPeriod, payPeriodEmpId]",{"range":"2911","text":"2912"},"Update the dependencies array to be: [getSingleBatchPayslipEarnings, payPeriod, payPeriodEmpId]",{"range":"2913","text":"2914"},"Update the dependencies array to be: [input, loginLevel.loginUser, loginLevel.loginUserId, loginLevel.perdiem_fee, loginLevel.reporting_to, loginLevel.siteallows_fee, setInput]",{"range":"2915","text":"2916"},"Update the dependencies array to be: [expenses, expensesdata]",{"range":"2917","text":"2918"},"Update the dependencies array to be: [editEmployeeID, setTrainingId]",{"range":"2919","text":"2920"},"Update the dependencies array to be: [editEmployeeID, setFamilyId]",{"range":"2921","text":"2922"},"Update the dependencies array to be: [editEmployeeID, setEducationId]",{"range":"2923","text":"2924"},"Update the dependencies array to be: [editEmployeeID, getSingleBatchTraining]",{"range":"2925","text":"2926"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchExperience]",{"range":"2927","text":"2928"},"Update the dependencies array to be: [editEmployeeID, getSingleBatchLeave]",{"range":"2929","text":"2930"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchEducation]",{"range":"2931","text":"2932"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchFamily]",{"range":"2933","text":"2934"},"Update the dependencies array to be: [editEmployeeID, getSingleEmployee]",{"range":"2935","text":"2936"},"Update the dependencies array to be: [loadExpenses]",{"range":"2937","text":"2938"},"Update the dependencies array to be: [formdata, loadFormdata, setLoadFormdata, state]",{"range":"2939","text":"2940"},"Update the dependencies array to be: [getPayrun]",{"range":"2941","text":"2942"},"Update the dependencies array to be: [loadAllowances, loadDeductions, loadEmployees]",{"range":"2943","text":"2944"},{"range":"2945","text":"2896"},{"range":"2946","text":"2896"},"Update the dependencies array to be: [editLeaveID, setLeaveId]",{"range":"2947","text":"2948"},"Update the dependencies array to be: [editEmployeeID, getSingleEmployee, loadDepartments, loadDesignations]",{"range":"2949","text":"2950"},"Update the dependencies array to be: [loadPendingLeaves]",{"range":"2951","text":"2952"},"Update the dependencies array to be: [loadPendingExpenses]",{"range":"2953","text":"2954"},"Update the dependencies array to be: [loadPendingDailyAllowances]",{"range":"2955","text":"2956"},{"range":"2957","text":"2942"},{"range":"2958","text":"2896"},"Update the dependencies array to be: [loadEmpDailyAllowances, loginLevel.loginUserId]",{"range":"2959","text":"2960"},{"range":"2961","text":"2896"},"Update the dependencies array to be: [loadEmpPayslips, loginLevel.loginUserId]",{"range":"2962","text":"2963"},"Update the dependencies array to be: [loadEmpLeaves, loginLevel.loginUserId]",{"range":"2964","text":"2965"},{"range":"2966","text":"2896"},{"range":"2967","text":"2896"},"Update the dependencies array to be: [getBatchPayrun]",{"range":"2968","text":"2969"},[2478,2492],"[loadPaybatch, payrun_loading]",[7892,7894],"[getPayrun, loadEmployees, loadUnpaidDailyAllows, loadUnpaidExpenses]",[2198,2200],"[getSingleBatchPayslip, loadPayitems, payslip_period]",[1318,1320],"[loadEmployees]",[2833,2835],"[allows_empid, allows_period, getSingleBatchDailyAllowsDetl]",[5682,5684],"[loginLevel.loginUserId, setFilter]",[3351,3353],"[editPayslipID, getSinglePayslip]",[4358,4366],"[handleCalcTotals, isCalc]",[4071,4089],"[dailyallowsdetls, handle_calc]",[2946,2948],"[getSingleEmployee, loadDepartments, loadDesignations, loginLevel.loginUserId, setEditEmployeeID]",[1906,1908],"[editEmployeeID, setExperienceId]",[2234,2236],"[getSingleBatchPayslipDeductions, payslip_period, single_payslip.empid]",[2130,2132],"[getSingleBatchPayslipEarnings, payslip_period, single_payslip.empid]",[1539,1541],"[getSingleBatchPayslipDeductions, payPeriod, payPeriodEmpId]",[1538,1540],"[getSingleBatchPayslipEarnings, payPeriod, payPeriodEmpId]",[2477,2479],"[input, loginLevel.loginUser, loginLevel.loginUserId, loginLevel.perdiem_fee, loginLevel.reporting_to, loginLevel.siteallows_fee, setInput]",[2641,2643],"[expenses, expensesdata]",[2567,2569],"[editEmployeeID, setTrainingId]",[2414,2416],"[editEmployeeID, setFamilyId]",[1886,1888],"[editEmployeeID, setEducationId]",[1185,1187],"[editEmployeeID, getSingleBatchTraining]",[1148,1150],"[editEmployeeID, loadSingleBatchExperience]",[1106,1108],"[editEmployeeID, getSingleBatchLeave]",[956,958],"[editEmployeeID, loadSingleBatchEducation]",[967,969],"[editEmployeeID, loadSingleBatchFamily]",[2583,2585],"[editEmployeeID, getSingleEmployee]",[794,796],"[loadExpenses]",[2054,2068],"[formdata, loadFormdata, setLoadFormdata, state]",[3003,3005],"[getPayrun]",[1614,1616],"[loadAllowances, loadDeductions, loadEmployees]",[3354,3356],[3337,3339],[2927,2929],"[editLeaveID, setLeaveId]",[2678,2680],"[editEmployeeID, getSingleEmployee, loadDepartments, loadDesignations]",[2338,2340],"[loadPendingLeaves]",[1731,1733],"[loadPendingExpenses]",[2491,2493],"[loadPendingDailyAllowances]",[1519,1521],[1771,1773],[2358,2360],"[loadEmpDailyAllowances, loginLevel.loginUserId]",[1976,1978],[1497,1499],"[loadEmpPayslips, loginLevel.loginUserId]",[2695,2697],"[loadEmpLeaves, loginLevel.loginUserId]",[3536,3538],[1108,1110],[1596,1598],"[getBatchPayrun]"]