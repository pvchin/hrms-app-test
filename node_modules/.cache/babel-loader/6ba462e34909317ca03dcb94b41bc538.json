{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState}from\"react\";import{useQuery,useQueryClient}from\"react-query\";import{queryKeys}from\"../react-query/constants\";import{clearStoredUser,getStoredUser,setStoredUser}from\"../user-storage\";function getUser(_x){return _getUser.apply(this,arguments);}function _getUser(){_getUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(user){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(user){_context.next=2;break;}return _context.abrupt(\"return\",null);case 2:return _context.abrupt(\"return\",user);case 3:case\"end\":return _context.stop();}}},_callee);}));return _getUser.apply(this,arguments);}export function useUser(){var _useState=useState(getStoredUser()||null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var queryClient=useQueryClient();useQuery(queryKeys.user,function(){return getUser(user);},{enabled:!!user,onSuccess:function onSuccess(data){return setUser(data);}});// meant to be called from useAuth\nfunction updateUser(newUser){// set user in state\nsetUser(newUser);// update user in localstorage\nsetStoredUser(newUser);// TODO: pre-populate user profile in React Query client\n}// meant to be called from useAuth\nfunction clearUser(){// update state\nsetUser(null);// remove from localstorage\nclearStoredUser();queryClient.setQueryData(queryKeys.user,null);queryClient.removeQueries([queryKeys.user]);}return{user:user,updateUser:updateUser,clearUser:clearUser};}","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/user/useUser.js"],"names":["useState","useQuery","useQueryClient","queryKeys","clearStoredUser","getStoredUser","setStoredUser","getUser","user","useUser","setUser","queryClient","enabled","onSuccess","data","updateUser","newUser","clearUser","setQueryData","removeQueries"],"mappings":"udAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,QAAT,CAAmBC,cAAnB,KAAyC,aAAzC,CAEA,OAASC,SAAT,KAA0B,0BAA1B,CACA,OAASC,eAAT,CAA0BC,aAA1B,CAAyCC,aAAzC,KAA8D,iBAA9D,C,QAEeC,CAAAA,O,iIAAf,iBAAuBC,IAAvB,qHACOA,IADP,yDACoB,IADpB,yCAESA,IAFT,wD,0CAiBA,MAAO,SAASC,CAAAA,OAAT,EAAmB,eACAT,QAAQ,CAACK,aAAa,IAAM,IAApB,CADR,wCACjBG,IADiB,eACXE,OADW,eAExB,GAAMC,CAAAA,WAAW,CAAGT,cAAc,EAAlC,CAEAD,QAAQ,CAACE,SAAS,CAACK,IAAX,CAAiB,iBAAMD,CAAAA,OAAO,CAACC,IAAD,CAAb,EAAjB,CAAsC,CAC5CI,OAAO,CAAE,CAAC,CAACJ,IADiC,CAE5CK,SAAS,CAAE,mBAACC,IAAD,QAAUJ,CAAAA,OAAO,CAACI,IAAD,CAAjB,EAFiC,CAAtC,CAAR,CAKA;AACA,QAASC,CAAAA,UAAT,CAAoBC,OAApB,CAA6B,CAC3B;AACAN,OAAO,CAACM,OAAD,CAAP,CAEA;AACAV,aAAa,CAACU,OAAD,CAAb,CAEA;AACD,CAED;AACA,QAASC,CAAAA,SAAT,EAAqB,CACnB;AACAP,OAAO,CAAC,IAAD,CAAP,CAEA;AACAN,eAAe,GAEfO,WAAW,CAACO,YAAZ,CAAyBf,SAAS,CAACK,IAAnC,CAAyC,IAAzC,EAEAG,WAAW,CAACQ,aAAZ,CAA0B,CAAChB,SAAS,CAACK,IAAX,CAA1B,EACD,CAED,MAAO,CAAEA,IAAI,CAAJA,IAAF,CAAQO,UAAU,CAAVA,UAAR,CAAoBE,SAAS,CAATA,SAApB,CAAP,CACD","sourcesContent":["import { useState } from \"react\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\n\r\nimport { queryKeys } from \"../react-query/constants\";\r\nimport { clearStoredUser, getStoredUser, setStoredUser } from \"../user-storage\";\r\n\r\nasync function getUser(user) {\r\n  if (!user) return null;\r\n  return user;\r\n  //   const data = employees\r\n  //     .filter((f) => f.email === user)\r\n  //     .map((r) => {\r\n  //       return { ...r };\r\n  //     });\r\n  //return user;\r\n  //   if (!user) return null;\r\n  //   const { data } = await axiosInstance.get(`/user/${user.id}`, {\r\n  //     headers: getJWTHeader(user),\r\n  //   });\r\n\r\n  //   return data.user;\r\n}\r\n\r\nexport function useUser() {\r\n  const [user, setUser] = useState(getStoredUser() || null);\r\n  const queryClient = useQueryClient();\r\n\r\n  useQuery(queryKeys.user, () => getUser(user), {\r\n    enabled: !!user,\r\n    onSuccess: (data) => setUser(data),\r\n  });\r\n\r\n  // meant to be called from useAuth\r\n  function updateUser(newUser) {\r\n    // set user in state\r\n    setUser(newUser);\r\n\r\n    // update user in localstorage\r\n    setStoredUser(newUser);\r\n\r\n    // TODO: pre-populate user profile in React Query client\r\n  }\r\n\r\n  // meant to be called from useAuth\r\n  function clearUser() {\r\n    // update state\r\n    setUser(null);\r\n\r\n    // remove from localstorage\r\n    clearStoredUser();\r\n\r\n    queryClient.setQueryData(queryKeys.user, null);\r\n\r\n    queryClient.removeQueries([queryKeys.user]);\r\n  }\r\n\r\n  return { user, updateUser, clearUser };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}