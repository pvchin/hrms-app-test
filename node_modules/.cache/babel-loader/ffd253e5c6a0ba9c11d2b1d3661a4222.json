{"ast":null,"code":"import _objectSpread from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect}from\"react\";import MaterialTable,{MTableToolbar}from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import{TextField}from\"@material-ui/core\";import{useEmployeesContext}from\"../context/employees_context\";import{useTablesContext}from\"../context/tables_context\";import{useExperiences}from\"./experiences/useExperiences\";import{useUpdateExperiences}from\"./experiences/useUpdateExperiences\";import{useAddExperiences}from\"./experiences/useAddExperiences\";import{useDeleteExperiences}from\"./experiences/useDeleteExperiences\";import{jsx as _jsx}from\"react/jsx-runtime\";var columns=[{title:\"Company\",field:\"company\"},{title:\"Location\",field:\"location\"},{title:\"Position\",field:\"position\"},{title:\"From Date\",field:\"from_date\",type:\"date\",editComponent:function editComponent(props){return/*#__PURE__*/_jsx(TextField//defaultValue={props.value || new Date()}\n,{onChange:function onChange(e){return props.onChange(e.target.value);},type:\"date\"});}},{title:\"To Date\",field:\"to_date\",type:\"date\",editComponent:function editComponent(props){return/*#__PURE__*/_jsx(TextField//defaultValue={props.value || new Date()}\n,{onChange:function onChange(e){return props.onChange(e.target.value);},type:\"date\"});}},{title:\"Remark\",field:\"remark\"}];export default function Emp_Experiences(_ref){var experiencedata=_ref.experiencedata,setExperiencedata=_ref.setExperiencedata,handleDialogClose=_ref.handleDialogClose;var classes=useStyles();var _useExperiences=useExperiences(),experiences=_useExperiences.experiences,setExperienceId=_useExperiences.setExperienceId;var updateExperiences=useUpdateExperiences();var addExperiences=useAddExperiences();var deleteExperiences=useDeleteExperiences();var _useEmployeesContext=useEmployeesContext(),editEmployeeID=_useEmployeesContext.editEmployeeID;useEffect(function(){setExperienceId(editEmployeeID);},[]);var update_Experience=function update_Experience(data){var id=data.id,rec_id=data.rec_id,tableData=data.tableData,fields=_objectWithoutProperties(data,[\"id\",\"rec_id\",\"tableData\"]);updateExperiences(_objectSpread({id:id},fields));};var add_Experience=function add_Experience(data){addExperiences(_objectSpread(_objectSpread({},data),{},{empid:editEmployeeID}));};var delete_Experience=function delete_Experience(data){var id=data.id;deleteExperiences(id);};return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:experiences,title:\"Experience\",editable:{onRowAdd:function onRowAdd(newData){return new Promise(function(resolve,reject){setTimeout(function(){add_Experience(newData);resolve();},1000);});},onRowUpdate:function onRowUpdate(newData,oldData){return new Promise(function(resolve,reject){setTimeout(function(){update_Experience(newData);resolve();},1000);});},onRowDelete:function onRowDelete(oldData){return new Promise(function(resolve,reject){setTimeout(function(){delete_Experience(oldData);resolve();},1000);});}},options:{filtering:true,headerStyle:{backgroundColor:\"orange\",color:\"primary\"},showTitle:true},components:{Toolbar:function Toolbar(props){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(MTableToolbar,_objectSpread({},props))});}}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/EmpExperiences.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","makeStyles","TextField","useEmployeesContext","useTablesContext","useExperiences","useUpdateExperiences","useAddExperiences","useDeleteExperiences","columns","title","field","type","editComponent","props","e","onChange","target","value","Emp_Experiences","experiencedata","setExperiencedata","handleDialogClose","classes","useStyles","experiences","setExperienceId","updateExperiences","addExperiences","deleteExperiences","editEmployeeID","update_Experience","data","id","rec_id","tableData","fields","add_Experience","empid","delete_Experience","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useExperiences } from \"./experiences/useExperiences\";\r\nimport { useUpdateExperiences } from \"./experiences/useUpdateExperiences\";\r\nimport { useAddExperiences } from \"./experiences/useAddExperiences\";\r\nimport { useDeleteExperiences } from \"./experiences/useDeleteExperiences\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n  },\r\n  {\r\n    title: \"Position\",\r\n    field: \"position\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"Remark\", field: \"remark\" },\r\n];\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { experiences, setExperienceId } = useExperiences();\r\n  const updateExperiences = useUpdateExperiences();\r\n  const addExperiences = useAddExperiences();\r\n  const deleteExperiences = useDeleteExperiences();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    setExperienceId(editEmployeeID);\r\n  }, []);\r\n\r\n  const update_Experience = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateExperiences({ id, ...fields });\r\n  };\r\n\r\n  const add_Experience = (data) => {\r\n    addExperiences({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Experience = (data) => {\r\n    const { id } = data;\r\n    deleteExperiences(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={experiences}\r\n          title=\"Experience\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Experience(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}