{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\PayslipTableViewAdmin Copy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { payPeriodState, payPeriodEndMonthState, payPeriodEmpIdState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTERSTRING = \"Verified\";\nconst columns = [{\n  title: \"Batch\",\n  field: \"payrun\",\n  editable: \"never\"\n}, {\n  title: \"Period\",\n  field: \"period\",\n  editable: \"never\"\n}, {\n  title: \"PayDate\",\n  field: \"pay_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Payroll\",\n  field: \"totalpayroll\",\n  type: \"currency\",\n  editable: \"never\"\n}, // { title: \"Bank Name\", field: \"bank_name\" },\n// { title: \"Bank AC No\", field: \"bank_accno\" },\n{\n  title: \"Status\",\n  field: \"status\",\n  editable: \"never\"\n}];\nexport default function PayslipTableVIew() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\n  const {\n    batchpayrun,\n    getBatchPayrun,\n    batchpayrun_loading,\n    batchpayrun_error,\n    loadPendingPayslips\n  } = usePayslipsContext(); //const { loadEmployees, employees } = useEmployeesContext();\n\n  useEffect(() => {\n    getBatchPayrun(FILTERSTRING);\n  }, []);\n\n  if (batchpayrun_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading.....Payslips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (batchpayrun_error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internet connection problem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: batchpayrun,\n        title: \"Payslips\",\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayslipTableVIew, \"GafcAVkbQEtEkSrqcg62O7G0Su4=\", false, function () {\n  return [useHistory, useStyles, useSetRecoilState, usePayslipsContext];\n});\n\n_c = PayslipTableVIew;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipTableVIew\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/PayslipTableViewAdmin Copy.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","makeStyles","useHistory","Link","useSetRecoilState","useRecoilValue","payPeriodState","payPeriodEndMonthState","payPeriodEmpIdState","usePayslipsContext","useEmployeesContext","FILTERSTRING","columns","title","field","editable","type","dateSetting","locale","PayslipTableVIew","history","classes","useStyles","setPayPeriodEmpId","batchpayrun","getBatchPayrun","batchpayrun_loading","batchpayrun_error","loadPendingPayslips","root","maxWidth","paddingTop","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Verified\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"PayDate\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIew() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    batchpayrun,\r\n    getBatchPayrun,\r\n    batchpayrun_loading,\r\n    batchpayrun_error,\r\n    loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    getBatchPayrun(FILTERSTRING);\r\n  }, []);\r\n\r\n  if (batchpayrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (batchpayrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}