{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\UserAccessTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Department\",\n  field: \"department\"\n}, {\n  title: \"Designation\",\n  field: \"designation\"\n}, {\n  title: \"Role\",\n  field: \"role\"\n}];\nexport default function UserAccessTable() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    employees\n  } = useEmployees();\n  const updateEmployees = useUpdateEmployees();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: employee,\n        title: \"User Access Table\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              //setFamilydata([...familydata, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...familydata];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData; //setFamilydata([...dataUpdate]);\n\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...familydata];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setFamilydata([...dataDelete]);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Save_FamilyData,\n                children: [\"Update \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        } // localization={{\n        //   body: {\n        //     dateTimePickerLocalization: enGB,\n        //   },\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserAccessTable, \"tT6Ih/clQP4iGS87wQ8drh+gklU=\", false, function () {\n  return [useStyles, useEmployees, useUpdateEmployees, useEmployeesContext];\n});\n\n_c = UserAccessTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAccessTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/UserAccessTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","Button","Icon","TextField","MenuItem","useEmployeesContext","useTablesContext","useEmployees","useUpdateEmployees","columns","title","field","UserAccessTable","classes","useStyles","employees","updateEmployees","editEmployeeID","root","maxWidth","paddingTop","employee","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","familydata","index","tableData","id","onRowDelete","dataDelete","splice","setFamilydata","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","props","padding","button","Save_FamilyData","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useEmployees} from \"./employees/useEmployees\"\r\nimport { useUpdateEmployees} from \"./employees/useUpdateEmployees\"\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n   {\r\n    title: \"Department\",\r\n    field: \"department\",\r\n  },\r\n    {\r\n    title: \"Designation\",\r\n    field: \"designation\",\r\n  },\r\n   {\r\n    title: \"Role\",\r\n    field: \"role\",\r\n  },\r\n\r\n];\r\n\r\n\r\n\r\nexport default function UserAccessTable() {\r\n  const classes = useStyles();\r\n  const { employees } = useEmployees()\r\n  const updateEmployees = useUpdateEmployees()\r\n  const { editEmployeeID } = useEmployeesContext();\r\n \r\n    \r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={employee}\r\n          title=\"User Access Table\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  //setFamilydata([...familydata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setFamilydata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setFamilydata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_FamilyData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n          // localization={{\r\n          //   body: {\r\n          //     dateTimePickerLocalization: enGB,\r\n          //   },\r\n          // }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}