{"ast":null,"code":"import _objectSpread from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect}from\"react\";import MaterialTable,{MTableToolbar}from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import{TextField,Button,MenuItem,Icon}from\"@material-ui/core\";import AddIcon from\"@material-ui/icons/Add\";import EditIcon from\"@material-ui/icons/Edit\";import DeleteIcon from\"@material-ui/icons/Delete\";import CheckIcon from\"@material-ui/icons/Check\";import SearchIcon from\"@material-ui/icons/Search\";import BuildOutlinedIcon from\"@material-ui/icons/BuildOutlined\";import{useHistory,Link}from\"react-router-dom\";import{useSetRecoilState,useRecoilValue}from\"recoil\";import{payPeriodEmpIdState}from\"./data/atomdata\";import{usePayslipsContext}from\"../context/payslips_context\";//import { useEmployeesContext } from \"../context/employees_context\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[{title:\"Batch\",field:\"payrun\",editable:\"never\"},{title:\"Period\",field:\"period\",editable:\"never\"},{title:\"Pay Date\",field:\"pay_date\",type:\"date\",dateSetting:{locale:\"en-GB\"},editable:\"never\"},{title:\"Wages\",field:\"totalwages\",type:\"currency\",editable:\"never\"},{title:\"TAP Amount\",field:\"totaltap\",type:\"currency\",editable:\"never\"},{title:\"SCP Amount\",field:\"totalscp\",type:\"currency\",editable:\"never\"},{title:\"Earnings\",field:\"totalallows\",type:\"currency\",editable:\"never\"},{title:\"Deductions\",field:\"totaldeducts\",type:\"currency\",editable:\"never\"},{title:\"Total Payroll\",field:\"totalpayroll\",type:\"currency\",editable:\"never\"},// { title: \"Bank Name\", field: \"bank_name\" },\n// { title: \"Bank AC No\", field: \"bank_accno\" },\n{title:\"Status\",field:\"status\",editable:\"never\",cellStyle:{width:50,maxWidth:50},editComponent:function editComponent(props){return/*#__PURE__*/_jsxs(TextField//defaultValue={props.value || null}\n,{onChange:function onChange(e){return props.onChange(e.target.value);},style:{width:100},value:props.value,select:true,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Approve\",children:\"Approve\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Reject\",children:\"Reject\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Cancel\",children:\"Cancel\"})]});}}];export default function PayslipTableAdmin(_ref){var payslipsdata=_ref.payslipsdata,setPayslipsdata=_ref.setPayslipsdata,handleDialogClose=_ref.handleDialogClose;var history=useHistory();var classes=useStyles();var setPayPeriodEmpId=useSetRecoilState(payPeriodEmpIdState);var _usePayslipsContext=usePayslipsContext(),updatePayrun=_usePayslipsContext.updatePayrun,batchpayrun=_usePayslipsContext.batchpayrun,update_payrun_loading=_usePayslipsContext.update_payrun_loading,update_payrun_error=_usePayslipsContext.update_payrun_error;var Save_PayslipData=function Save_PayslipData(){payslipsdata.forEach(function(data){var id=data.id;if(id){var _id=data.id,rec_id=data.rec_id,tableData=data.tableData,fields=_objectWithoutProperties(data,[\"id\",\"rec_id\",\"tableData\"]);updatePayrun(_objectSpread({id:_id},fields));}});handleDialogClose();};var Approve_PayslipData=function Approve_PayslipData(){batchpayrun.forEach(function(rec){if(rec.tableData.checked){updatePayrun({id:rec.id,status:\"Approve\"});if(!update_payrun_error){var recdata=batchpayrun.filter(function(r){return r.id===rec.id;});recdata[0].status=\"Approve\";}}});batchpayrun.forEach(function(d){if(d.tableData)d.tableData.checked=false;});};var Reject_PayslipData=function Reject_PayslipData(){batchpayrun.forEach(function(rec){if(rec.tableData.checked){updatePayrun({id:rec.id,status:\"Reject\"});//update leavesdata\nif(!update_payrun_error){var recdata=batchpayrun.filter(function(r){return r.id===rec.id;});recdata[0].status=\"Reject\";}}});batchpayrun.forEach(function(d){if(d.tableData)d.tableData.checked=false;});};return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:batchpayrun,title:\"Payslips\",icons:{Add:function Add(props){return/*#__PURE__*/_jsx(AddIcon,{});},Edit:function Edit(props){return/*#__PURE__*/_jsx(EditIcon,{});},Delete:function Delete(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Clear:function Clear(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Check:function Check(props){return/*#__PURE__*/_jsx(CheckIcon,{});},Search:function Search(props){return/*#__PURE__*/_jsx(SearchIcon,{});},ResetSearch:function ResetSearch(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Build:function Build(props){return/*#__PURE__*/_jsx(BuildOutlinedIcon,{});}}// editable={{\n//   onRowUpdate: (newData, oldData) =>\n//     new Promise((resolve, reject) => {\n//       setTimeout(() => {\n//         const dataUpdate = [...payslipsdata];\n//         const index = oldData.tableData.id;\n//         dataUpdate[index] = newData;\n//         setPayslipsdata([...dataUpdate]);\n//         //approve_Expense(newData);\n//         resolve();\n//       }, 1000);\n//     }),\n// }}\n,options:{filtering:true,selection:true,exportButton:true,headerStyle:{backgroundColor:\"orange\",color:\"#FFF\"},showTitle:true},components:{Toolbar:function Toolbar(props){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MTableToolbar,_objectSpread({},props)),/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"5px 10px\"},children:[/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",color:\"secondary\",className:classes.button,onClick:Approve_PayslipData,children:[\"Approve \",/*#__PURE__*/_jsx(Icon,{className:classes.rightIcon,children:\"send\"})]}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",color:\"secondary\",className:classes.button,onClick:Reject_PayslipData,children:[\"Reject \",/*#__PURE__*/_jsx(Icon,{className:classes.rightIcon,children:\"send\"})]})]})]});}}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0},button:{margin:theme.spacing(1)}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/PayslipTableAdmin.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","makeStyles","TextField","Button","MenuItem","Icon","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","BuildOutlinedIcon","useHistory","Link","useSetRecoilState","useRecoilValue","payPeriodEmpIdState","usePayslipsContext","columns","title","field","editable","type","dateSetting","locale","cellStyle","width","maxWidth","editComponent","props","e","onChange","target","value","PayslipTableAdmin","payslipsdata","setPayslipsdata","handleDialogClose","history","classes","useStyles","setPayPeriodEmpId","updatePayrun","batchpayrun","update_payrun_loading","update_payrun_error","Save_PayslipData","forEach","data","id","rec_id","tableData","fields","Approve_PayslipData","rec","checked","status","recdata","filter","r","d","Reject_PayslipData","root","paddingTop","Add","Edit","Delete","Clear","Check","Search","ResetSearch","Build","filtering","selection","exportButton","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme","margin","spacing"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, MenuItem, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payPeriodEmpIdState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"Pay Date\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Wages\",\r\n    field: \"totalwages\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"totaltap\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"totalscp\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Earnings\",\r\n    field: \"totalallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"totaldeducts\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Total Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function PayslipTableAdmin({\r\n  payslipsdata,\r\n  setPayslipsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { updatePayrun, batchpayrun, update_payrun_loading, update_payrun_error } = usePayslipsContext();\r\n\r\n  const Save_PayslipData = () => {\r\n    payslipsdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayrun({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_PayslipData = () => {\r\n    batchpayrun.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updatePayrun({ id: rec.id, status: \"Approve\" });\r\n\r\n        if (!update_payrun_error) {\r\n          const recdata = batchpayrun.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approve\";\r\n        }\r\n      }\r\n    });\r\n    batchpayrun.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_PayslipData = () => {\r\n    batchpayrun.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updatePayrun({ id: rec.id, status: \"Reject\" });\r\n        //update leavesdata\r\n        if (!update_payrun_error) {\r\n          const recdata = batchpayrun.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Reject\";\r\n        }\r\n      }\r\n    });\r\n    batchpayrun.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...payslipsdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setPayslipsdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            exportButton: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_PayslipData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_PayslipData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_PayslipData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}