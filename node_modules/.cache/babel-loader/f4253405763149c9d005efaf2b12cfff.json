{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\AllEmployeesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialog\";\nimport EmployeeView from \"./EmployeeView\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useDepartments } from \"./departments/useDepartments\";\nimport { useDesignations } from \"./designations/useDesignations\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"IC No\",\n  field: \"ic_no\"\n}, {\n  title: \"Gender\",\n  field: \"gender\"\n}, {\n  title: \"Age\",\n  field: \"age\",\n  type: \"numeric\"\n}, {\n  title: \"Email\",\n  field: \"email\"\n}];\nexport default function AllEmployeesTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    designations\n  } = useDesignations();\n  const {\n    departments\n  } = useDepartments();\n  const {\n    employees\n  } = useEmployees();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    editEmployeeID,\n    employees_loading,\n    deleteEmployee,\n    //loadEmployees,\n    setEditEmployeeID,\n    setIsEditingOn,\n    setIsEditingOff,\n    resetSingleEmployee,\n    resetEmployees,\n    getSingleEmployee\n  } = useEmployeesContext();\n  const {\n    loadDepartments,\n    loadDesignations,\n    resetTables\n  } = useTablesContext(); // useEffect(() => {\n  //   resetEmployees();\n  //   loadEmployees();\n  // }, []);\n\n  const update_Employee = async data => {\n    const {\n      id\n    } = data;\n    resetTables();\n    resetSingleEmployee();\n    resetEmployees();\n    setEditEmployeeID(id);\n    setIsEditingOn();\n    getSingleEmployee(id); //handleDialogOpen();\n\n    history.push(\"/singleemployee\");\n  };\n\n  const add_Employee = async data => {\n    resetSingleEmployee();\n    setEditEmployeeID(\"\");\n    setIsEditingOff(); //handleDialogOpen();\n\n    history.push(\"/singleemployee\");\n  };\n\n  const delete_Employee = data => {\n    const {\n      id\n    } = data;\n    setEditEmployeeID(id);\n    handleAlertOpen(); //deleteEmployee(id);\n    //loadEmployees();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false); //loadEmployees();\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editEmployeeID;\n    deleteEmployee(id); //loadEmployees();\n  };\n\n  if (employees_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }, this);\n  } else {\n    console.log(employees);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: employees,\n        title: \"Employees Listing\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }, this)\n        },\n        actions: [{\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Employee(rowData);\n          }\n        }, {\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Employee(rowData);\n          }\n        }, {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Employee(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"primary\",\n            color: \"secondary\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscreen: true,\n        isFullwidth: true,\n        children: /*#__PURE__*/_jsxDEV(EmployeeView, {\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n        handleClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Employee\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllEmployeesTable, \"aZHy1Uak3yW9cDF3gMW5tnQIG+Q=\", false, function () {\n  return [useHistory, useStyles, useDesignations, useDepartments, useEmployees, useEmployeesContext, useTablesContext];\n});\n\n_c = AllEmployeesTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"AllEmployeesTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/AllEmployeesTable.js"],"names":["React","useState","useEffect","MaterialTable","useHistory","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","CustomDialog","AlertDialog","EmployeeView","useEmployeesContext","useTablesContext","useDepartments","useDesignations","useEmployees","useDeleteEmployees","columns","title","field","type","AllEmployeesTable","history","classes","useStyles","designations","departments","employees","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","editEmployeeID","employees_loading","deleteEmployee","setEditEmployeeID","setIsEditingOn","setIsEditingOff","resetSingleEmployee","resetEmployees","getSingleEmployee","loadDepartments","loadDesignations","resetTables","update_Employee","data","id","push","add_Employee","delete_Employee","handleAlertOpen","handleDialogOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","console","log","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","icon","tooltip","onClick","event","rowData","isFreeAction","filtering","headerStyle","backgroundColor","color","showTitle","theme","padding","spacing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport EmployeeView from \"./EmployeeView\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"IC No\", field: \"ic_no\" },\r\n  { title: \"Gender\", field: \"gender\" },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n  { title: \"Email\", field: \"email\" },\r\n];\r\n\r\nexport default function AllEmployeesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    employees_loading,\r\n    deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  const { loadDepartments, loadDesignations, resetTables } = useTablesContext();\r\n\r\n  // useEffect(() => {\r\n  //   resetEmployees();\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  const update_Employee = async (data) => {\r\n    const { id } = data;\r\n    resetTables();\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    getSingleEmployee(id);\r\n    //handleDialogOpen();\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const add_Employee = async (data) => {\r\n    resetSingleEmployee();\r\n    setEditEmployeeID(\"\");\r\n    setIsEditingOff();\r\n    //handleDialogOpen();\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const delete_Employee = (data) => {\r\n    const { id } = data;\r\n    setEditEmployeeID(id);\r\n    handleAlertOpen();\r\n    //deleteEmployee(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editEmployeeID;\r\n    deleteEmployee(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  if (employees_loading) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    console.log(employees);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={employees}\r\n          title=\"Employees Listing\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Employee(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"primary\",\r\n              color: \"secondary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={true}\r\n        >\r\n          <EmployeeView handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Employee\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}