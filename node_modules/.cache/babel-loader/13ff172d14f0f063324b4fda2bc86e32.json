{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\EmpTrainings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Icon, TextField } from \"@material-ui/core\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTrainingsContext } from \"../context/trainings_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Institute\",\n  field: \"institute\"\n}, {\n  title: \"Course\",\n  field: \"course\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || new Date()}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || new Date()}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"Expiry Date\",\n  field: \"expiry_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || new Date()}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this)\n}];\nexport default function Emp_Training({\n  trainingdata,\n  setTrainingdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    getSingleBatchTraining,\n    singlebatch_training,\n    addTraining,\n    deleteTraining,\n    updateTraining,\n    singlebatch_training_loading\n  } = useTrainingsContext();\n  useEffect(() => {}, [trainingdata]);\n\n  const Save_TrainingData = () => {\n    //console.log(trainingdata);\n    // delete unwanted data\n    singlebatch_training.forEach(row => {\n      const {\n        id,\n        rec_id\n      } = row;\n      const res = trainingdata.find(r => r.rec_id === rec_id);\n\n      if (!res) {\n        deleteTraining(id);\n      }\n    }); //add or update new data\n\n    trainingdata.forEach(data => {\n      const {\n        id,\n        institute,\n        course,\n        from_date,\n        to_date,\n        expiry_date\n      } = data;\n\n      if (id) {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = data;\n        updateTraining({\n          id,\n          ...fields\n        });\n      } else {\n        addTraining({\n          institute,\n          course,\n          from_date,\n          to_date,\n          expiry_date,\n          empid: editEmployeeID\n        });\n      }\n    });\n    getSingleBatchTraining(editEmployeeID);\n    handleDialogClose();\n  };\n\n  if (singlebatch_training_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: trainingdata,\n        title: \"Training\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setTrainingdata([...trainingdata, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...trainingdata];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setTrainingdata([...dataUpdate]);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...trainingdata];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setTrainingdata([...dataDelete]);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Save_TrainingData,\n                children: [\"Update \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Emp_Training, \"SyXmXpJWEd8f8xv3/gbR4EoAtvo=\", false, function () {\n  return [useStyles, useEmployeesContext, useTrainingsContext];\n});\n\n_c = Emp_Training;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp_Training\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/EmpTrainings.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","Button","Icon","TextField","useEmployeesContext","useTrainingsContext","columns","title","field","type","dateSetting","locale","editComponent","props","e","onChange","target","value","Emp_Training","trainingdata","setTrainingdata","handleDialogClose","classes","useStyles","editEmployeeID","getSingleBatchTraining","singlebatch_training","addTraining","deleteTraining","updateTraining","singlebatch_training_loading","Save_TrainingData","forEach","row","id","rec_id","res","find","r","data","institute","course","from_date","to_date","expiry_date","tableData","fields","empid","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","onRowDelete","dataDelete","splice","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institute\",\r\n    field: \"institute\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function Emp_Training({\r\n  trainingdata,\r\n  setTrainingdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    getSingleBatchTraining,\r\n    singlebatch_training,\r\n    addTraining,\r\n    deleteTraining,\r\n    updateTraining,\r\n    singlebatch_training_loading,\r\n  } = useTrainingsContext();\r\n\r\n  useEffect(() => {}, [trainingdata]);\r\n\r\n  const Save_TrainingData = () => {\r\n    //console.log(trainingdata);\r\n    // delete unwanted data\r\n    singlebatch_training.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = trainingdata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteTraining(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n\r\n    trainingdata.forEach((data) => {\r\n      const { id, institute, course, from_date, to_date, expiry_date } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateTraining({ id, ...fields });\r\n      } else {\r\n        addTraining({\r\n          institute,\r\n          course,\r\n          from_date,\r\n          to_date,\r\n          expiry_date,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    getSingleBatchTraining(editEmployeeID);\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (singlebatch_training_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Training</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={trainingdata}\r\n          title=\"Training\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setTrainingdata([...trainingdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...trainingdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setTrainingdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...trainingdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setTrainingdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_TrainingData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}