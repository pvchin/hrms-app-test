{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\Payslip_ViewEarnings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { payPeriodState, payPeriodEndMonthState, payPeriodEmpIdState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Payslip_ViewEarnings({\n  setCalc\n}) {\n  _s();\n\n  let history = useHistory();\n  const [load, setLoad] = useState(true);\n  const classes = useStyles();\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\n  const payPeriod = useRecoilValue(payPeriodState);\n  const {\n    payslipearnings,\n    payslip_earning_amount,\n    setPayslipEarningAmount,\n    addPayslipEarning,\n    payslipearnings_loading,\n    updatePayslipEarning,\n    deletePayslipEarning,\n    updatePayslip,\n    editPayslipID,\n    single_payslip,\n    payslip_period,\n    getSingleBatchPayslipEarnings\n  } = usePayslipsContext();\n  const {\n    description,\n    amount\n  } = payslipearnings;\n  const {\n    allowances\n  } = useTablesContext();\n  console.log(\"recoil\", payPeriod, payPeriodEmpId);\n  const columns = [{\n    title: \"Name\",\n    field: \"description\"\n  }, {\n    title: \"Amount\",\n    field: \"amount\",\n    type: \"currency\"\n  }];\n  useEffect(() => {\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\n  }, []);\n\n  const calc_Earning = data => {\n    const sum = data.reduce((a, v) => a = a + v.amount, 0);\n    console.log(\"Earning\", data);\n    setPayslipEarningAmount(sum);\n  };\n\n  const update_Payslip = () => {\n    const {\n      rec_id,\n      id,\n      total_earnings,\n      ...paydata\n    } = single_payslip;\n    updatePayslip({\n      id: editPayslipID,\n      total_earnings: payslip_earning_amount,\n      ...paydata\n    });\n    setCalc(true);\n  };\n\n  if (payslipearnings_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... Incomes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipearnings,\n        title: \"Income\",\n        options: {\n          search: false,\n          toolbar: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payslip_ViewEarnings, \"HQN80r49ba6PPZX0T+tCSmHFOaA=\", false, function () {\n  return [useHistory, useStyles, useRecoilValue, useRecoilValue, usePayslipsContext, useTablesContext];\n});\n\n_c = Payslip_ViewEarnings;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Payslip_ViewEarnings\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/Payslip_ViewEarnings.js"],"names":["React","useState","useEffect","useRef","MaterialTable","makeStyles","useHistory","Link","useSetRecoilState","useRecoilValue","payPeriodState","payPeriodEndMonthState","payPeriodEmpIdState","usePayslipsContext","useTablesContext","Payslip_ViewEarnings","setCalc","history","load","setLoad","classes","useStyles","payPeriodEmpId","payPeriod","payslipearnings","payslip_earning_amount","setPayslipEarningAmount","addPayslipEarning","payslipearnings_loading","updatePayslipEarning","deletePayslipEarning","updatePayslip","editPayslipID","single_payslip","payslip_period","getSingleBatchPayslipEarnings","description","amount","allowances","console","log","columns","title","field","type","calc_Earning","data","sum","reduce","a","v","update_Payslip","rec_id","id","total_earnings","paydata","root","maxWidth","paddingTop","search","toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\n\r\n\r\nexport default function Payslip_ViewEarnings({ setCalc }) {\r\n  let history = useHistory();\r\n  const [load, setLoad] = useState(true);\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n\r\n  const { description, amount } = payslipearnings;\r\n  const { allowances } = useTablesContext();\r\n  console.log(\"recoil\", payPeriod, payPeriodEmpId);\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"description\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipearnings}\r\n          title=\"Income\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}