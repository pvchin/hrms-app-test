{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\DepartmentsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQueryClient, useMutation } from \"react-query\";\nimport { departments_url } from \"../utils/constants\";\nimport { useDepartments } from \"./departments/useDepartments\";\nimport { useRecoilState, useRecoilValueLoadable } from \"recoil\";\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\nimport { deptDataState } from \"./data/atomdata\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useUpdateDepartments } from \"./departments/useUpdateDepartments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}];\nexport default function UpdateDepartments() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    departments\n  } = useDepartments();\n  const queryClient = useQueryClient();\n  const updateMutation = useUpdateDepartments();\n  const {\n    //loadDepartments,\n    //departments,\n    departments_loading,\n    addDepartment,\n    deleteDepartment // updateDepartment,\n\n  } = useTablesContext(); // useEffect(() => {\n  //   loadDepartments();\n  // }, []);\n  // async function updateDepartments(data) {\n  //   const { id, ...fields } = data;\n  //   await fetch(departments_url, {\n  //     method: \"PUT\",\n  //     body: JSON.stringify({ id, ...fields }),\n  //   });\n  // }\n  // Mutations\n  // const updateMutation = useMutation((data) => updateDepartments(data),\n  //   {\n  //     onSuccess: () => {\n  //       queryClient.invalidateQueries(\"departments\")\n  //     }\n  //   }\n  // );\n  // const mutation = useMutation(updateDepartments(), {\n  //   onSuccess: () => {\n  //     queryClient.invalidateQueries(\"departments\");\n  //   },\n  // });\n\n  const update_Department = data => {\n    const {\n      id,\n      rec_id,\n      ...fields\n    } = data;\n    updateMutation.mutate({\n      id,\n      ...fields\n    }); //loadDepartments();\n  };\n\n  const add_Department = data => {\n    addDepartment(data); //loadDepartments();\n  };\n\n  const delete_Department = data => {\n    const {\n      id\n    } = data;\n    deleteDepartment(id); //loadDepartments();\n  }; // if (useDepartments.isLoading) {\n  //   return (\n  //     <div>\n  //       <h2>Loading.....Departments</h2>\n  //     </div>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: departments,\n        title: \"Departments\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              add_Department(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              update_Department(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              delete_Department(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateDepartments, \"Ym0OaqQMH83Em8M6drhjlJn5ZCQ=\", false, function () {\n  return [useStyles, useDepartments, useQueryClient, useUpdateDepartments, useTablesContext];\n});\n\n_c = UpdateDepartments;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateDepartments\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/DepartmentsTable.js"],"names":["React","useEffect","MaterialTable","makeStyles","useQueryClient","useMutation","departments_url","useDepartments","useRecoilState","useRecoilValueLoadable","fetchDepartmentsSelector","deptDataState","useTablesContext","useUpdateDepartments","columns","title","field","UpdateDepartments","classes","useStyles","departments","queryClient","updateMutation","departments_loading","addDepartment","deleteDepartment","update_Department","data","id","rec_id","fields","mutate","add_Department","delete_Department","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,aAA5C;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,cAAT,EAAyBC,sBAAzB,QAAuD,QAAvD;AACA,SAASC,wBAAT,QAAyC,qBAAzC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,oBAAT,QAAqC,oCAArC;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,CAAhB;AAOA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBb,cAAc,EAAtC;AACA,QAAMc,WAAW,GAAGjB,cAAc,EAAlC;AACA,QAAMkB,cAAc,GAAGT,oBAAoB,EAA3C;AAEA,QAAM;AACJ;AACA;AACAU,IAAAA,mBAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,gBALI,CAMJ;;AANI,MAOFb,gBAAgB,EAPpB,CAN0C,CAe1C;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMc,iBAAiB,GAAIC,IAAD,IAAU;AAClC,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA,MAAL;AAAY,SAAGC;AAAf,QAAyBH,IAA/B;AACAL,IAAAA,cAAc,CAACS,MAAf,CAAsB;AAAEH,MAAAA,EAAF;AAAO,SAAGE;AAAV,KAAtB,EAFkC,CAGlC;AACD,GAJD;;AAMA,QAAME,cAAc,GAAIL,IAAD,IAAU;AAC/BH,IAAAA,aAAa,CAACG,IAAD,CAAb,CAD+B,CAE/B;AACD,GAHD;;AAKA,QAAMM,iBAAiB,GAAIN,IAAD,IAAU;AAClC,UAAM;AAAEC,MAAAA;AAAF,QAASD,IAAf;AACAF,IAAAA,gBAAgB,CAACG,EAAD,CAAhB,CAFkC,CAGlC;AACD,GAJD,CArD0C,CA2D1C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACgB,IAAxB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEtB,OADX;AAEE,QAAA,IAAI,EAAEM,WAFR;AAGE,QAAA,KAAK,EAAC,aAHR;AAIE,QAAA,QAAQ,EAAE;AACRiB,UAAAA,QAAQ,EAAGC,OAAD,IACR,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACfV,cAAAA,cAAc,CAACM,OAAD,CAAd;AACAE,cAAAA,OAAO;AACR,aAHS,EAGP,IAHO,CAAV;AAID,WALD,CAFM;AAQRG,UAAAA,WAAW,EAAE,CAACL,OAAD,EAAUM,OAAV,KACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACfhB,cAAAA,iBAAiB,CAACY,OAAD,CAAjB;AAEAE,cAAAA,OAAO;AACR,aAJS,EAIP,IAJO,CAAV;AAKD,WAND,CATM;AAgBRK,UAAAA,WAAW,EAAGD,OAAD,IACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACfT,cAAAA,iBAAiB,CAACW,OAAD,CAAjB;AACAJ,cAAAA,OAAO;AACR,aAHS,EAGP,IAHO,CAAV;AAID,WALD;AAjBM,SAJZ;AA4BE,QAAA,OAAO,EAAE;AACPM,UAAAA,SAAS,EAAE,IADJ;AAEPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,QADN;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAFN;AAMPC,UAAAA,SAAS,EAAE;AANJ;AA5BX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GA9GuBjC,iB;UACNE,S,EACQZ,c,EACJH,c,EACGS,oB,EASnBD,gB;;;KAbkBK,iB;AA+GxB,MAAME,SAAS,GAAGhB,UAAU,CAAEgD,KAAD,KAAY;AACvCjB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useQueryClient, useMutation } from \"react-query\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\nimport { deptDataState } from \"./data/atomdata\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useUpdateDepartments } from \"./departments/useUpdateDepartments\"\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateDepartments() {\r\n  const classes = useStyles();\r\n  const { departments } = useDepartments();\r\n  const queryClient = useQueryClient();\r\n  const updateMutation = useUpdateDepartments();\r\n\r\n  const {\r\n    //loadDepartments,\r\n    //departments,\r\n    departments_loading,\r\n    addDepartment,\r\n    deleteDepartment,\r\n    // updateDepartment,\r\n  } = useTablesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadDepartments();\r\n  // }, []);\r\n\r\n  // async function updateDepartments(data) {\r\n  //   const { id, ...fields } = data;\r\n\r\n  //   await fetch(departments_url, {\r\n  //     method: \"PUT\",\r\n  //     body: JSON.stringify({ id, ...fields }),\r\n  //   });\r\n  // }\r\n\r\n  // Mutations\r\n  // const updateMutation = useMutation((data) => updateDepartments(data),\r\n  //   {\r\n  //     onSuccess: () => {\r\n  //       queryClient.invalidateQueries(\"departments\")\r\n  //     }\r\n  //   }\r\n  // );\r\n  // const mutation = useMutation(updateDepartments(), {\r\n  //   onSuccess: () => {\r\n  //     queryClient.invalidateQueries(\"departments\");\r\n  //   },\r\n  // });\r\n\r\n  const update_Department = (data) => {\r\n    const {id, rec_id,...fields} = data\r\n    updateMutation.mutate({ id,  ...fields });\r\n    //loadDepartments();\r\n  };\r\n\r\n  const add_Department = (data) => {\r\n    addDepartment(data);\r\n    //loadDepartments();\r\n  };\r\n\r\n  const delete_Department = (data) => {\r\n    const { id } = data;\r\n    deleteDepartment(id);\r\n    //loadDepartments();\r\n  };\r\n\r\n  // if (useDepartments.isLoading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading.....Departments</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={departments}\r\n          title=\"Departments\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Department(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Department(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Department(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}