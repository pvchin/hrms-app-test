{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Dispatch, SetStateAction, useState } from 'react';\nimport { useQuery } from \"react-query\";\nimport { employees_url } from \"../../utils/constants\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\"; // for when we need a query function for useQuery\n\nasync function getEmployees() {\n  const {\n    data\n  } = await axios.get(`${employees_url}`);\n  return data;\n}\n\nexport function useEmployees() {\n  _s();\n\n  const [filter, setFilter] = useState(\"all\");\n  const fallback = [];\n  const {\n    data: employees = fallback\n  } = useQuery(queryKeys.employees, getEmployees);\n  return {\n    data,\n    filter,\n    setFilter\n  };\n}\n\n_s(useEmployees, \"rLN9t4PtvHfkFoh6fr27nv56KA8=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/employees/useEmployees.js"],"names":["Dispatch","SetStateAction","useState","useQuery","employees_url","axios","queryKeys","getEmployees","data","get","useEmployees","filter","setFilter","fallback","employees"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B,C,CAEA;;AACA,eAAeC,YAAf,GAA8B;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMH,KAAK,CAACI,GAAN,CAAW,GAAEL,aAAc,EAA3B,CAAvB;AACA,SAAOI,IAAP;AACD;;AAED,OAAO,SAASE,YAAT,GAAwB;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMW,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEL,IAAAA,IAAI,EAAEM,SAAS,GAAGD;AAApB,MAAiCV,QAAQ,CAACG,SAAS,CAACQ,SAAX,EAAsBP,YAAtB,CAA/C;AAEA,SAAO;AAAEC,IAAAA,IAAF;AAAQG,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAAP;AACD;;GANeF,Y;UAGyBP,Q","sourcesContent":["import { Dispatch, SetStateAction, useState } from 'react';\r\nimport { useQuery } from \"react-query\";\r\nimport { employees_url } from \"../../utils/constants\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\"\r\n\r\n// for when we need a query function for useQuery\r\nasync function getEmployees() {\r\n  const { data } = await axios.get(`${employees_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useEmployees() {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const fallback = [];\r\n  const { data: employees = fallback } = useQuery(queryKeys.employees, getEmployees);\r\n\r\n  return { data, filter, setFilter };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}