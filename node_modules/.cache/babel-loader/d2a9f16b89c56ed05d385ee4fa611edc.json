{"ast":null,"code":"import React,{useEffect}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Paper from\"@material-ui/core/Paper\";import Grid from\"@material-ui/core/Grid\";import Button from\"@material-ui/core/Button\";import Toolbar from\"@material-ui/core/Toolbar\";import Typography from\"@material-ui/core/Typography\";import{useHistory}from\"react-router-dom\";import{useSetRecoilState}from\"recoil\";import{payrunIdState,payPeriodState,payPeriodEndMonthState}from\"./data/atomdata\";import{usePayslipsContext}from\"../context/payslips_context\";import{useTablesContext}from\"../context/tables_context\";import{useEmployeesContext}from\"../context/employees_context\";import{periods}from\"../utils/constants\";import BatchPayslips from\"./BatchPayslips\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PayslipsPeriods=function PayslipsPeriods(){var history=useHistory();var classes=useStyles();var setPayPeriod=useSetRecoilState(payPeriodState);var setPayPeriodEndMonth=useSetRecoilState(payPeriodEndMonthState);var _usePayslipsContext=usePayslipsContext(),setPayslipPeriod=_usePayslipsContext.setPayslipPeriod,setPayslipEndMonthDate=_usePayslipsContext.setPayslipEndMonthDate;var _useEmployeesContext=useEmployeesContext(),loadEmployees=_useEmployeesContext.loadEmployees,employees=_useEmployeesContext.employees;var _useTablesContext=useTablesContext(),loadAllowances=_useTablesContext.loadAllowances,allowances=_useTablesContext.allowances,loadDeductions=_useTablesContext.loadDeductions,deductions=_useTablesContext.deductions;var handlePeriod=function handlePeriod(name,monthenddate){setPayPeriod(name);setPayPeriodEndMonth(monthenddate);setPayslipPeriod(name);setPayslipEndMonthDate(monthenddate);history.push(\"/batchpayslips\");};useEffect(function(){loadAllowances();loadDeductions();loadEmployees();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(Toolbar,{children:/*#__PURE__*/_jsx(Typography,{className:classes.title,variant:\"h6\",id:\"tableTitle\",component:\"div\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Payroll Period\"})})}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:periods.map(function(e){var name=e.name,monthenddate=e.monthenddate;return/*#__PURE__*/_jsx(Grid,{item:true,xs:3,inline:true,children:/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",fullWidth:true,size:\"large\",onClick:function onClick(){return handlePeriod(name,monthenddate);},children:name})})});})})]});};var useStyles=makeStyles(function(theme){return{root:{flexGrow:1},paper:{padding:theme.spacing(2),textAlign:\"center\",color:theme.palette.text.secondary},title:{flex:\"1 1 100%\",textAlign:\"center\"}};});export default PayslipsPeriods;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/PayslipsPeriods.js"],"names":["React","useEffect","makeStyles","Paper","Grid","Button","Toolbar","Typography","useHistory","useSetRecoilState","payrunIdState","payPeriodState","payPeriodEndMonthState","usePayslipsContext","useTablesContext","useEmployeesContext","periods","BatchPayslips","PayslipsPeriods","history","classes","useStyles","setPayPeriod","setPayPeriodEndMonth","setPayslipPeriod","setPayslipEndMonthDate","loadEmployees","employees","loadAllowances","allowances","loadDeductions","deductions","handlePeriod","name","monthenddate","push","root","title","map","e","paper","theme","flexGrow","padding","spacing","textAlign","color","palette","text","secondary","flex"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { payrunIdState,payPeriodState, payPeriodEndMonthState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { periods } from \"../utils/constants\";\r\nimport BatchPayslips from \"./BatchPayslips\";\r\n\r\nconst PayslipsPeriods = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriod = useSetRecoilState(payPeriodState);\r\n  const setPayPeriodEndMonth = useSetRecoilState(payPeriodEndMonthState);\r\n  const { setPayslipPeriod, setPayslipEndMonthDate } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadAllowances, allowances, loadDeductions, deductions } =\r\n    useTablesContext();\r\n\r\n  const handlePeriod = (name, monthenddate) => {\r\n    setPayPeriod(name);\r\n     setPayPeriodEndMonth(monthenddate);\r\n    setPayslipPeriod(name);\r\n    setPayslipEndMonthDate(monthenddate);\r\n    history.push(\"/batchpayslips\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllowances();\r\n    loadDeductions();\r\n    loadEmployees()\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          <h2>Payroll Period</h2>\r\n        </Typography>\r\n      </Toolbar>\r\n      <Grid container spacing={3}>\r\n        {periods.map((e) => {\r\n          const { name, monthenddate } = e;\r\n          return (\r\n            <Grid item xs={3} inline>\r\n              <Paper className={classes.paper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  onClick={() => handlePeriod(name, monthenddate)}\r\n                >\r\n                  {name}\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\nexport default PayslipsPeriods;\r\n"]},"metadata":{},"sourceType":"module"}