{"ast":null,"code":"import _objectSpread from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import ReactToPrint,{useReactToPrint}from\"react-to-print\";import PrintPDFTest from\"./PrintPDFTest\";import MaterialTable from\"material-table\";import{Button,Icon,Grid,TextField}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import{useRecoilState}from\"recoil\";import{payrunState,payrunStatusState}from\"./data/atomdata\";import{usePayslipsContext}from\"../context/payslips_context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[{title:\"Name\",field:\"name\",editable:\"never\"},{title:\"Wages\",field:\"wages\",editable:\"never\",type:\"currency\"},{title:\"TAP Amount\",field:\"tap_amount\",editable:\"never\",type:\"currency\"},{title:\"SCP Amount\",field:\"scp_amount\",editable:\"never\",type:\"currency\"},{title:\"Allowances\",field:\"total_allowancws\",editable:\"never\",type:\"currency\"},{title:\"Deductions\",field:\"total_deductions\",editable:\"never\",type:\"currency\"},{title:\"Nett Pay\",field:\"nett_pay\",editable:\"never\",type:\"currency\"}];var initial_state=[{totalwages:0,totaltap:0,totalscp:0,totalallows:0,totaldeducts:0,totalpayroll:0}];var PaySummary=function PaySummary(_ref){var singlebatchpayslip=_ref.singlebatchpayslip;var classes=useStyles();var componentRef=useRef();var _useState=useState(initial_state),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useRecoilState=useRecoilState(payrunState),_useRecoilState2=_slicedToArray(_useRecoilState,2),payrundata=_useRecoilState2[0],setPayrundata=_useRecoilState2[1];var _useRecoilState3=useRecoilState(payrunStatusState),_useRecoilState4=_slicedToArray(_useRecoilState3,2),payrunstatus=_useRecoilState4[0],setPayrunStatus=_useRecoilState4[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isCalc=_useState4[0],setIsCalc=_useState4[1];var _usePayslipsContext=usePayslipsContext(),payrun=_usePayslipsContext.payrun,updatePayrun=_usePayslipsContext.updatePayrun,payslip_period=_usePayslipsContext.payslip_period;var exportPdfTable=function exportPdfTable(){// change this number to generate more or less rows of data\nPrintPDFTest();};var handleCalcTotals=function handleCalcTotals(){var data=singlebatchpayslip;var totalwages=data.reduce(function(acc,item){return acc+item.wages;},0);var totalallows=data.reduce(function(acc,item){return acc+item.allows_type1amt+item.allows_type2amt+item.allows_type3amt+item.allows_type4amt+item.allows_type5amt+item.allows_type6amt+item.allows_type7amt+item.allows_type8amt;},0);var totaldeducts=data.reduce(function(acc,item){return acc+item.deducts_type1amt+item.deducts_type2amt+item.deducts_type3amt+item.deducts_type4amt+item.deducts_type5amt+item.deducts_type6amt+item.deducts_type7amt+item.deducts_type8amt;},0);var totaltap=Math.ceil(totalwages*0.05);var totalscp=Math.round((totalwages+Number.EPSILON)*0.035*100)/100;var totalpayroll=totalwages+totalallows-totaltap-totalscp-totaldeducts;setPayrundata(_objectSpread(_objectSpread({},payrundata),{},{totalpayroll:totalpayroll,totalwages:totalwages,totaltap:totaltap,totalscp:totalscp,totalallows:totalallows,totaldeducts:totaldeducts}));payrun.filter(function(r){return r.payrun===payslip_period;}).map(function(rec){//update payrun\nreturn updatePayrun({id:rec.id,totalpayroll:totalpayroll,totalwages:totalwages,totaltap:totaltap,totalscp:totalscp,totalallows:totalallows,totaldeducts:totaldeducts});});console.log(\"payrundata\",payrundata);console.log(\"totals\",totalpayroll,totalwages,totaltap,totalscp,totalallows,totaldeducts);};var handleSaveCalcTotals=function handleSaveCalcTotals(e){e.preventDefault();handleCalcTotals();};useEffect(function(){handleCalcTotals();setIsCalc(false);},[isCalc]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return exportPdfTable();},children:\"Print this out!\"})})}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(Grid,{item:true,sm:12,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Summary\"})})})}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",style:{border:\"1px solid white\"},children:[/*#__PURE__*/_jsx(Grid,{item:true,sm:3,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Period\",name:\"period\",variant:\"filled\",type:\"text\",value:payrundata.period,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})}),/*#__PURE__*/_jsx(Grid,{item:true,sm:3,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Pay Run Batch\",name:\"payrun\",variant:\"filled\",type:\"text\",value:payrundata.payrun,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})}),/*#__PURE__*/_jsx(Grid,{item:true,sm:3,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Status\",name:\"status\",variant:\"filled\",value:payrunstatus,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})}),/*#__PURE__*/_jsx(Grid,{item:true,sm:3,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Payroll Total\",name:\"paytotal\",variant:\"filled\",type:\"number\",value:payrundata.totalpayroll,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})})]}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(Grid,{item:true,sm:12,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:singlebatchpayslip,title:\"Payroll\",options:{filtering:false,search:false,toolbar:false,headerStyle:{backgroundColor:\"orange\",color:\"primary\"},showTitle:false}})})}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",style:{border:\"1px solid white\"},children:[/*#__PURE__*/_jsx(Grid,{item:true,sm:2,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Total Wages\",name:\"totalwages\",variant:\"filled\",type:\"currency\",value:payrundata.totalwages,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})}),/*#__PURE__*/_jsx(Grid,{item:true,sm:2,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Total TAP\",name:\"totaltap\",variant:\"filled\",type:\"currency\",value:payrundata.totaltap,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})}),/*#__PURE__*/_jsx(Grid,{item:true,sm:2,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Total SCP\",name:\"totalscp\",variant:\"filled\",type:\"currency\",value:payrundata.totalscp,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})}),/*#__PURE__*/_jsx(Grid,{item:true,sm:2,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Total Allowances\",name:\"totalallows\",variant:\"filled\",type:\"currency\",value:payrundata.totalallows,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})}),/*#__PURE__*/_jsx(Grid,{item:true,sm:2,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Total Deductions\",name:\"totaldeducts\",variant:\"filled\",type:\"currency\",value:payrundata.totaldeducts,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})}),/*#__PURE__*/_jsx(Grid,{item:true,sm:2,align:\"center\",style:{border:\"1px solid white\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Total Payroll\",name:\"totalpayroll\",variant:\"filled\",type:\"currency\",value:payrundata.totalpayroll,style:{width:\"100%\"},InputLabelProps:{shrink:true},InputProps:{readOnly:true}})})})]})]})]});};var useStyles=makeStyles(function(theme){return{root:{flexGrow:1},button:{margin:theme.spacing(1)},container:{margin:0,padding:0,width:\"80vw\",display:\"grid\",gridTemplateColumns:\"repeat(auto-fill,250px)\",gridAutoRows:\"10px\",position:\"absolute\",left:\"50%\",transform:\"translateX(-50%)\",justifyContent:\"center\",backgroundColor:\"primary\"},fixedHeight:{height:800},paper:{padding:theme.spacing(10),// display: \"flex\",\ndisplay:\"flex\",overflow:\"auto\",flexDirection:\"column\",border:\"1px solid\",width:\"100%\",color:\"primary\",bcakgroundColor:\"black\"},card:{backgroundColor:\"black\"},section:{width:\"80vw\",margin:\"1rem auto\",maxWidth:\"var(--max-width)\"},underline:{width:\"5rem\",height:\"0.25rem\",marginBottom:\"1.25rem\",background:\"var(--clr-primary-5)\",marginLeft:\"auto\",marginRight:\"auto\"},title:{marginbottom:\"4rem\",textAlign:\"center\"},jobscenter:{width:\"80vw\",margin:\"0 auto\",maxWidth:\"var(--max-width)\",flexDirection:\"row\"},btncontainer:{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",marginBottom:\"4rem\",flexWrap:\"wrap\"},jobbtn:{background:\"transparent\",borderColor:\"transparent\",textTransform:\"capitalize\",fontSize:\"1.25rem\",letterSpacing:\"var(--spacing)\",margin:\"0 0.5rem\",transition:\"var(--transition)\",cursor:\"pointer\",padding:\"0.25rem 0\",lineHeight:\"1\",outlineColor:\"var(--clr-primary-10)\",\"&:hover\":{color:\"var(--clr-primary-5)\",boxShadow:\"0 2px var(--clr-primary-5)\"}},activebtn:{color:\"var(--clr-primary-5)\",boxShadow:\"0 2px var(--clr-primary-5)\"},jobinfo:{fontWeight:\"400\"},divider:{// Theme Color, or use css color in quote\nbackground:\"white\"},textField:{marginLeft:theme.spacing(1),marginRight:theme.spacing(1),width:350},divContainer:{display:\"flex\",flexDirection:\"row\"}};});export default PaySummary;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/PaySummary.js"],"names":["React","useState","useEffect","useRef","ReactToPrint","useReactToPrint","PrintPDFTest","MaterialTable","Button","Icon","Grid","TextField","makeStyles","useRecoilState","payrunState","payrunStatusState","usePayslipsContext","columns","title","field","editable","type","initial_state","totalwages","totaltap","totalscp","totalallows","totaldeducts","totalpayroll","PaySummary","singlebatchpayslip","classes","useStyles","componentRef","state","setState","payrundata","setPayrundata","payrunstatus","setPayrunStatus","isCalc","setIsCalc","payrun","updatePayrun","payslip_period","exportPdfTable","handleCalcTotals","data","reduce","acc","item","wages","allows_type1amt","allows_type2amt","allows_type3amt","allows_type4amt","allows_type5amt","allows_type6amt","allows_type7amt","allows_type8amt","deducts_type1amt","deducts_type2amt","deducts_type3amt","deducts_type4amt","deducts_type5amt","deducts_type6amt","deducts_type7amt","deducts_type8amt","Math","ceil","round","Number","EPSILON","filter","r","map","rec","id","console","log","handleSaveCalcTotals","e","preventDefault","border","period","width","shrink","readOnly","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","root","flexGrow","button","margin","spacing","container","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","fixedHeight","height","paper","overflow","flexDirection","bcakgroundColor","card","section","maxWidth","underline","marginBottom","background","marginLeft","marginRight","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","jobinfo","fontWeight","divider","textField","divContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\r\nimport PrintPDFTest from \"./PrintPDFTest\"\r\nimport MaterialTable from \"material-table\";\r\nimport { Button, Icon, Grid, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { payrunState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Wages\",\r\n    field: \"wages\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"tap_amount\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"scp_amount\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"Allowances\",\r\n    field: \"total_allowancws\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"total_deductions\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n  {\r\n    title: \"Nett Pay\",\r\n    field: \"nett_pay\",\r\n    editable: \"never\",\r\n    type: \"currency\",\r\n  },\r\n];\r\n\r\nconst initial_state = [\r\n  {\r\n    totalwages: 0,\r\n    totaltap: 0,\r\n    totalscp: 0,\r\n    totalallows: 0,\r\n    totaldeducts: 0,\r\n    totalpayroll: 0,\r\n  },\r\n];\r\n\r\nconst PaySummary = ({ singlebatchpayslip }) => {\r\n  const classes = useStyles();\r\n  const componentRef = useRef();\r\n  const [state, setState] = useState(initial_state);\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [isCalc, setIsCalc] = useState(true);\r\n  const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\r\n\r\n  const exportPdfTable = () => {\r\n    // change this number to generate more or less rows of data\r\n    PrintPDFTest();\r\n  };\r\n\r\n  \r\n\r\n  const handleCalcTotals = () => {\r\n    const data = singlebatchpayslip;\r\n    const totalwages = data.reduce((acc, item) => {\r\n      return acc + item.wages;\r\n    }, 0);\r\n    const totalallows = data.reduce((acc, item) => {\r\n      return (\r\n        acc +\r\n        item.allows_type1amt +\r\n        item.allows_type2amt +\r\n        item.allows_type3amt +\r\n        item.allows_type4amt +\r\n        item.allows_type5amt +\r\n        item.allows_type6amt +\r\n        item.allows_type7amt +\r\n        item.allows_type8amt\r\n      );\r\n    }, 0);\r\n    const totaldeducts = data.reduce((acc, item) => {\r\n      return (\r\n        acc +\r\n        item.deducts_type1amt +\r\n        item.deducts_type2amt +\r\n        item.deducts_type3amt +\r\n        item.deducts_type4amt +\r\n        item.deducts_type5amt +\r\n        item.deducts_type6amt +\r\n        item.deducts_type7amt +\r\n        item.deducts_type8amt\r\n      );\r\n    }, 0);\r\n    const totaltap = Math.ceil(totalwages * 0.05);\r\n    const totalscp =\r\n      Math.round((totalwages + Number.EPSILON) * 0.035 * 100) / 100;\r\n    const totalpayroll =\r\n      totalwages + totalallows - totaltap - totalscp - totaldeducts;\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n    });\r\n    payrun\r\n      .filter((r) => r.payrun === payslip_period)\r\n      .map((rec) => {\r\n        //update payrun\r\n        return updatePayrun({\r\n          id: rec.id,\r\n          totalpayroll: totalpayroll,\r\n          totalwages: totalwages,\r\n          totaltap: totaltap,\r\n          totalscp: totalscp,\r\n          totalallows: totalallows,\r\n          totaldeducts: totaldeducts,\r\n        });\r\n      });\r\n    console.log(\"payrundata\", payrundata);\r\n    console.log(\r\n      \"totals\",\r\n      totalpayroll,\r\n      totalwages,\r\n      totaltap,\r\n      totalscp,\r\n      totalallows,\r\n      totaldeducts\r\n    );\r\n  };\r\n\r\n  const handleSaveCalcTotals = (e) => {\r\n    e.preventDefault();\r\n    handleCalcTotals();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCalcTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ display: \"none\" }}> */}\r\n      <div>\r\n        <div>\r\n         \r\n          <button onClick={() => exportPdfTable()}>Print this out!</button>\r\n          {/* <ReactToPrint\r\n            trigger={() => <button>Print this out!</button>}\r\n            content={() => componentRef}\r\n          />\r\n          <ComponentToPrint ref={(el) => (componentRef = el)} /> */}\r\n        </div>\r\n      </div>\r\n      <form>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              style={{ marginLeft: 5 }}\r\n              onClick={(e) => handleSaveCalcTotals(e)}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n              <h2>Summary</h2>\r\n              {/* <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                style={{ marginLeft: 5 }}\r\n                onClick={(e) => handle_Print(e)}\r\n              >\r\n                Print <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button> */}\r\n              {/* <div>\r\n                <ReactToPrint\r\n                  trigger={(e) => {\r\n                    handle_Print(e);\r\n                  }}\r\n                  content={() => this.componentRef}\r\n                />\r\n                <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n              </div> */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Period\"\r\n                name=\"period\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.period}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Pay Run Batch\"\r\n                name=\"payrun\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.payrun}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                variant=\"filled\"\r\n                value={payrunstatus}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Payroll Total\"\r\n                name=\"paytotal\"\r\n                variant=\"filled\"\r\n                type=\"number\"\r\n                value={payrundata.totalpayroll}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <MaterialTable\r\n              columns={columns}\r\n              data={singlebatchpayslip}\r\n              title=\"Payroll\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n\r\n                headerStyle: {\r\n                  backgroundColor: \"orange\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Wages\"\r\n                name=\"totalwages\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totalwages}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total TAP\"\r\n                name=\"totaltap\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totaltap}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total SCP\"\r\n                name=\"totalscp\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totalscp}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Allowances\"\r\n                name=\"totalallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totalallows}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Deductions\"\r\n                name=\"totaldeducts\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totaldeducts}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Payroll\"\r\n                name=\"totalpayroll\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={payrundata.totalpayroll}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  divContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default PaySummary;\r\n"]},"metadata":{},"sourceType":"module"}