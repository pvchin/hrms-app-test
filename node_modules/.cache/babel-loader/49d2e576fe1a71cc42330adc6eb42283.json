{"ast":null,"code":"import _toConsumableArray from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect}from\"react\";import MaterialTable,{MTableToolbar}from\"material-table\";import{Button,Icon,TextField}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import{useEmployeesContext}from\"../context/employees_context\";import{useTablesContext}from\"../context/tables_context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[{title:\"Company\",field:\"company\"},{title:\"Location\",field:\"location\"},{title:\"Position\",field:\"position\"},{title:\"From Date\",field:\"from_date\",type:\"date\",editComponent:function editComponent(props){return/*#__PURE__*/_jsx(TextField//defaultValue={props.value || new Date()}\n,{onChange:function onChange(e){return props.onChange(e.target.value);},type:\"date\"});}},{title:\"To Date\",field:\"to_date\",type:\"date\",editComponent:function editComponent(props){return/*#__PURE__*/_jsx(TextField//defaultValue={props.value || new Date()}\n,{onChange:function onChange(e){return props.onChange(e.target.value);},type:\"date\"});}},{title:\"Remark\",field:\"remark\"}];export default function Emp_Experiences(_ref){var experiencedata=_ref.experiencedata,setExperiencedata=_ref.setExperiencedata,handleDialogClose=_ref.handleDialogClose;var classes=useStyles();var _useEmployeesContext=useEmployeesContext(),editEmployeeID=_useEmployeesContext.editEmployeeID;var _useTablesContext=useTablesContext(),loadSingleBatchExperience=_useTablesContext.loadSingleBatchExperience,singlebatchexperience=_useTablesContext.singlebatchexperience,addExperience=_useTablesContext.addExperience,deleteExperience=_useTablesContext.deleteExperience,updateExperience=_useTablesContext.updateExperience,singlebatch_experience_loading=_useTablesContext.singlebatch_experience_loading;useEffect(function(){},[experiencedata]);var Save_ExperienceData=function Save_ExperienceData(){//console.log(experiencedata);\n// delete unwanted data\nsinglebatchexperience.forEach(function(row){var id=row.id,rec_id=row.rec_id;var res=experiencedata.find(function(r){return r.rec_id===rec_id;});if(!res){deleteExperience(id);}});//add or update new data\nexperiencedata.forEach(function(data){var id=data.id,company=data.company,location=data.location,position=data.position,from_date=data.from_date,to_date=data.to_date,remark=data.remark;if(id){var _id=data.id,rec_id=data.rec_id,tableData=data.tableData,fields=_objectWithoutProperties(data,[\"id\",\"rec_id\",\"tableData\"]);updateExperience(_objectSpread({id:_id},fields));}else{addExperience({company:company,location:location,position:position,from_date:from_date,to_date:to_date,remark:remark,empid:editEmployeeID});}});loadSingleBatchExperience(editEmployeeID);handleDialogClose();};// const update_Experience = (data) => {\n//   const { id, rec_id, ...fields } = data;\n//   updateExperience({ id, ...fields });\n//   loadSingleBatchExperience(editEmployeeID);\n// };\n// const add_Experience = (data) => {\n//   addExperience({ ...data, empid: editEmployeeID });\n//   loadSingleBatchExperience(editEmployeeID);\n// };\n// const delete_Experience = (data) => {\n//   const { id } = data;\n//   deleteExperience(id);\n//   loadSingleBatchExperience(editEmployeeID);\n// };\nif(singlebatch_experience_loading){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Loading...Experience\"})});}return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:experiencedata,title:\"Experience\",editable:{onRowAdd:function onRowAdd(newData){return new Promise(function(resolve,reject){setTimeout(function(){setExperiencedata([].concat(_toConsumableArray(experiencedata),[newData]));resolve();},1000);});},onRowUpdate:function onRowUpdate(newData,oldData){return new Promise(function(resolve,reject){setTimeout(function(){var dataUpdate=_toConsumableArray(experiencedata);var index=oldData.tableData.id;dataUpdate[index]=newData;setExperiencedata(_toConsumableArray(dataUpdate));resolve();},1000);});},onRowDelete:function onRowDelete(oldData){return new Promise(function(resolve,reject){setTimeout(function(){var dataDelete=_toConsumableArray(experiencedata);var index=oldData.tableData.id;dataDelete.splice(index,1);setExperiencedata(_toConsumableArray(dataDelete));resolve();},1000);});}},options:{filtering:true,headerStyle:{backgroundColor:\"orange\",color:\"primary\"},showTitle:true},components:{Toolbar:function Toolbar(props){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MTableToolbar,_objectSpread({},props)),/*#__PURE__*/_jsx(\"div\",{style:{padding:\"5px 10px\"},children:/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",color:\"secondary\",className:classes.button,onClick:Save_ExperienceData,children:[\"Update \",/*#__PURE__*/_jsx(Icon,{className:classes.rightIcon,children:\"send\"})]})})]});}}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/EmpExperiences.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","Button","Icon","TextField","makeStyles","useEmployeesContext","useTablesContext","columns","title","field","type","editComponent","props","e","onChange","target","value","Emp_Experiences","experiencedata","setExperiencedata","handleDialogClose","classes","useStyles","editEmployeeID","loadSingleBatchExperience","singlebatchexperience","addExperience","deleteExperience","updateExperience","singlebatch_experience_loading","Save_ExperienceData","forEach","row","id","rec_id","res","find","r","data","company","location","position","from_date","to_date","remark","tableData","fields","empid","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","onRowDelete","dataDelete","splice","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n  },\r\n  {\r\n    title: \"Position\",\r\n    field: \"position\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"Remark\", field: \"remark\" },\r\n];\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    loadSingleBatchExperience,\r\n    singlebatchexperience,\r\n    addExperience,\r\n    deleteExperience,\r\n    updateExperience,\r\n    singlebatch_experience_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {}, [experiencedata]);\r\n\r\n  const Save_ExperienceData = () => {\r\n    //console.log(experiencedata);\r\n    // delete unwanted data\r\n    singlebatchexperience.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = experiencedata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteExperience(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n    experiencedata.forEach((data) => {\r\n      const { id, company, location, position, from_date, to_date, remark } =\r\n        data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateExperience({ id, ...fields });\r\n      } else {\r\n        addExperience({\r\n          company,\r\n          location,\r\n          position,\r\n          from_date,\r\n          to_date,\r\n          remark,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    loadSingleBatchExperience(editEmployeeID);\r\n    handleDialogClose();\r\n  };\r\n\r\n  // const update_Experience = (data) => {\r\n  //   const { id, rec_id, ...fields } = data;\r\n  //   updateExperience({ id, ...fields });\r\n  //   loadSingleBatchExperience(editEmployeeID);\r\n  // };\r\n\r\n  // const add_Experience = (data) => {\r\n  //   addExperience({ ...data, empid: editEmployeeID });\r\n  //   loadSingleBatchExperience(editEmployeeID);\r\n  // };\r\n\r\n  // const delete_Experience = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteExperience(id);\r\n  //   loadSingleBatchExperience(editEmployeeID);\r\n  // };\r\n\r\n  if (singlebatch_experience_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Experience</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={experiencedata}\r\n          title=\"Experience\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setExperiencedata([...experiencedata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...experiencedata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setExperiencedata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...experiencedata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setExperiencedata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_ExperienceData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}