{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\PayslipTableStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { payPeriodState, payPeriodEndMonthState, payPeriodEmpIdState, loginLevelState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslips } from \"./payslips/usePayslips\";\nimport PrintPayslip from \"./PrintPayslip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Period\",\n  field: \"period\"\n}, {\n  title: \"Date\",\n  field: \"date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  }\n}, {\n  title: \"Basic Pay\",\n  field: \"basic_pay\",\n  type: \"currency\"\n}, {\n  title: \"TAP Amount\",\n  field: \"tap_amount\",\n  type: \"currency\"\n}, {\n  title: \"SCP Amount\",\n  field: \"scp_amount\",\n  type: \"currency\"\n}, {\n  title: \"Earnings\",\n  field: \"total_earnings\",\n  type: \"currency\"\n}, {\n  title: \"Deductions\",\n  field: \"total_deductions\",\n  type: \"currency\"\n}, {\n  title: \"Nett Pay\",\n  field: \"nett_pay\",\n  type: \"currency\"\n}, // { title: \"Bank Name\", field: \"bank_name\" },\n// { title: \"Bank AC No\", field: \"bank_accno\" },\n{\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function PayslipTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    payslips,\n    setFilter\n  } = usePayslips();\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\n  const {\n    deletePayslip,\n    loadPayslips,\n    getSinglePayslip,\n    setEditPayslipID,\n    setIsPayslipEditingOn,\n    setIsPayslipEditingOff,\n    resetSinglePayslip,\n    payslip_period,\n    payslip_endmonthdate\n  } = usePayslipsContext();\n\n  const exportPdfTable = data => {\n    PrintPayslip();\n  };\n\n  const update_Payslip = async data => {\n    const {\n      id\n    } = data;\n    setPayPeriodEmpId(id); //save to recoil\n\n    setEditPayslipID(id);\n    setIsPayslipEditingOn();\n    getSinglePayslip(id);\n    history.push(\"/singlepayslip\");\n  };\n\n  const add_Payslip = async data => {\n    const {\n      id\n    } = data;\n    resetSinglePayslip();\n    setEditPayslipID(\"\");\n    setIsPayslipEditingOff();\n    history.push(\"/singlepayslip\");\n  };\n\n  const delete_Payslip = data => {\n    const {\n      id\n    } = data;\n    setEditPayslipID(id);\n    deletePayslip(id);\n    loadPayslips();\n  };\n\n  useEffect(() => {\n    console.log(\"paytable\");\n    setFilter(loginLevel.loginUserId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslips,\n        title: \"Payslips\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this),\n          Build: props => /*#__PURE__*/_jsxDEV(BuildOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 31\n          }, this),\n          Print: props => /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 31\n          }, this)\n        },\n        actions: [{\n          icon: \"print\",\n          tooltip: \"Print Payslip\",\n          onClick: (event, rowData) => {\n            exportPdfTable(rowData);\n          }\n        } // {\n        //   icon: \"delete\",\n        //   tooltip: \"Delete Record\",\n        //   onClick: (event, rowData) => {\n        //     delete_Payslip(rowData);\n        //   },\n        // },\n        // {\n        //   icon: \"add\",\n        //   tooltip: \"Add Record\",\n        //   isFreeAction: true,\n        //   onClick: (event, rowData) => {\n        //     add_Payslip(rowData);\n        //   },\n        // },\n        ],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayslipTable, \"y1ef9mtoeK74cQeteIQaS1oA19U=\", false, function () {\n  return [useHistory, useStyles, useRecoilState, usePayslips, useSetRecoilState, usePayslipsContext];\n});\n\n_c = PayslipTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/PayslipTableStaff.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","PrintIcon","ArrowBackIcon","BuildOutlinedIcon","useHistory","Link","useRecoilState","useSetRecoilState","useRecoilValue","payPeriodState","payPeriodEndMonthState","payPeriodEmpIdState","loginLevelState","usePayslipsContext","useEmployeesContext","usePayslips","PrintPayslip","columns","title","field","type","dateSetting","locale","PayslipTable","history","classes","useStyles","loginLevel","setLoginLevel","payslips","setFilter","setPayPeriodEmpId","deletePayslip","loadPayslips","getSinglePayslip","setEditPayslipID","setIsPayslipEditingOn","setIsPayslipEditingOff","resetSinglePayslip","payslip_period","payslip_endmonthdate","exportPdfTable","data","update_Payslip","id","push","add_Payslip","delete_Payslip","console","log","loginUserId","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","Build","Print","icon","tooltip","onClick","event","rowData","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslips } from \"./payslips/usePayslips\";\r\nimport PrintPayslip  from \"./PrintPayslip\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  { title: \"Basic Pay\", field: \"basic_pay\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"tap_amount\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"scp_amount\", type: \"currency\" },\r\n  { title: \"Earnings\", field: \"total_earnings\", type: \"currency\" },\r\n  { title: \"Deductions\", field: \"total_deductions\", type: \"currency\" },\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"currency\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { payslips, setFilter } = usePayslips();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    deletePayslip,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    setIsPayslipEditingOff,\r\n    resetSinglePayslip,\r\n    payslip_period,\r\n    payslip_endmonthdate,\r\n  } = usePayslipsContext();\r\n\r\n  \r\n\r\n  const exportPdfTable = (data) => {\r\n    PrintPayslip();\r\n  };\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id } = data;\r\n    setPayPeriodEmpId(id); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const add_Payslip = async (data) => {\r\n    const { id } = data;\r\n    resetSinglePayslip();\r\n    setEditPayslipID(\"\");\r\n    setIsPayslipEditingOff();\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id } = data;\r\n    setEditPayslipID(id);\r\n    deletePayslip(id);\r\n    loadPayslips();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"paytable\");\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslips}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n            Print: (props) => <PrintIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"print\",\r\n              tooltip: \"Print Payslip\",\r\n              onClick: (event, rowData) => {\r\n                 exportPdfTable(rowData);\r\n              },\r\n            },\r\n            // {\r\n            //   icon: \"delete\",\r\n            //   tooltip: \"Delete Record\",\r\n            //   onClick: (event, rowData) => {\r\n            //     delete_Payslip(rowData);\r\n            //   },\r\n            // },\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}