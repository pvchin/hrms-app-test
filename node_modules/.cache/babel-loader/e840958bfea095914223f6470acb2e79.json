{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\EmpEducations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Button, Icon, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useUpdateEducations } from \"./family/useUpdateEducations\";\nimport { useAddEducations } from \"./family/useAddEducations\";\nimport { useDeleteEducations } from \"./family/useDeleteEducations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Institution\",\n  field: \"institution\"\n}, {\n  title: \"Course\",\n  field: \"course\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || new Date()}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"Archievement\",\n  field: \"archievement\"\n}, {\n  title: \"Grade\",\n  field: \"grade\"\n}, {\n  title: \"Remark\",\n  field: \"remark\"\n}];\nexport default function Emp_Educations({\n  educationdata,\n  setEducationdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    educations,\n    setEducationId\n  } = useEducations();\n  const updateEducations = useUpdateEducations();\n  const addEducations = useAddEducations();\n  const deleteEducations = useDeleteEducations();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    singlebatcheducation,\n    //addEducation,\n    // deleteEducation,\n    //updateEducation,\n    singlebatch_education_loading,\n    singlebatch_education_error,\n    loadSingleBatchEducation\n  } = useTablesContext();\n  useEffect(() => {\n    setEducationId(editEmployeeID);\n  }, []);\n\n  const Save_EducationData = () => {\n    //console.log(educationdata);\n    // delete unwanted data\n    singlebatcheducation.forEach(row => {\n      const {\n        id,\n        rec_id\n      } = row;\n      const res = educationdata.find(r => r.rec_id === rec_id);\n\n      if (!res) {\n        deleteEducation(id);\n      }\n    }); //add or update new data\n\n    educationdata.forEach(data => {\n      const {\n        id,\n        institution,\n        course,\n        from_date,\n        to_date,\n        grade,\n        remark\n      } = data;\n\n      if (id) {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = data;\n        updateEducation({\n          id,\n          ...fields\n        });\n      } else {\n        addEducation({\n          institution,\n          course,\n          from_date,\n          to_date,\n          grade,\n          remark,\n          empid: editEmployeeID\n        });\n      }\n    });\n    handleDialogClose();\n  };\n\n  const update_Education = data => {\n    const {\n      id,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    updateEducations({\n      id,\n      ...fields\n    });\n  };\n\n  const add_Education = data => {\n    addEducations({ ...data,\n      empid: editEmployeeID\n    });\n  };\n\n  const delete_Education = data => {\n    const {\n      id\n    } = data;\n    deleteEducations(id);\n  };\n\n  if (singlebatch_education_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Education\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: singlebatcheducation,\n        title: \"Education\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              //setEducationdata([...educationdata, newData]);\n              add_Education(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // const dataUpdate = [...educationdata];\n              // const index = oldData.tableData.id;\n              // dataUpdate[index] = newData;\n              // setEducationdata([...dataUpdate]);\n              update_Education(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // const dataDelete = [...educationdata];\n              // const index = oldData.tableData.id;\n              // dataDelete.splice(index, 1);\n              delete_Education(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Refresh_Data,\n                children: [\"Refresh \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Emp_Educations, \"IKz8/gwXMawPs9zRaclos6+4iM0=\", true, function () {\n  return [useStyles, useUpdateEducations, useAddEducations, useDeleteEducations, useEmployeesContext, useTablesContext];\n});\n\n_c = Emp_Educations;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp_Educations\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/EmpEducations.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","Button","Icon","TextField","makeStyles","useEmployeesContext","useTablesContext","useUpdateEducations","useAddEducations","useDeleteEducations","columns","title","field","type","dateSetting","locale","editComponent","props","e","onChange","target","value","Emp_Educations","educationdata","setEducationdata","handleDialogClose","classes","useStyles","educations","setEducationId","useEducations","updateEducations","addEducations","deleteEducations","editEmployeeID","singlebatcheducation","singlebatch_education_loading","singlebatch_education_error","loadSingleBatchEducation","Save_EducationData","forEach","row","id","rec_id","res","find","r","deleteEducation","data","institution","course","from_date","to_date","grade","remark","tableData","fields","updateEducation","addEducation","empid","update_Education","add_Education","delete_Education","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","Refresh_Data","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useUpdateEducations } from \"./family/useUpdateEducations\";\r\nimport { useAddEducations } from \"./family/useAddEducations\";\r\nimport { useDeleteEducations } from \"./family/useDeleteEducations\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField onChange={(e) => props.onChange(e.target.value)} type=\"date\" />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Archievement\",\r\n    field: \"archievement\",\r\n  },\r\n\r\n  { title: \"Grade\", field: \"grade\" },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations({\r\n  educationdata,\r\n  setEducationdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { educations, setEducationId } = useEducations();\r\n  const updateEducations = useUpdateEducations();\r\n  const addEducations = useAddEducations();\r\n  const deleteEducations = useDeleteEducations();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const {\r\n    singlebatcheducation,\r\n    //addEducation,\r\n    // deleteEducation,\r\n    //updateEducation,\r\n    singlebatch_education_loading,\r\n    singlebatch_education_error,\r\n    loadSingleBatchEducation,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    setEducationId(editEmployeeID);\r\n  }, []);\r\n\r\n  const Save_EducationData = () => {\r\n    //console.log(educationdata);\r\n    // delete unwanted data\r\n    singlebatcheducation.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = educationdata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteEducation(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n\r\n    educationdata.forEach((data) => {\r\n      const { id, institution, course, from_date, to_date, grade, remark } =\r\n        data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateEducation({ id, ...fields });\r\n      } else {\r\n        addEducation({\r\n          institution,\r\n          course,\r\n          from_date,\r\n          to_date,\r\n          grade,\r\n          remark,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const update_Education = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateEducations({ id, ...fields });\r\n  };\r\n\r\n  const add_Education = (data) => {\r\n    addEducations({ ...data, empid: editEmployeeID });\r\n      };\r\n\r\n  const delete_Education = (data) => {\r\n    const { id } = data;\r\n    deleteEducations(id);\r\n    };\r\n\r\n  \r\n\r\n  if (singlebatch_education_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Education</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatcheducation}\r\n          title=\"Education\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  //setEducationdata([...educationdata, newData]);\r\n                  add_Education(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataUpdate = [...educationdata];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataUpdate[index] = newData;\r\n                  // setEducationdata([...dataUpdate]);\r\n                  update_Education(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataDelete = [...educationdata];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataDelete.splice(index, 1);\r\n                  delete_Education(oldData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Refresh_Data}\r\n                  >\r\n                    Refresh <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}