{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\LeaveTableStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LeaveForm from \"./LeaveForm\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialog\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_form = {\n  name: \"\",\n  to_date: \"\",\n  from_date: \"\",\n  reason: \"\",\n  status: \"Pending\",\n  no_of_days: 0,\n  leave_bal: 0\n};\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Leave Balance\",\n  field: \"leave_bal\",\n  type: \"numeric\",\n  editable: \"never\"\n}, {\n  title: \"No of Days\",\n  field: \"no_of_days\",\n  type: \"numeric\",\n  editable: \"never\"\n}, {\n  title: \"Reason\",\n  field: \"reason\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approve\",\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Reject\",\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this)\n}];\nexport default function LeaveTableStaff() {\n  _s();\n\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [alertSuccess, setAlertSuccess] = useState(false);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [formdata, setFormdata] = useState(initial_form);\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    leaves,\n    editLeaveID,\n    updateLeave,\n    addLeave,\n    deleteLeave,\n    setEditLeaveID,\n    setIsLeaveEditingOn,\n    setIsLeaveEditingOff\n  } = useLeavesContext(); // useEffect(() => {\n  //   loadLeaves();\n  // }, []);\n  // useEffect(() => {\n  //   loadEmployees();\n  // }, []);\n\n  const update_Leave = async data => {\n    const {\n      id\n    } = data;\n    setFormdata({ ...data\n    });\n    setFormdata({ ...data\n    });\n    setEditLeaveID(id);\n    setIsLeaveEditingOn();\n    handleDialogOpen(); //history.push(\"/singleleave\");\n  };\n\n  const add_Leave = async data => {\n    // const { id } = data;\n    //setEditLeaveID(\"\");\n    setFormdata(initial_form);\n    setFormdata(initial_form);\n    setIsLeaveEditingOff();\n    handleDialogOpen(); //history.push(\"/singleleave\");\n  };\n\n  const delete_Leave = data => {\n    const {\n      id\n    } = data;\n    setEditLeaveID(id);\n    handleAlertOpen(); //deleteLeave(id);\n    //loadLeaves();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false); // if (isLeaveEditing) {\n    //   loadEmpLeaves(editEmployeeID);\n    // }\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editLeaveID; //const index = leaves.findIndex((r) => r.id === id);\n    // console.log(\"leave delete\", index, leaves);\n    // leaves.splice(index, 1);\n    //deleteLeave(id);\n\n    const leavedata = leaves.filter(r => r.id === editLeaveID);\n    leavedata[0].isdelete = true;\n    console.log(leaves);\n  };\n\n  const Save_Leavedata = e => {\n    e.preventDefault();\n    leaves.forEach(row => {\n      if (row.isdelete) {\n        deleteLeave(row.id);\n      }\n\n      if (row.id) {\n        const {\n          rec_id,\n          ...fields\n        } = row;\n        updateLeave({\n          id: editLeaveID,\n          ...fields\n        });\n      }\n\n      if (!row.id) {\n        addLeave({ ...row,\n          empid: loginLevel.loginUserId\n        });\n      }\n    });\n    setAlertSuccess(true);\n  }; // if (leaves_loading) {\n  //   return (\n  //     <div>\n  //       <h2>Loading...Leaves</h2>\n  //     </div>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: leaves.filter(item => item.empid === loginLevel.loginUserId && !item.isdelete).map(row => {\n          return { ...row\n          };\n        }),\n        title: \"Leave Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 37\n          }, this)\n        } // editable={{\n        //   isEditable: (rowData) => rowData.status === \"Pending\",\n        //   isDeletable: (rowData) => rowData.status === \"Pending\",\n        //   onRowAdd: (newData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         add_Leave(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         update_Leave(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        //   onRowDelete: (oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         delete_Leave(oldData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        actions: [rowData => ({\n          disabled: rowData.status !== \"Pending\",\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Leave(rowData);\n          }\n        }), rowData => ({\n          disabled: rowData.status !== \"Pending\",\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Leave(rowData);\n          }\n        }), {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Leave(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: e => Save_Leavedata(e),\n                children: [\"Update \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), alertSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              onClose: () => setAlertSuccess(false),\n              children: \"Changes being saved!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        children: /*#__PURE__*/_jsxDEV(LeaveForm, {\n          formdata: formdata,\n          setFormdata: setFormdata,\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n        handleClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeaveTableStaff, \"ggb87/6+lOmVaCRWuj8t63T3xUs=\", false, function () {\n  return [useStyles, useRecoilState, useEmployeesContext, useLeavesContext];\n});\n\n_c = LeaveTableStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableStaff\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/LeaveTableStaff.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","TextField","MenuItem","Button","Icon","Alert","makeStyles","useRecoilState","loginLevelState","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveForm","CustomDialog","AlertDialog","useLeavesContext","useEmployeesContext","initial_form","name","to_date","from_date","reason","status","no_of_days","leave_bal","columns","title","field","editable","type","dateSetting","locale","editComponent","props","e","onChange","target","value","width","LeaveTableStaff","classes","useStyles","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","alertSuccess","setAlertSuccess","loginLevel","setLoginLevel","formdata","setFormdata","editEmployeeID","leaves","editLeaveID","updateLeave","addLeave","deleteLeave","setEditLeaveID","setIsLeaveEditingOn","setIsLeaveEditingOff","update_Leave","data","id","handleDialogOpen","add_Leave","delete_Leave","handleAlertOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","leavedata","filter","r","isdelete","console","log","Save_Leavedata","preventDefault","forEach","row","rec_id","fields","empid","loginUserId","root","maxWidth","paddingTop","item","map","Add","Edit","Delete","Clear","Check","Search","ResetSearch","rowData","disabled","icon","tooltip","onClick","event","isFreeAction","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { Alert} from \"@material-ui/lab\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTableStaff() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    editLeaveID,\r\n    updateLeave,\r\n    addLeave,\r\n    deleteLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n  } = useLeavesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadLeaves();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    //setEditLeaveID(\"\");\r\n    setFormdata(initial_form)\r\n    setFormdata(initial_form);\r\n    setIsLeaveEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    handleAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    // if (isLeaveEditing) {\r\n    //   loadEmpLeaves(editEmployeeID);\r\n    // }\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    //const index = leaves.findIndex((r) => r.id === id);\r\n    // console.log(\"leave delete\", index, leaves);\r\n    // leaves.splice(index, 1);\r\n    //deleteLeave(id);\r\n    const leavedata = leaves.filter((r) => r.id === editLeaveID);\r\n    leavedata[0].isdelete = true;\r\n    console.log(leaves);\r\n  };\r\n\r\n  const Save_Leavedata = (e) => {\r\n    e.preventDefault();\r\n\r\n    leaves.forEach((row) => {\r\n      if (row.isdelete) {\r\n        deleteLeave(row.id);\r\n      }\r\n      if (row.id) {\r\n        const { rec_id, ...fields } = row;\r\n        updateLeave({ id: editLeaveID, ...fields });\r\n      }\r\n      if (!row.id) {\r\n        addLeave({ ...row, empid: loginLevel.loginUserId });\r\n      }\r\n    });\r\n    setAlertSuccess(true)\r\n  };\r\n\r\n  // if (leaves_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Leaves</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves\r\n            .filter(\r\n              (item) => item.empid === loginLevel.loginUserId && !item.isdelete\r\n            )\r\n            .map((row) => {\r\n              return { ...row };\r\n            })}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   isEditable: (rowData) => rowData.status === \"Pending\",\r\n          //   isDeletable: (rowData) => rowData.status === \"Pending\",\r\n          //   onRowAdd: (newData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         add_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         update_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowDelete: (oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         delete_Leave(oldData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Leave(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => Save_Leavedata(e)}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n                {alertSuccess && (\r\n                  <Alert severity=\"success\" onClose={() => setAlertSuccess(false)}>\r\n                    Changes being saved!\r\n                  </Alert>\r\n                )}\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}