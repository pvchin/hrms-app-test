{"ast":null,"code":"import _slicedToArray from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import MaterialTable from\"material-table\";import{TextField,MenuItem}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import AddIcon from\"@material-ui/icons/Add\";import EditIcon from\"@material-ui/icons/Edit\";import DeleteIcon from\"@material-ui/icons/Delete\";import CheckIcon from\"@material-ui/icons/Check\";import SearchIcon from\"@material-ui/icons/Search\";import LeaveForm from\"./LeaveForm\";import{CustomDialog}from\"../helpers/CustomDialog\";import{AlertDialog}from\"../helpers/AlertDialog\";import{useExpensesContext}from\"../context/expenses_context\";import{useEmployeesContext}from\"../context/employees_context\";import{jsx as _jsx}from\"react/jsx-runtime\";var FILTERSTRING=\"Pending\";var columns=[{title:\"Name\",field:\"name\"},{title:\"Date\",field:\"date\",type:\"date\",dateSetting:{locale:\"en-GB\"}},{title:\"Description\",field:\"description\"},{title:\"Amount\",field:\"amount\",type:\"currency\"},{title:\"Status\",field:\"status\"}];export default function ExpenseTableView(){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDialogOpen=_useState2[0],setIsDialogOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isAlertOpen=_useState4[0],setIsAlertOpen=_useState4[1];var _useEmployeesContext=useEmployeesContext(),loadEmployees=_useEmployeesContext.loadEmployees;var _useExpensesContext=useExpensesContext(),expenses=_useExpensesContext.expenses,addExpense=_useExpensesContext.addExpense,expenses_loading=_useExpensesContext.expenses_loading,updateExpense=_useExpensesContext.updateExpense,deleteExpense=_useExpensesContext.deleteExpense,loadPendingExpenses=_useExpensesContext.loadPendingExpenses,getSingleExpense=_useExpensesContext.getSingleExpense,setEditExpenseID=_useExpensesContext.setEditExpenseID,setIsExpenseEditingOn=_useExpensesContext.setIsExpenseEditingOn,setIsExpenseEditingOff=_useExpensesContext.setIsExpenseEditingOff,resetSingleExpense=_useExpensesContext.resetSingleExpense;useEffect(function(){loadPendingExpenses(FILTERSTRING);},[]);var handleDialogOpen=function handleDialogOpen(){setIsDialogOpen(true);};var handleDialogClose=function handleDialogClose(){setIsDialogOpen(false);loadPendingExpenses(FILTERSTRING);};var handleAlertOpen=function handleAlertOpen(){setIsAlertOpen(true);};var handleAlertClose=function handleAlertClose(){setIsAlertOpen(false);};if(expenses_loading){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Loading...Expenses\"})});}return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:expenses,title:\"Leave Application\",options:{filtering:false,search:false,toolbar:false,headerStyle:{backgroundColor:\"orange\",color:\"primary\"},showTitle:false}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/ExpenseTableView.js"],"names":["React","useState","useEffect","MaterialTable","TextField","MenuItem","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveForm","CustomDialog","AlertDialog","useExpensesContext","useEmployeesContext","FILTERSTRING","columns","title","field","type","dateSetting","locale","ExpenseTableView","classes","useStyles","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","loadEmployees","expenses","addExpense","expenses_loading","updateExpense","deleteExpense","loadPendingExpenses","getSingleExpense","setEditExpenseID","setIsExpenseEditingOn","setIsExpenseEditingOff","resetSingleExpense","handleDialogOpen","handleDialogClose","handleAlertOpen","handleAlertClose","root","maxWidth","paddingTop","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTableView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    addExpense,\r\n    expenses_loading,\r\n    updateExpense,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingExpenses(FILTERSTRING);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  if (expenses_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}