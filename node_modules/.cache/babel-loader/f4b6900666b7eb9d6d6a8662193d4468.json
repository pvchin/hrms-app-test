{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { theme } from \"./components/theme\";\nimport { orange, lightBlue, deepPurple, deepOrange } from \"@material-ui/core/colors\";\nimport DashboardMain from \"./components/DashboardMain\";\nimport Main from \"./components/Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor\n      },\n      secondary: {\n        main: mainSecondaryColor\n      }\n    }\n  });\n  const lightTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: \"#4dabf5\"\n      },\n      secondary: {\n        main: \"#f73378\"\n      }\n    }\n  });\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: [\"//\", /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: lightTheme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(React.Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading profile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 35\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        checked: darkState,\n        onChange: handleThemeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), \"//\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 6\n  }, this);\n};\n\n_s(App, \"o410S+fC0BWK6UFj4ee8pB2qvk4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/App.js"],"names":["React","useState","ChakraProvider","createMuiTheme","ThemeProvider","CssBaseline","Switch","theme","orange","lightBlue","deepPurple","deepOrange","DashboardMain","Main","App","darkState","setDarkState","palletType","mainPrimaryColor","mainSecondaryColor","darkTheme","palette","type","primary","main","secondary","lightTheme","handleThemeChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SACEC,MADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,0BALP;AAMA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMgB,UAAU,GAAGF,SAAS,GAAG,MAAH,GAAY,OAAxC;AACA,QAAMG,gBAAgB,GAAGH,SAAS,GAAGP,MAAM,CAAC,GAAD,CAAT,GAAiBC,SAAS,CAAC,GAAD,CAA5D;AACA,QAAMU,kBAAkB,GAAGJ,SAAS,GAAGJ,UAAU,CAAC,GAAD,CAAb,GAAqBD,UAAU,CAAC,GAAD,CAAnE;AACA,QAAMU,SAAS,GAAGjB,cAAc,CAAC;AAC/BkB,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEL,UADC;AAEPM,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEN;AADC,OAFF;AAKPO,MAAAA,SAAS,EAAE;AACTD,QAAAA,IAAI,EAAEL;AADG;AALJ;AADsB,GAAD,CAAhC;AAWA,QAAMO,UAAU,GAAGvB,cAAc,CAAC;AAChCkB,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEL,UADC;AAEPM,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC,OAFF;AAKPC,MAAAA,SAAS,EAAE;AACTD,QAAAA,IAAI,EAAE;AADG;AALJ;AADuB,GAAD,CAAjC;;AAYA,QAAMG,iBAAiB,GAAG,MAAM;AAC9BX,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACG,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAER,KAAvB;AAAA,kCAEC,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEmB,UAAtB;AAAA,8BACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,+BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA1B;AAAA,iCAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA,eAQA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEX,SAAjB;AAA4B,QAAA,QAAQ,EAAEY;AAAtC;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAeD,CA/CD;;GAAMb,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { theme } from \"./components/theme\"\nimport {\n  orange,\n  lightBlue,\n  deepPurple,\n  deepOrange,\n} from \"@material-ui/core/colors\";\nimport DashboardMain from \"./components/DashboardMain\";\nimport Main from \"./components/Main\"\n\nconst App = () => {\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n      },\n    },\n  });\n  const lightTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: \"#4dabf5\",\n      },\n      secondary: {\n        main: \"#f73378\",\n      },\n    },\n  });\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  return (\n     <ChakraProvider theme={theme}>\n      \n    //<ThemeProvider theme={lightTheme}>\n      <CssBaseline />\n      <div>\n        <React.Suspense fallback={<h1>Loading profile...</h1>}>\n          {/* <DashboardMain /> */}\n          <Main />\n        </React.Suspense>\n      </div>\n      <Switch checked={darkState} onChange={handleThemeChange} />\n    //</ThemeProvider>\n     </ChakraProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}