{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\EmpEducations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Button, Icon, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useUpdateEducations } from \"./family/useUpdateEducations\";\nimport { useAddEducations } from \"./family/useAddEducations\";\nimport { useDeleteEducations } from \"./family/useDeleteEducations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Institution\",\n  field: \"institution\"\n}, {\n  title: \"Course\",\n  field: \"course\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || new Date()}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"Archievement\",\n  field: \"archievement\"\n}, {\n  title: \"Grade\",\n  field: \"grade\"\n}, {\n  title: \"Remark\",\n  field: \"remark\"\n}];\nexport default function Emp_Educations({\n  educationdata,\n  setEducationdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    educations,\n    setEducationId\n  } = useEducations();\n  const updateEducations = useUpdateEducations();\n  const addEducations = useAddEducations();\n  const deleteEducations = useDeleteEducations();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  useEffect(() => {\n    setEducationId(editEmployeeID);\n  }, []);\n\n  const update_Education = data => {\n    const {\n      id,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    updateEducations({\n      id,\n      ...fields\n    });\n  };\n\n  const add_Education = data => {\n    addEducations({ ...data,\n      empid: editEmployeeID\n    });\n  };\n\n  const delete_Education = data => {\n    const {\n      id\n    } = data;\n    deleteEducations(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: educations,\n        title: \"Education\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              //setEducationdata([...educationdata, newData]);\n              add_Education(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // const dataUpdate = [...educationdata];\n              // const index = oldData.tableData.id;\n              // dataUpdate[index] = newData;\n              // setEducationdata([...dataUpdate]);\n              update_Education(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // const dataDelete = [...educationdata];\n              // const index = oldData.tableData.id;\n              // dataDelete.splice(index, 1);\n              delete_Education(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Emp_Educations, \"L7cQn5bqsYBusmdLjcS00FnPu6U=\", true, function () {\n  return [useStyles, useUpdateEducations, useAddEducations, useDeleteEducations, useEmployeesContext];\n});\n\n_c = Emp_Educations;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp_Educations\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/EmpEducations.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","Button","Icon","TextField","makeStyles","useEmployeesContext","useTablesContext","useUpdateEducations","useAddEducations","useDeleteEducations","columns","title","field","type","dateSetting","locale","editComponent","props","e","onChange","target","value","Emp_Educations","educationdata","setEducationdata","handleDialogClose","classes","useStyles","educations","setEducationId","useEducations","updateEducations","addEducations","deleteEducations","editEmployeeID","update_Education","data","id","rec_id","tableData","fields","add_Education","empid","delete_Education","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useUpdateEducations } from \"./family/useUpdateEducations\";\r\nimport { useAddEducations } from \"./family/useAddEducations\";\r\nimport { useDeleteEducations } from \"./family/useDeleteEducations\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField onChange={(e) => props.onChange(e.target.value)} type=\"date\" />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Archievement\",\r\n    field: \"archievement\",\r\n  },\r\n\r\n  { title: \"Grade\", field: \"grade\" },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations({\r\n  educationdata,\r\n  setEducationdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { educations, setEducationId } = useEducations();\r\n  const updateEducations = useUpdateEducations();\r\n  const addEducations = useAddEducations();\r\n  const deleteEducations = useDeleteEducations();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  \r\n  useEffect(() => {\r\n    setEducationId(editEmployeeID);\r\n  }, []);\r\n  \r\n  const update_Education = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateEducations({ id, ...fields });\r\n  };\r\n\r\n  const add_Education = (data) => {\r\n    addEducations({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Education = (data) => {\r\n    const { id } = data;\r\n    deleteEducations(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={educations}\r\n          title=\"Education\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  //setEducationdata([...educationdata, newData]);\r\n                  add_Education(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataUpdate = [...educationdata];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataUpdate[index] = newData;\r\n                  // setEducationdata([...dataUpdate]);\r\n                  update_Education(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataDelete = [...educationdata];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataDelete.splice(index, 1);\r\n                  delete_Education(oldData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}