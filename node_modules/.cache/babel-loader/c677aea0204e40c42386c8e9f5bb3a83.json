{"ast":null,"code":"import _defineProperty from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import MaterialTable from\"material-table\";import clsx from\"clsx\";import{useHistory}from\"react-router-dom\";import{Button,Paper,Grid,Icon,Divider,TextField,NativeSelect,InputLabel}from\"@material-ui/core\";import{useRecoilState}from\"recoil\";import{useEmployeesContext}from\"../context/employees_context\";import{usePayslipsContext}from\"../context/payslips_context\";import{useExpensesContext}from\"../context/expenses_context\";import{useDailyAllowancesContext}from\"../context/dailyallowances_context\";import{payrunState,payrunIdState}from\"./data/atomdata\";//const drawerWidth = 240;\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[{title:\"Name\",field:\"name\",editable:\"never\",cellStyle:{width:280,maxWidth:280}}];var selectmonths=[{mth:\"January\"},{mth:\"February\"},{mth:\"March\"},{mth:\"April\"},{mth:\"May\"},{mth:\"June\"},{mth:\"July\"},{mth:\"August\"},{mth:\"September\"},{mth:\"October\"},{mth:\"November\"},{mth:\"December\"}];var Payrun=function Payrun(){var history=useHistory();var date=new Date();var longMonth=date.toLocaleString(\"en-us\",{month:\"long\"});var classes=useStyles();var fixedHeightPaper=clsx(classes.paper,classes.fixedHeight);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loadPaybatch=_useState2[0],setLoadPaybatch=_useState2[1];var _useEmployeesContext=useEmployeesContext(),loadEmployees=_useEmployeesContext.loadEmployees,employees=_useEmployeesContext.employees;var _useExpensesContext=useExpensesContext(),loadUnpaidExpenses=_useExpensesContext.loadUnpaidExpenses,expenses=_useExpensesContext.expenses,unpaidexpenses=_useExpensesContext.unpaidexpenses,updateExpense=_useExpensesContext.updateExpense;var _useDailyAllowancesCo=useDailyAllowancesContext(),unpaiddailyallows=_useDailyAllowancesCo.unpaiddailyallows,loadUnpaidDailyAllows=_useDailyAllowancesCo.loadUnpaidDailyAllows,updateDailyAllowance=_useDailyAllowancesCo.updateDailyAllowance;var _usePayslipsContext=usePayslipsContext(),addPayrun=_usePayslipsContext.addPayrun,getPayrun=_usePayslipsContext.getPayrun,payrun=_usePayslipsContext.payrun,payrun_loading=_usePayslipsContext.payrun_loading,addPayslip=_usePayslipsContext.addPayslip,resetPayslipsData=_usePayslipsContext.resetPayslipsData,singlebatch_payslip_loading=_usePayslipsContext.singlebatch_payslip_loading,setPayslipPeriod=_usePayslipsContext.setPayslipPeriod;var _useRecoilState=useRecoilState(payrunState),_useRecoilState2=_slicedToArray(_useRecoilState,2),input=_useRecoilState2[0],setInput=_useRecoilState2[1];var _useRecoilState3=useRecoilState(payrunIdState),_useRecoilState4=_slicedToArray(_useRecoilState3,2),payrunId=_useRecoilState4[0],setPayrunId=_useRecoilState4[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),errornoselect=_useState8[0],setErrornoselect=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isPayrunExist=_useState10[0],setIsPayrunExist=_useState10[1];useEffect(function(){if(!payrun_loading){setLoadPaybatch(false);}},[loadPaybatch]);function formatDate(string){var options={year:\"numeric\",month:\"long\",day:\"numeric\"};return new Date(string).toLocaleDateString(\"en-GB\",options);}function formatPayrun(){var yy=input.fromdate.substring(0,4)+\"-\"+input.fromdate.substring(5,7);var mm=input.fromdate.substring(5,7);var d=input.fromdate;}var payrunExists=function payrunExists(data){return payrun.some(function(el){return el.payrun===data;});};var handleChange=function handleChange(e){setInput(_objectSpread(_objectSpread({},input),{},_defineProperty({},e.target.name,e.target.value)));};var handlePayrunSubmit=function handlePayrunSubmit(e){e.preventDefault();setPayrunId(\"\");var count=employees.reduce(function(acc,r){if(r.tableData.checked){return acc+1;}else{return acc;}},0);//console.log(\"count\", count);\nif(count===0){setErrornoselect(true);setTimeout(function(){setErrornoselect(false);},3000);return null;}var period=formatDate(input.fromdate)+\" - \"+formatDate(input.todate);var payrundata=input.fromdate.substring(0,4)+\"-\"+input.fromdate.substring(5,7);setInput(_objectSpread(_objectSpread({},input),{},{period:period,payrun:payrundata}));formatPayrun();setPayslipPeriod(payrundata);var isExist=payrunExists(payrundata);if(isExist){//console.log(\"exist\");\nsetIsPayrunExist(true);setAlert(true);}else{//console.log(\"add\");\nadd_Payrun(period,payrundata);checkSelectedEmployees(period,payrundata);setIsPayrunExist(false);setAlert(true);setLoadPaybatch(true);}};var checkSelectedEmployees=function checkSelectedEmployees(period,payrun){//console.log(\"payrun\", payrun, period);\nresetPayslipsData();employees&&employees.forEach(function(emp,index){if(emp.tableData.checked){var exp=0;if(unpaidexpenses){unpaidexpenses.filter(function(r){return r.empid===emp.id;}).map(function(i){updateExpense({id:i.id,payrun:payrun});return exp=exp+i.amount;});}var allows=0;if(unpaiddailyallows){unpaiddailyallows.filter(function(r){return r.empid===emp.id;}).map(function(i){updateDailyAllowance({id:i.id,payrun:payrun});return allows=allows+i.amount;});}var id=emp.id,name=emp.name,bank_name=emp.bank_name,bank_acno=emp.bank_acno,basic_salary=emp.basic_salary,tap_acno=emp.tap_acno,scp_acno=emp.scp_acno;var tmptotalallows=allows+exp;var tmptotalTAP=Math.ceil(basic_salary*0.05);var tmptotalSCP=Math.round((basic_salary+Number.EPSILON)*0.035*100)/100;var tmpnettpay=basic_salary+tmptotalallows-tmptotalTAP-tmptotalSCP;var data={name:name,period:period,pay_date:input.pay_date,payrun:payrun,wages:basic_salary,nett_pay:tmpnettpay,bank_name:bank_name,bank_acno:bank_acno,tap_acno:tap_acno,tap_amount:tmptotalTAP,scp_acno:scp_acno,scp_amount:tmptotalSCP,total_allowances:tmptotalallows,total_deductions:0,empid:id,status:\"Pending\",allows_type1:\"Site Allowances\",allows_type1amt:allows,allows_type2:\"Expenses Claims\",allows_type2amt:exp,allows_type3:\" \",allows_type3amt:0,allows_type4:\" \",allows_type4amt:0,allows_type5:\" \",allows_type5amt:0,allows_type6:\" \",allows_type6amt:0,allows_type7:\" \",allows_type7amt:0,allows_type8:\" \",allows_type8amt:0,deducts_type1:\" \",deducts_type1amt:0,deducts_type2:\" \",deducts_type2amt:0,deducts_type3:\" \",deducts_type3amt:0,deducts_type4:\" \",deducts_type4amt:0,deducts_type5:\" \",deducts_type5amt:0,deducts_type6:\" \",deducts_type6amt:0,deducts_type7:\" \",deducts_type7amt:0,deducts_type8:\" \",deducts_type8amt:0};addPayslip(_objectSpread({},data));}});};var handleNext=function handleNext(){history.push(\"/payrunbatch\");};var add_Payrun=function add_Payrun(period,payrun){//update payrun\naddPayrun({pay_freq:input.payfreq,from_date:input.fromdate,to_date:input.todate,pay_date:input.paydate,period:period,payrun:payrun,status:\"Pending\"});getPayrun();};useEffect(function(){loadEmployees();loadUnpaidExpenses();loadUnpaidDailyAllows();getPayrun();},[]);// useEffect(() => {\n//   loadUnpaidDailyAllows();\n// }, []);\n// useEffect(() => {\n//   console.log(\"useEffect here\", input.payrun);\n//   // getSingleBatchPayslip(input.payrun);\n//   if (singlebatchpayslip) {\n//     checkSelectedEmployees(input.period, input.payrun);\n//     setLoadPaybatch(false);\n//   }\n// }, [loadPaybatch]);\n//   useEffect(() => {\n//     if (input.period && input.payrun) {\n//       //add_Payrun();\n//       setAlert(true);\n//     }\n//   }, [input]);\nreturn/*#__PURE__*/_jsx(Paper,{className:fixedHeightPaper,style:{backgroundColor:\"black\"},children:/*#__PURE__*/_jsx(\"section\",{className:classes.section,children:/*#__PURE__*/_jsxs(Grid,{direction:\"row\",container:true,spacing:1// style={{ border: \"1px solid white\" }}\n,children:[/*#__PURE__*/_jsx(Grid,{container:true,item:true,sm:3,style:{border:\"1px solid white\"},direction:\"column\",align:\"left\",children:/*#__PURE__*/_jsxs(\"article\",{className:classes.jobinfo,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pay Run\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handlePayrunSubmit,children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Pay Frequency\",variant:\"filled\",required:true,defaultValue:\"Monthly\",style:{width:\"100%\"},name:\"payfreq\",value:input.payfreq,onChange:function onChange(e){return handleChange(e);}// select\n})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"From Date\",variant:\"filled\",name:\"fromdate\",type:\"date\",value:input.fromdate,required:true,style:{width:\"100%\"},onChange:function onChange(e){return handleChange(e);},InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"To Date\",variant:\"filled\",type:\"date\",name:\"todate\",value:input.todate,required:true,onChange:function onChange(e){return handleChange(e);},style:{width:\"100%\"},InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{label:\"Payment Date\",variant:\"filled\",type:\"date\",name:\"paydate\",value:input.paydate,required:true,style:{width:\"100%\"},onChange:function onChange(e){return handleChange(e);},InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.button,children:[\"Submit \",/*#__PURE__*/_jsx(Icon,{className:classes.rightIcon,children:\"send\"})]}),alert&&!isPayrunExist&&/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.button,onClick:handleNext,children:[\"Next \",/*#__PURE__*/_jsx(Icon,{className:classes.rightIcon,children:\"send\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[alert&&!isPayrunExist&&!singlebatch_payslip_loading&&/*#__PURE__*/_jsx(\"h3\",{children:\"New Payrun being added!\"}),alert&&isPayrunExist&&/*#__PURE__*/_jsx(\"h3\",{children:\"This payrun already existed!\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsx(\"h3\",{children:\"This Payrun period already existed!\"}),errornoselect&&/*#__PURE__*/_jsx(\"h3\",{children:\"You must select employees!\"})]})]})]})}),/*#__PURE__*/_jsx(Divider,{orientation:\"vertical\",flexItem:true,style:{background:\"white\"}}),/*#__PURE__*/_jsx(Grid,{container:true,item:true,sm:3,style:{border:\"1px solid white\"},align:\"right\",children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:employees,title:\"Payrun History\",options:{filtering:false,search:false,toolbar:false,selection:true,headerStyle:{backgroundColor:\"orange\",color:\"primary\"},showTitle:false}})})]})})});};var useStyles=makeStyles(function(theme){return{root:{flexGrow:1},button:{margin:theme.spacing(1)},container:{margin:0,padding:0,width:\"80vw\",display:\"grid\",gridTemplateColumns:\"repeat(auto-fill,250px)\",gridAutoRows:\"10px\",position:\"absolute\",left:\"50%\",transform:\"translateX(-50%)\",justifyContent:\"center\",backgroundColor:\"primary\"},fixedHeight:{height:800},paper:{padding:theme.spacing(10),// display: \"flex\",\ndisplay:\"flex\",overflow:\"auto\",flexDirection:\"column\",border:\"1px solid\",width:\"100%\",color:\"primary\",bcakgroundColor:\"black\"},card:{backgroundColor:\"black\"},section:{width:\"95vw\",margin:\"5rem auto\",maxWidth:\"var(--max-width)\"},underline:{width:\"5rem\",height:\"0.25rem\",marginBottom:\"1.25rem\",background:\"var(--clr-primary-5)\",marginLeft:\"auto\",marginRight:\"auto\"},title:{marginbottom:\"4rem\",textAlign:\"center\"},jobscenter:{width:\"80vw\",margin:\"0 auto\",maxWidth:\"var(--max-width)\",flexDirection:\"row\"},btncontainer:{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",marginBottom:\"4rem\",flexWrap:\"wrap\"},jobbtn:{background:\"transparent\",borderColor:\"transparent\",textTransform:\"capitalize\",fontSize:\"1.25rem\",letterSpacing:\"var(--spacing)\",margin:\"0 0.5rem\",transition:\"var(--transition)\",cursor:\"pointer\",padding:\"0.25rem 0\",lineHeight:\"1\",outlineColor:\"var(--clr-primary-10)\",\"&:hover\":{color:\"var(--clr-primary-5)\",boxShadow:\"0 2px var(--clr-primary-5)\"}},activebtn:{color:\"var(--clr-primary-5)\",boxShadow:\"0 2px var(--clr-primary-5)\"},jobinfo:{fontWeight:\"400\"},rightIcon:{marginLeft:theme.spacing(1)},formLabel:{fontSize:12,textAlign:\"left\",marginLeft:8,marginTop:5}};});export default Payrun;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/Payrun.js"],"names":["React","useState","useEffect","makeStyles","MaterialTable","clsx","useHistory","Button","Paper","Grid","Icon","Divider","TextField","NativeSelect","InputLabel","useRecoilState","useEmployeesContext","usePayslipsContext","useExpensesContext","useDailyAllowancesContext","payrunState","payrunIdState","columns","title","field","editable","cellStyle","width","maxWidth","selectmonths","mth","Payrun","history","date","Date","longMonth","toLocaleString","month","classes","useStyles","fixedHeightPaper","paper","fixedHeight","loadPaybatch","setLoadPaybatch","loadEmployees","employees","loadUnpaidExpenses","expenses","unpaidexpenses","updateExpense","unpaiddailyallows","loadUnpaidDailyAllows","updateDailyAllowance","addPayrun","getPayrun","payrun","payrun_loading","addPayslip","resetPayslipsData","singlebatch_payslip_loading","setPayslipPeriod","input","setInput","payrunId","setPayrunId","alert","setAlert","error","setError","errornoselect","setErrornoselect","isPayrunExist","setIsPayrunExist","formatDate","string","options","year","day","toLocaleDateString","formatPayrun","yy","fromdate","substring","mm","d","payrunExists","data","some","el","handleChange","e","target","name","value","handlePayrunSubmit","preventDefault","count","reduce","acc","r","tableData","checked","setTimeout","period","todate","payrundata","isExist","add_Payrun","checkSelectedEmployees","forEach","emp","index","exp","filter","empid","id","map","i","amount","allows","bank_name","bank_acno","basic_salary","tap_acno","scp_acno","tmptotalallows","tmptotalTAP","Math","ceil","tmptotalSCP","round","Number","EPSILON","tmpnettpay","pay_date","wages","nett_pay","tap_amount","scp_amount","total_allowances","total_deductions","status","allows_type1","allows_type1amt","allows_type2","allows_type2amt","allows_type3","allows_type3amt","allows_type4","allows_type4amt","allows_type5","allows_type5amt","allows_type6","allows_type6amt","allows_type7","allows_type7amt","allows_type8","allows_type8amt","deducts_type1","deducts_type1amt","deducts_type2","deducts_type2amt","deducts_type3","deducts_type3amt","deducts_type4","deducts_type4amt","deducts_type5","deducts_type5amt","deducts_type6","deducts_type6amt","deducts_type7","deducts_type7amt","deducts_type8","deducts_type8amt","handleNext","push","pay_freq","payfreq","from_date","to_date","paydate","backgroundColor","section","border","jobinfo","shrink","button","rightIcon","background","filtering","search","toolbar","selection","headerStyle","color","showTitle","theme","root","flexGrow","margin","spacing","container","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","overflow","flexDirection","bcakgroundColor","card","underline","marginBottom","marginLeft","marginRight","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","fontWeight","formLabel","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  TextField,\r\n  NativeSelect,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { payrunState, payrunIdState } from \"./data/atomdata\";\r\n\r\n//const drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst selectmonths = [\r\n  { mth: \"January\" },\r\n  { mth: \"February\" },\r\n  { mth: \"March\" },\r\n  { mth: \"April\" },\r\n  { mth: \"May\" },\r\n  { mth: \"June\" },\r\n  { mth: \"July\" },\r\n  { mth: \"August\" },\r\n  { mth: \"September\" },\r\n  { mth: \"October\" },\r\n  { mth: \"November\" },\r\n  { mth: \"December\" },\r\n];\r\n\r\nconst Payrun = () => {\r\n  let history = useHistory();\r\n  let date = new Date();\r\n  let longMonth = date.toLocaleString(\"en-us\", { month: \"long\" });\r\n\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loadPaybatch, setLoadPaybatch] = useState(false);\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadUnpaidExpenses, expenses, unpaidexpenses, updateExpense } =\r\n    useExpensesContext();\r\n  const { unpaiddailyallows, loadUnpaidDailyAllows, updateDailyAllowance } =\r\n    useDailyAllowancesContext();\r\n  const {\r\n    addPayrun,\r\n    getPayrun,\r\n    payrun,\r\n    payrun_loading,\r\n    addPayslip,\r\n    resetPayslipsData,\r\n    singlebatch_payslip_loading,\r\n    setPayslipPeriod,\r\n  } = usePayslipsContext();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errornoselect, setErrornoselect] = useState(false);\r\n  const [isPayrunExist, setIsPayrunExist] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!payrun_loading) {\r\n      setLoadPaybatch(false);\r\n    }\r\n  }, [loadPaybatch]);\r\n\r\n  function formatDate(string) {\r\n    var options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\r\n  }\r\n\r\n  function formatPayrun() {\r\n    const yy =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    const mm = input.fromdate.substring(5, 7);\r\n    const d = input.fromdate;\r\n  }\r\n\r\n  const payrunExists = (data) => {\r\n    return payrun.some(function (el) {\r\n      return el.payrun === data;\r\n    });\r\n  };\r\n  const handleChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePayrunSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPayrunId(\"\");\r\n    var count = employees.reduce((acc, r) => {\r\n      if (r.tableData.checked) {\r\n        return acc + 1;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    //console.log(\"count\", count);\r\n    if (count === 0) {\r\n      setErrornoselect(true);\r\n      setTimeout(() => {\r\n        setErrornoselect(false);\r\n      }, 3000);\r\n      return null;\r\n    }\r\n\r\n    const period =\r\n      formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\r\n    const payrundata =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    setInput({ ...input, period: period, payrun: payrundata });\r\n    formatPayrun();\r\n    setPayslipPeriod(payrundata);\r\n    const isExist = payrunExists(payrundata);\r\n\r\n    if (isExist) {\r\n      //console.log(\"exist\");\r\n      setIsPayrunExist(true);\r\n      setAlert(true);\r\n    } else {\r\n      //console.log(\"add\");\r\n      add_Payrun(period, payrundata);\r\n      checkSelectedEmployees(period, payrundata);\r\n      setIsPayrunExist(false);\r\n      setAlert(true);\r\n      setLoadPaybatch(true);\r\n    }\r\n  };\r\n\r\n  const checkSelectedEmployees = (period, payrun) => {\r\n    //console.log(\"payrun\", payrun, period);\r\n    resetPayslipsData();\r\n    employees &&\r\n      employees.forEach((emp, index) => {\r\n        if (emp.tableData.checked) {\r\n          let exp = 0;\r\n          if (unpaidexpenses) {\r\n            unpaidexpenses\r\n              .filter((r) => r.empid === emp.id)\r\n              .map((i) => {\r\n                updateExpense({ id: i.id, payrun: payrun });\r\n                return (exp = exp + i.amount);\r\n              });\r\n          }\r\n          let allows = 0;\r\n          if (unpaiddailyallows) {\r\n            unpaiddailyallows\r\n              .filter((r) => r.empid === emp.id)\r\n              .map((i) => {\r\n                updateDailyAllowance({ id: i.id, payrun: payrun });\r\n                return (allows = allows + i.amount);\r\n              });\r\n          }\r\n\r\n          const {\r\n            id,\r\n            name,\r\n            bank_name,\r\n            bank_acno,\r\n            basic_salary,\r\n            tap_acno,\r\n            scp_acno,\r\n          } = emp;\r\n          const tmptotalallows = allows + exp;\r\n          const tmptotalTAP = Math.ceil(basic_salary * 0.05);\r\n          const tmptotalSCP =\r\n            Math.round((basic_salary + Number.EPSILON) * 0.035 * 100) / 100;\r\n          const tmpnettpay =\r\n            basic_salary + tmptotalallows - tmptotalTAP - tmptotalSCP;\r\n          const data = {\r\n            name: name,\r\n            period: period,\r\n            pay_date: input.pay_date,\r\n            payrun: payrun,\r\n            wages: basic_salary,\r\n            nett_pay: tmpnettpay,\r\n            bank_name: bank_name,\r\n            bank_acno: bank_acno,\r\n            tap_acno: tap_acno,\r\n            tap_amount: tmptotalTAP,\r\n            scp_acno: scp_acno,\r\n            scp_amount: tmptotalSCP,\r\n            total_allowances: tmptotalallows,\r\n            total_deductions: 0,\r\n            empid: id,\r\n            status: \"Pending\",\r\n            allows_type1: \"Site Allowances\",\r\n            allows_type1amt: allows,\r\n            allows_type2: \"Expenses Claims\",\r\n            allows_type2amt: exp,\r\n            allows_type3: \" \",\r\n            allows_type3amt: 0,\r\n            allows_type4: \" \",\r\n            allows_type4amt: 0,\r\n            allows_type5: \" \",\r\n            allows_type5amt: 0,\r\n            allows_type6: \" \",\r\n            allows_type6amt: 0,\r\n            allows_type7: \" \",\r\n            allows_type7amt: 0,\r\n            allows_type8: \" \",\r\n            allows_type8amt: 0,\r\n            deducts_type1: \" \",\r\n            deducts_type1amt: 0,\r\n            deducts_type2: \" \",\r\n            deducts_type2amt: 0,\r\n            deducts_type3: \" \",\r\n            deducts_type3amt: 0,\r\n            deducts_type4: \" \",\r\n            deducts_type4amt: 0,\r\n            deducts_type5: \" \",\r\n            deducts_type5amt: 0,\r\n            deducts_type6: \" \",\r\n            deducts_type6amt: 0,\r\n            deducts_type7: \" \",\r\n            deducts_type7amt: 0,\r\n            deducts_type8: \" \",\r\n            deducts_type8amt: 0,\r\n          };\r\n          addPayslip({ ...data });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  const add_Payrun = (period, payrun) => {\r\n    //update payrun\r\n    addPayrun({\r\n      pay_freq: input.payfreq,\r\n      from_date: input.fromdate,\r\n      to_date: input.todate,\r\n      pay_date: input.paydate,\r\n      period: period,\r\n      payrun: payrun,\r\n      status: \"Pending\",\r\n    });\r\n    getPayrun();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n    loadUnpaidExpenses();\r\n    loadUnpaidDailyAllows();\r\n    getPayrun();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadUnpaidDailyAllows();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"useEffect here\", input.payrun);\r\n\r\n  //   // getSingleBatchPayslip(input.payrun);\r\n  //   if (singlebatchpayslip) {\r\n  //     checkSelectedEmployees(input.period, input.payrun);\r\n  //     setLoadPaybatch(false);\r\n  //   }\r\n  // }, [loadPaybatch]);\r\n\r\n  //   useEffect(() => {\r\n  //     if (input.period && input.payrun) {\r\n  //       //add_Payrun();\r\n\r\n  //       setAlert(true);\r\n  //     }\r\n  //   }, [input]);\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          // style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            style={{ border: \"1px solid white\" }}\r\n            direction=\"column\"\r\n            align=\"left\"\r\n          >\r\n            <article className={classes.jobinfo}>\r\n              <h2>Pay Run</h2>\r\n              <form onSubmit={handlePayrunSubmit}>\r\n                <div>\r\n                  {/* <InputLabel\r\n                    htmlFor=\"deduct-customized-native-simple\"\r\n                    className={classes.formLabel}\r\n                  >\r\n                    Copy From\r\n                  </InputLabel>\r\n                  <NativeSelect\r\n                    name=\"copyfrom\"\r\n                    value={\"New\"}\r\n                    style={{\r\n                      padding: 4,\r\n                      marginLeft: 5,\r\n                      width: \"100%\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    <option value=\"\">New</option>\r\n                    {payrun.map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.payrun}>\r\n                          {row.payrun}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect> */}\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Pay Frequency\"\r\n                    variant=\"filled\"\r\n                    required\r\n                    defaultValue=\"Monthly\"\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"payfreq\"\r\n                    value={input.payfreq}\r\n                    onChange={(e) => handleChange(e)}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Weekly\">Weekly</MenuItem> */}\r\n                    {/* <MenuItem value=\"Monthly\">Monthly</MenuItem> */}\r\n                  </TextField>\r\n                </div>\r\n                {/* <div>\r\n                  <InputLabel\r\n                    htmlFor=\"deduct-customized-native-simple\"\r\n                    className={classes.formLabel}\r\n                  >\r\n                    Month\r\n                  </InputLabel>\r\n                  <NativeSelect\r\n                    name=\"selectmonth\"\r\n                    defaultValue={longMonth}\r\n                    // value={input.selectmonth}\r\n                    style={{\r\n                      padding: 4,\r\n                      marginLeft: 5,\r\n                      width: \"100%\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    {selectmonths.map((row, i) => {\r\n                      return (\r\n                        <option key={i} value={row.mth}>\r\n                          {row.mth}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect>\r\n                </div> */}\r\n                <div>\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    variant=\"filled\"\r\n                    name=\"fromdate\"\r\n                    type=\"date\"\r\n                    value={input.fromdate}\r\n                    required\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"todate\"\r\n                    value={input.todate}\r\n                    required\r\n                    onChange={(e) => handleChange(e)}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Payment Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"paydate\"\r\n                    value={input.paydate}\r\n                    required\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {alert && !isPayrunExist && (\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={handleNext}\r\n                    >\r\n                      Next <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {alert && !isPayrunExist && !singlebatch_payslip_loading && (\r\n                    <h3>New Payrun being added!</h3>\r\n                  )}\r\n                  {alert && isPayrunExist && (\r\n                    <h3>This payrun already existed!</h3>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {error && <h3>This Payrun period already existed!</h3>}\r\n                  {errornoselect && <h3>You must select employees!</h3>}\r\n                </div>\r\n              </form>\r\n            </article>\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ background: \"white\" }}\r\n          />\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            style={{ border: \"1px solid white\" }}\r\n            align=\"right\"\r\n          >\r\n            <MaterialTable\r\n              columns={columns}\r\n              data={employees}\r\n              title=\"Payrun History\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n                selection: true,\r\n                headerStyle: {\r\n                  backgroundColor: \"orange\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"95vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  formLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    marginLeft: 8,\r\n    marginTop: 5,\r\n  },\r\n}));\r\n\r\nexport default Payrun;\r\n"]},"metadata":{},"sourceType":"module"}