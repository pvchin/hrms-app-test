{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { employees_url } from \"../../utils/constants\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getSingleEmployee(empid) {\n  const {\n    data\n  } = await axios.get(`${employees_url}?fv=${empid}`);\n  return data;\n}\n\nexport function useSingleEmployee() {\n  _s();\n\n  const [singleemployeeId, setSingleemployeeId] = useState(\"\");\n  const fallback = [];\n  const {\n    data: singleemployee = fallback\n  } = useQuery(queryKeys.singleemployee, getSingleEmployee);\n  return {\n    singleemployee,\n    setSingleemployeeId\n  };\n}\n\n_s(useSingleEmployee, \"kvp07qKh3jdHjR9Zk/0gGO3QNhE=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/employees/useSingleEmployee.js"],"names":["useQuery","employees_url","axios","queryKeys","getSingleEmployee","empid","data","get","useSingleEmployee","singleemployeeId","setSingleemployeeId","useState","fallback","singleemployee"],"mappings":";;AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,iBAAf,CAAiCC,KAAjC,EAAwC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEN,aAAc,OAAMI,KAAM,EAAvC,CAAvB;AACA,SAAOC,IAAP;AACD;;AAED,OAAO,SAASE,iBAAT,GAA6B;AAAA;;AAC/B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CC,QAAQ,CAAC,EAAD,CAAxD;AACH,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEN,IAAAA,IAAI,EAAEO,cAAc,GAAGD;AAAzB,MAAsCZ,QAAQ,CAClDG,SAAS,CAACU,cADwC,EAElDT,iBAFkD,CAApD;AAKA,SAAO;AAAES,IAAAA,cAAF;AAAkBH,IAAAA;AAAlB,GAAP;AACD;;GATeF,iB;UAG8BR,Q","sourcesContent":["\r\nimport { useQuery } from \"react-query\";\r\nimport { employees_url } from \"../../utils/constants\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getSingleEmployee(empid) {\r\n  const { data } = await axios.get(`${employees_url}?fv=${empid}`);\r\n  return data;\r\n}\r\n\r\nexport function useSingleEmployee() {\r\n     const [singleemployeeId, setSingleemployeeId] = useState(\"\");\r\n  const fallback = [];\r\n  const { data: singleemployee = fallback } = useQuery(\r\n    queryKeys.singleemployee,\r\n    getSingleEmployee\r\n  );\r\n\r\n  return { singleemployee, setSingleemployeeId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}