{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\DailyAllowancesTableViewStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Grid, ListItem, ListItemText } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSetRecoilState, useRecoilValue, useRecoilState, useRecoilValueLoadable } from \"recoil\";\nimport { allowsPeriodState, allowsDataState, empidState, loginLevelState } from \"./data/atomdata\";\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\"; //import { useEmployeesContext } from \"../context/employees_context\";\n\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTERSTRING = \"Pending\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Period\",\n  field: \"period\"\n}, {\n  title: \"Location\",\n  field: \"location\"\n}, {\n  title: \"Manager\",\n  field: \"manager_name\"\n}, {\n  title: \"Days\",\n  field: \"no_of_days\",\n  type: \"numeric\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"currency\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function DailyAllowancesTableViewStaff() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\n  const allows_period = useRecoilValue(allowsPeriodState);\n  const allows_empid = useRecoilValue(empidState);\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\n  const setEmpID = useSetRecoilState(empidState);\n  const title = `Site Allowances (${allows_period})`;\n  const {\n    dailyallowances,\n    loadEmpDailyAllowances,\n    dailyallowances_loading,\n    dailyallowances_error\n  } = useDailyAllowancesContext();\n  useEffect(() => {\n    loadEmpDailyAllowances(loginLevel.loginUserId);\n  }, []);\n\n  const handleDialogOpen = () => {\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false); //getSingleBatchDailyAllowance(dailyallowance_period);\n  };\n\n  if (dailyallowances_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... daily allowances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (dailyallowances_error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internet connections problem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: dailyallowances.filter(i => i.empid === loginLevel.loginUserId).map(row => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 2,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: row.period\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 5,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: row.no_of_days\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 2,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: row.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: row.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DailyAllowancesTableViewStaff, \"DddrLAOLapKV/IA0eQ4f1Y68JUY=\", false, function () {\n  return [useHistory, useStyles, useRecoilState, useRecoilValue, useRecoilValue, useRecoilState, useSetRecoilState, useDailyAllowancesContext];\n});\n\n_c = DailyAllowancesTableViewStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  dialog: {\n    width: 1000\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyAllowancesTableViewStaff\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/DailyAllowancesTableViewStaff.js"],"names":["React","useState","useEffect","useHistory","Link","Grid","ListItem","ListItemText","makeStyles","useSetRecoilState","useRecoilValue","useRecoilState","useRecoilValueLoadable","allowsPeriodState","allowsDataState","empidState","loginLevelState","fetchDailyAllowancesSelector","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","ArrowBackIcon","CustomDialog","useDailyAllowancesContext","DailyAllowsDetlsTable","FILTERSTRING","columns","title","field","type","DailyAllowancesTableViewStaff","history","classes","useStyles","loginLevel","setLoginLevel","isDialogOpen","setIsDialogOpen","tmpallowsdata","setTmpallowsdata","allows_period","allows_empid","allowsdata","setAllowsdata","setEmpID","dailyallowances","loadEmpDailyAllowances","dailyallowances_loading","dailyallowances_error","loginUserId","handleDialogOpen","handleDialogClose","root","filter","i","empid","map","row","period","no_of_days","amount","status","id","theme","padding","dialog","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Grid, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager\", field: \"manager_name\" },\r\n  { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTableViewStaff() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances,\r\n    loadEmpDailyAllowances,\r\n    dailyallowances_loading,\r\n    dailyallowances_error,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    loadEmpDailyAllowances(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  if (dailyallowances_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (dailyallowances_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connections problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        {dailyallowances\r\n          .filter((i) => i.empid === loginLevel.loginUserId)\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                {/* <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid> */}\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.period}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={5} align=\"center\">\r\n                  <ListItemText>{row.no_of_days}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.amount}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}