{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import MaterialTable,{MTableToolbar}from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import AddIcon from\"@material-ui/icons/Add\";import EditIcon from\"@material-ui/icons/Edit\";import DeleteIcon from\"@material-ui/icons/Delete\";import CheckIcon from\"@material-ui/icons/Check\";import SearchIcon from\"@material-ui/icons/Search\";import PrintIcon from\"@material-ui/icons/Print\";import ArrowBackIcon from\"@material-ui/icons/ArrowBack\";import BuildOutlinedIcon from\"@material-ui/icons/BuildOutlined\";import{useHistory,Link}from\"react-router-dom\";import{useRecoilState,useSetRecoilState,useRecoilValue}from\"recoil\";import{payPeriodState,payPeriodEndMonthState,payPeriodEmpIdState,loginLevelState}from\"./data/atomdata\";import{usePayslipsContext}from\"../context/payslips_context\";import{useEmployeesContext}from\"../context/employees_context\";import{usePayslips}from\"./payslips/usePayslips\";import{useEmployees}from\"./employees/useEmployees\";import PrintPayslip from\"./PrintPayslip\";import{jsx as _jsx}from\"react/jsx-runtime\";var columns=[{title:\"Name\",field:\"name\"},{title:\"Period\",field:\"period\"},{title:\"Date\",field:\"date\",type:\"date\",dateSetting:{locale:\"en-GB\"}},{title:\"Basic Pay\",field:\"basic_pay\",type:\"currency\"},{title:\"TAP Amount\",field:\"tap_amount\",type:\"currency\"},{title:\"SCP Amount\",field:\"scp_amount\",type:\"currency\"},{title:\"Earnings\",field:\"total_earnings\",type:\"currency\"},{title:\"Deductions\",field:\"total_deductions\",type:\"currency\"},{title:\"Nett Pay\",field:\"nett_pay\",type:\"currency\"},// { title: \"Bank Name\", field: \"bank_name\" },\n// { title: \"Bank AC No\", field: \"bank_accno\" },\n{title:\"Status\",field:\"status\"}];export default function PayslipTable(){var history=useHistory();var classes=useStyles();var _useRecoilState=useRecoilState(loginLevelState),_useRecoilState2=_slicedToArray(_useRecoilState,2),loginLevel=_useRecoilState2[0],setLoginLevel=_useRecoilState2[1];var _useEmployees=useEmployees(),employees=_useEmployees.employees;var _useState=useState(),_useState2=_slicedToArray(_useState,2),emp=_useState2[0],setEmp=_useState2[1];var _usePayslips=usePayslips(),payslips=_usePayslips.payslips,setFilter=_usePayslips.setFilter;var setPayPeriodEmpId=useSetRecoilState(payPeriodEmpIdState);var _usePayslipsContext=usePayslipsContext(),deletePayslip=_usePayslipsContext.deletePayslip,loadPayslips=_usePayslipsContext.loadPayslips,getSinglePayslip=_usePayslipsContext.getSinglePayslip,setEditPayslipID=_usePayslipsContext.setEditPayslipID,setIsPayslipEditingOn=_usePayslipsContext.setIsPayslipEditingOn,setIsPayslipEditingOff=_usePayslipsContext.setIsPayslipEditingOff,resetSinglePayslip=_usePayslipsContext.resetSinglePayslip,payslip_period=_usePayslipsContext.payslip_period,payslip_endmonthdate=_usePayslipsContext.payslip_endmonthdate;var exportPdfTable=function exportPdfTable(_ref){var data=_ref.data,emp=_ref.emp;PrintPayslip({data:data,emp:emp});};var print_Payslip=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var empid,emp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:empid=data.rowData.empid;emp=employees.filter(function(f){return f.id===empid;}).map(function(r){return _objectSpread({},r);});exportPdfTable({data:data,emp:emp});case 3:case\"end\":return _context.stop();}}},_callee);}));return function print_Payslip(_x){return _ref2.apply(this,arguments);};}();var update_Payslip=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var id;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:id=data.id;setPayPeriodEmpId(id);//save to recoil\nsetEditPayslipID(id);setIsPayslipEditingOn();getSinglePayslip(id);history.push(\"/singlepayslip\");case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function update_Payslip(_x2){return _ref3.apply(this,arguments);};}();var add_Payslip=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data){var id;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:id=data.id;resetSinglePayslip();setEditPayslipID(\"\");setIsPayslipEditingOff();history.push(\"/singlepayslip\");case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function add_Payslip(_x3){return _ref4.apply(this,arguments);};}();var delete_Payslip=function delete_Payslip(data){var id=data.id;setEditPayslipID(id);deletePayslip(id);loadPayslips();};useEffect(function(){console.log(\"paytable\");setFilter(loginLevel.loginUserId);},[]);return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:payslips,title:\"Payslips\",icons:{Add:function Add(props){return/*#__PURE__*/_jsx(AddIcon,{});},Edit:function Edit(props){return/*#__PURE__*/_jsx(EditIcon,{});},Delete:function Delete(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Clear:function Clear(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Check:function Check(props){return/*#__PURE__*/_jsx(CheckIcon,{});},Search:function Search(props){return/*#__PURE__*/_jsx(SearchIcon,{});},ResetSearch:function ResetSearch(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Build:function Build(props){return/*#__PURE__*/_jsx(BuildOutlinedIcon,{});},Print:function Print(props){return/*#__PURE__*/_jsx(PrintIcon,{});}},actions:[{icon:\"print\",tooltip:\"Print Payslip\",onClick:function onClick(event,rowData){print_Payslip({rowData:rowData});}}// {\n//   icon: \"delete\",\n//   tooltip: \"Delete Record\",\n//   onClick: (event, rowData) => {\n//     delete_Payslip(rowData);\n//   },\n// },\n// {\n//   icon: \"add\",\n//   tooltip: \"Add Record\",\n//   isFreeAction: true,\n//   onClick: (event, rowData) => {\n//     add_Payslip(rowData);\n//   },\n// },\n],options:{filtering:true,headerStyle:{backgroundColor:\"orange\",color:\"#FFF\"},showTitle:true},components:{Toolbar:function Toolbar(props){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(MTableToolbar,_objectSpread({},props))});}}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/PayslipTableStaff.js"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","PrintIcon","ArrowBackIcon","BuildOutlinedIcon","useHistory","Link","useRecoilState","useSetRecoilState","useRecoilValue","payPeriodState","payPeriodEndMonthState","payPeriodEmpIdState","loginLevelState","usePayslipsContext","useEmployeesContext","usePayslips","useEmployees","PrintPayslip","columns","title","field","type","dateSetting","locale","PayslipTable","history","classes","useStyles","loginLevel","setLoginLevel","employees","emp","setEmp","payslips","setFilter","setPayPeriodEmpId","deletePayslip","loadPayslips","getSinglePayslip","setEditPayslipID","setIsPayslipEditingOn","setIsPayslipEditingOff","resetSinglePayslip","payslip_period","payslip_endmonthdate","exportPdfTable","data","print_Payslip","empid","rowData","filter","f","id","map","r","update_Payslip","push","add_Payslip","delete_Payslip","console","log","loginUserId","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","Build","Print","icon","tooltip","onClick","event","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslips } from \"./payslips/usePayslips\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport PrintPayslip from \"./PrintPayslip\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  { title: \"Basic Pay\", field: \"basic_pay\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"tap_amount\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"scp_amount\", type: \"currency\" },\r\n  { title: \"Earnings\", field: \"total_earnings\", type: \"currency\" },\r\n  { title: \"Deductions\", field: \"total_deductions\", type: \"currency\" },\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"currency\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees } = useEmployees();\r\n  const [emp, setEmp] = useState();\r\n  const { payslips, setFilter } = usePayslips();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    deletePayslip,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    setIsPayslipEditingOff,\r\n    resetSinglePayslip,\r\n    payslip_period,\r\n    payslip_endmonthdate,\r\n  } = usePayslipsContext();\r\n\r\n  const exportPdfTable = ({ data, emp }) => {\r\n    PrintPayslip({data, emp});\r\n  };\r\n\r\n  const print_Payslip = async (data) => {\r\n    const { empid} = data.rowData\r\n    const emp = employees.filter((f) => f.id === empid).map((r) => { return { ...r }})\r\n    exportPdfTable({ data, emp })\r\n  }\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id } = data;\r\n    setPayPeriodEmpId(id); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const add_Payslip = async (data) => {\r\n    const { id } = data;\r\n    resetSinglePayslip();\r\n    setEditPayslipID(\"\");\r\n    setIsPayslipEditingOff();\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id } = data;\r\n    setEditPayslipID(id);\r\n    deletePayslip(id);\r\n    loadPayslips();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"paytable\");\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslips}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n            Print: (props) => <PrintIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"print\",\r\n              tooltip: \"Print Payslip\",\r\n              onClick: (event, rowData) => {\r\n                print_Payslip({ rowData });\r\n              },\r\n            },\r\n            // {\r\n            //   icon: \"delete\",\r\n            //   tooltip: \"Delete Record\",\r\n            //   onClick: (event, rowData) => {\r\n            //     delete_Payslip(rowData);\r\n            //   },\r\n            // },\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}