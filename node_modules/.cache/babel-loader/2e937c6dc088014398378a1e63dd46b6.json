{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { Heading, Text } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, ButtonGroup, Paper, Grid, Icon, Divider } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport PayForm from \"./PayForm\";\nimport PaySummary from \"./PaySummary\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\nimport { payrunState, paydataState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\nimport { useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst Payrunbatch = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const componentRef = useRef();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight); //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\n\n  const {\n    payrun,\n    getSingleBatchPayslip,\n    singlebatchpayslip,\n    payslip_period,\n    updatePayslip,\n    updatePayrun,\n    singlebatch_payslip_loading,\n    singlebatch_payslip_error\n  } = usePayslipsContext();\n  const {\n    loadPayitems,\n    payitems\n  } = useTablesContext();\n  const payrundata = useRecoilValue(payrunState);\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\n  const [formdata, setFormdata] = useState([]);\n  const [rowindex, setRowIndex] = useState(0);\n  const [showSumm, setShowSumm] = useState(false);\n  const [showSaveAlert, setShowSaveAlert] = useState(false);\n  const [showVerifyAlert, setShowVerifyAlert] = useState(false);\n  const [isCalc, setIsCalc] = useState(false);\n  useEffect(() => {\n    loadPayitems();\n    getSingleBatchPayslip(payslip_period);\n  }, []);\n  useEffect(() => {\n    setLoadFormdata(false);\n  }, [loadUpdatedata]);\n\n  const handleShowSumm = e => {\n    e.preventDefault();\n    setShowSumm(!showSumm);\n  };\n\n  const handlePrintSummary = e => {\n    e.preventDefault();\n  };\n\n  const handleSavePayslips = e => {\n    e.preventDefault(); // eslint-disable-next-line no-lone-blocks\n\n    {\n      singlebatchpayslip.forEach(rec => {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = rec;\n        updatePayslip({\n          id,\n          ...fields\n        });\n      });\n    } //update payrun\n\n    handleSavePayrun();\n    setShowSaveAlert(true);\n    setTimeout(() => {\n      setShowSaveAlert(false);\n    }, 3000);\n  };\n\n  const handleSavePayrun = () => {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      payrun.filter(r => r.payrun === payslip_period).map(rec => {\n        //update payrun\n        return updatePayrun({\n          id: rec.id,\n          totalpayroll: payrundata.totalpayroll,\n          totalwages: payrundata.totalwages,\n          totaltap: payrundata.totaltap,\n          totalscp: payrundata.totalscp,\n          totalallows: payrundata.totalallows,\n          totaldeducts: payrundata.totaldeducts\n        });\n      });\n    }\n  };\n\n  const handleVerifyPayslips = e => {\n    e.preventDefault();\n    setPayrunStatus(\"Verified\");\n    updatePayrun({\n      id: payrunId,\n      status: \"Verified\"\n    });\n    setShowVerifyAlert(true);\n    setTimeout(() => {\n      setShowVerifyAlert(false);\n    }, 3000);\n  };\n\n  const handleEmpButtonClick = index => {\n    const paydata = singlebatchpayslip[index];\n    setFormdata({ ...paydata\n    });\n    setFormdata({ ...paydata\n    });\n    setIsCalc(true);\n    setLoadFormdata(true);\n  };\n\n  if (singlebatch_payslip_loading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: fixedHeightPaper,\n      style: {\n        backgroundColor: \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading...Payslips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (singlebatch_payslip_error) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: fixedHeightPaper,\n      style: {\n        backgroundColor: \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Internet connection problem!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"lightcyan\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          align: \"center\",\n          style: {\n            border: \"1px solid black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            size: \"md\",\n            children: \"Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 10,\n          style: {\n            border: \"1px solid black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: 14,\n              display: \"inline-flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: 14,\n                display: \"inline-flex\",\n                flexDirection: \"row\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                as: \"h4\",\n                size: \"md\",\n                children: \"Payroll Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 10,\n                marginLeft: 20\n              },\n              children: [showSaveAlert && /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"success\",\n                children: \"Changes have been saved!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), showVerifyAlert && /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"success\",\n                children: \"Payslips has been verified!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          align: \"center\",\n          style: {\n            border: \"1px solid black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: singlebatchpayslip && singlebatchpayslip.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.empbtn // ${index === value && \"activebtn\"}\n                  ,\n                  onClick: e => {\n                    setRowIndex(index);\n                    handleEmpButtonClick(index);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\" \", item.name]\n                  }, item.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"fullWidth\",\n                  className: classes.divider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 10,\n          align: \"center\",\n          style: {\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            style: {\n              border: \"1px solid black\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 12,\n              align: \"left\",\n              style: {\n                border: \"1px solid black\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  color: \"primary\",\n                  \"aria-label\": \"outlined primary button group\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    onClick: e => handleShowSumm(e),\n                    style: {\n                      marginLeft: 10\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      as: \"u\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 23\n                    }, this), \"Details \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 51\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: e => handleShowSumm(e),\n                    className: classes.button,\n                    style: {\n                      marginLeft: 10\n                    },\n                    children: [\"Summary \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    style: {\n                      marginLeft: 5\n                    },\n                    onClick: e => handleSavePayslips(e),\n                    children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 28\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 21\n                  }, this), payrunId && /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    style: {\n                      marginLeft: 5\n                    },\n                    onClick: e => handleVerifyPayslips(e),\n                    children: [\"Verify \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 32\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), !showSumm && /*#__PURE__*/_jsxDEV(PayForm, {\n            formdata: formdata,\n            setFormdata: setFormdata,\n            loadFormdata: loadFormdata,\n            setLoadFormdata: setLoadFormdata,\n            payitems: payitems,\n            setLoadUpdatedata: setLoadUpdatedata,\n            rowindex: rowindex,\n            isCalc: isCalc,\n            setIsCalc: setIsCalc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), showSumm && /*#__PURE__*/_jsxDEV(PaySummary, {\n            payrundata: payrundata,\n            singlebatchpayslip: singlebatchpayslip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrunbatch, \"jNBTxWF5vCVVpcInekuijuclBH8=\", false, function () {\n  return [useHistory, useStyles, usePayslipsContext, useTablesContext, useRecoilValue, useRecoilState, useRecoilState];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"white\"\n  },\n  card: {\n    backgroundColor: \"white\"\n  },\n  section: {\n    width: \"80vw\",\n    margin: \"1rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  empscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  empcontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  empbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  empinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","useRef","useReactToPrint","Heading","Text","makeStyles","clsx","useHistory","Button","ButtonGroup","Paper","Grid","Icon","Divider","Alert","PayForm","PaySummary","usePayslipsContext","useTablesContext","useSetRecoilState","useRecoilState","payrunState","paydataState","payrunIdState","payrunStatusState","useRecoilValue","drawerWidth","Payrunbatch","history","classes","useStyles","componentRef","fixedHeightPaper","paper","fixedHeight","payrun","getSingleBatchPayslip","singlebatchpayslip","payslip_period","updatePayslip","updatePayrun","singlebatch_payslip_loading","singlebatch_payslip_error","loadPayitems","payitems","payrundata","payrunId","setPayrunId","payrunstatus","setPayrunStatus","loadFormdata","setLoadFormdata","loadUpdatedata","setLoadUpdatedata","formdata","setFormdata","rowindex","setRowIndex","showSumm","setShowSumm","showSaveAlert","setShowSaveAlert","showVerifyAlert","setShowVerifyAlert","isCalc","setIsCalc","handleShowSumm","e","preventDefault","handlePrintSummary","handleSavePayslips","forEach","rec","id","rec_id","tableData","fields","handleSavePayrun","setTimeout","filter","r","map","totalpayroll","totalwages","totaltap","totalscp","totalallows","totaldeducts","handleVerifyPayslips","status","handleEmpButtonClick","index","paydata","backgroundColor","section","border","marginLeft","display","flexDirection","marginTop","item","empbtn","name","divider","padding","button","rightIcon","theme","root","flexGrow","margin","spacing","container","width","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","overflow","color","bcakgroundColor","card","maxWidth","underline","marginBottom","background","marginRight","title","marginbottom","textAlign","empscenter","empcontainer","flexWrap","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","empinfo","fontWeight","textField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { Heading, Text} from \"@chakra-ui/react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const componentRef = useRef();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    payrun,\r\n    getSingleBatchPayslip,\r\n    singlebatchpayslip,\r\n    payslip_period,\r\n    updatePayslip,\r\n    updatePayrun,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const payrundata = useRecoilValue(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState([]);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [showSumm, setShowSumm] = useState(false);\r\n  const [showSaveAlert, setShowSaveAlert] = useState(false);\r\n  const [showVerifyAlert, setShowVerifyAlert] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    setShowSumm(!showSumm);\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      singlebatchpayslip.forEach((rec) => {\r\n        const { id, rec_id, tableData, ...fields } = rec;\r\n        updatePayslip({ id, ...fields });\r\n      });\r\n    }\r\n    //update payrun\r\n    handleSavePayrun();\r\n    setShowSaveAlert(true);\r\n    setTimeout(() => {\r\n      setShowSaveAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      payrun\r\n        .filter((r) => r.payrun === payslip_period)\r\n        .map((rec) => {\r\n          //update payrun\r\n          return updatePayrun({\r\n            id: rec.id,\r\n            totalpayroll: payrundata.totalpayroll,\r\n            totalwages: payrundata.totalwages,\r\n            totaltap: payrundata.totaltap,\r\n            totalscp: payrundata.totalscp,\r\n            totalallows: payrundata.totalallows,\r\n            totaldeducts: payrundata.totaldeducts,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrunStatus(\"Verified\");\r\n    updatePayrun({ id: payrunId, status: \"Verified\" });\r\n    setShowVerifyAlert(true);\r\n    setTimeout(() => {\r\n      setShowVerifyAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    setFormdata({ ...paydata });\r\n    setFormdata({ ...paydata });\r\n    setIsCalc(true);\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  if (singlebatch_payslip_loading) {\r\n    return (\r\n      <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <div>\r\n          <h2>Loading...Payslips</h2>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  if (singlebatch_payslip_error) {\r\n    return (\r\n      <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <div>\r\n          <h2>Internet connection problem!</h2>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper\r\n      className={fixedHeightPaper}\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <section className={classes.section}>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <Heading as=\"h4\" size=\"md\">\r\n              Employees\r\n            </Heading>\r\n          </Grid>\r\n          <Grid item sm={10} style={{ border: \"1px solid black\" }}>\r\n            <div\r\n              style={{\r\n                marginLeft: 14,\r\n                display: \"inline-flex\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  marginLeft: 14,\r\n                  display: \"inline-flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Heading as=\"h4\" size=\"md\">\r\n                  Payroll Details\r\n                </Heading>\r\n              </div>\r\n\r\n              <div style={{ marginTop: 10, marginLeft: 20 }}>\r\n                {showSaveAlert && (\r\n                  <Alert severity=\"success\">Changes have been saved!</Alert>\r\n                )}\r\n                {showVerifyAlert && (\r\n                  <Alert severity=\"success\">Payslips has been verified!</Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {singlebatchpayslip &&\r\n                singlebatchpayslip.map((item, index) => {\r\n                  return (\r\n                    <div>\r\n                      <Button\r\n                        className={classes.empbtn}\r\n                        // ${index === value && \"activebtn\"}\r\n                        onClick={(e) => {\r\n                          setRowIndex(index);\r\n                          handleEmpButtonClick(index);\r\n                        }}\r\n                      >\r\n                        <div key={item.id}> {item.name}</div>\r\n                      </Button>\r\n                      <Divider\r\n                        variant=\"fullWidth\"\r\n                        className={classes.divider}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={10}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              style={{ border: \"1px solid black\" }}\r\n            >\r\n              <Grid\r\n                item\r\n                sm={12}\r\n                align=\"left\"\r\n                style={{ border: \"1px solid black\" }}\r\n              >\r\n                <div style={{ padding: 5 }}>\r\n                  <ButtonGroup\r\n                    color=\"primary\"\r\n                    aria-label=\"outlined primary button group\"\r\n                  >\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={(e) => handleShowSumm(e)}\r\n                      style={{ marginLeft: 10 }}\r\n                    >\r\n                      <Text as=\"u\"></Text>Details <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={(e) => handleShowSumm(e)}\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 10 }}\r\n                    >\r\n                      Summary <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 5 }}\r\n                      onClick={(e) => handleSavePayslips(e)}\r\n                    >\r\n                      Save <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    {/* <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 5 }}\r\n                      onClick={(e) => handlePrintSummary(e)}\r\n                    >\r\n                      Print <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button> */}\r\n                    {payrunId && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        style={{ marginLeft: 5 }}\r\n                        onClick={(e) => handleVerifyPayslips(e)}\r\n                      >\r\n                        Verify <Icon className={classes.rightIcon}>send</Icon>\r\n                      </Button>\r\n                    )}\r\n                  </ButtonGroup>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            {!showSumm && (\r\n              <PayForm\r\n                formdata={formdata}\r\n                setFormdata={setFormdata}\r\n                loadFormdata={loadFormdata}\r\n                setLoadFormdata={setLoadFormdata}\r\n                payitems={payitems}\r\n                setLoadUpdatedata={setLoadUpdatedata}\r\n                rowindex={rowindex}\r\n                isCalc={isCalc}\r\n                setIsCalc={setIsCalc}\r\n              />\r\n            )}\r\n            {showSumm && (\r\n              <PaySummary\r\n                payrundata={payrundata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  empscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  empcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  empbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  empinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}