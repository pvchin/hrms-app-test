{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable-july2\\\\src\\\\components\\\\EmpTrainings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Icon, TextField } from \"@material-ui/core\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTrainingsContext } from \"../context/trainings_context\";\nimport { useTrainings } from \"./trainings/useTrainings\";\nimport { useUpdateTrainings } from \"./trainings/useUpdateTrainings\";\nimport { useAddTrainings } from \"./trainings/useAddTrainings\";\nimport { useDeleteTrainings } from \"./trainings/useDeleteTrainings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Institute\",\n  field: \"institute\"\n}, {\n  title: \"Course\",\n  field: \"course\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || new Date()}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || new Date()}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"Expiry Date\",\n  field: \"expiry_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || new Date()}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this)\n}];\nexport default function Emp_Training({\n  trainingdata,\n  setTrainingdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    trainings,\n    filter,\n    setFilter,\n    setTrainingId\n  } = useTrainings();\n  const updateTrainings = useUpdateTrainings();\n  const addTrainings = useAddTrainings();\n  const deleteTrainings = useDeleteTrainings();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    getSingleBatchTraining,\n    singlebatch_training,\n    //addTraining,\n    //deleteTraining,\n    //updateTraining,\n    singlebatch_training_loading\n  } = useTrainingsContext();\n  useEffect(() => {\n    setTrainingId(editEmployeeID);\n  }, []);\n\n  const add_Training = data => {\n    addTrainings({ ...data,\n      empid: editEmployeeID\n    });\n  };\n\n  const delete_Training = data => {\n    const {\n      id\n    } = data;\n    deleteTrainings(id); // const index = data.tableData.id;\n    // const rec = singlebatchfamily\n    // rec.splice(index, 1);\n\n    getSingleBatchTraining(editEmployeeID);\n  };\n\n  const Refresh_Data = () => {\n    getSingleBatchTraining(editEmployeeID);\n  };\n\n  const update_Training = data => {\n    const {\n      id,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    setTimeout(() => {}, 1000);\n    updateTraining({\n      id,\n      ...fields\n    });\n    const rec = singlebatch_training.filter(i => i.id === id);\n    rec[0].institute = data.institute;\n    rec[0].course = data.course;\n    rec[0].from_date = data.from_date;\n    rec[0].to_date = data.to_date;\n    rec[0].expiry_date = data.expiry_date; //loadSingleBatchFamily(editEmployeeID);\n    //loadSingleBatchFamily(editEmployeeID);\n  };\n\n  if (singlebatch_training_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: singlebatch_training,\n        title: \"Training\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // setTrainingdata([...trainingdata, newData]);\n              add_Training(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // const dataUpdate = [...trainingdata];\n              // const index = oldData.tableData.id;\n              // dataUpdate[index] = newData;\n              // setTrainingdata([...dataUpdate]);\n              update_Training(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // const dataDelete = [...trainingdata];\n              // const index = oldData.tableData.id;\n              // dataDelete.splice(index, 1);\n              // setTrainingdata([...dataDelete]);\n              delete_Training(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Refresh_Data,\n                children: [\"Update \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Emp_Training, \"DBzJ8fPVzhNUvDV9z/g4z6ykwSE=\", false, function () {\n  return [useStyles, useTrainings, useUpdateTrainings, useAddTrainings, useDeleteTrainings, useEmployeesContext, useTrainingsContext];\n});\n\n_c = Emp_Training;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp_Training\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/EmpTrainings.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","Button","Icon","TextField","useEmployeesContext","useTrainingsContext","useTrainings","useUpdateTrainings","useAddTrainings","useDeleteTrainings","columns","title","field","type","dateSetting","locale","editComponent","props","e","onChange","target","value","Emp_Training","trainingdata","setTrainingdata","handleDialogClose","classes","useStyles","trainings","filter","setFilter","setTrainingId","updateTrainings","addTrainings","deleteTrainings","editEmployeeID","getSingleBatchTraining","singlebatch_training","singlebatch_training_loading","add_Training","data","empid","delete_Training","id","Refresh_Data","update_Training","rec_id","tableData","fields","setTimeout","updateTraining","rec","i","institute","course","from_date","to_date","expiry_date","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;AACA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,IAAI,EAAE,MAHR;AAIEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAJf;AAKEC,EAAAA,aAAa,EAAGC,KAAD,iBACb,QAAC,SAAD,CACE;AADF;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAOD,KAAK,CAACE,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAFnB;AAGE,IAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AANJ,CATc,EAsBd;AACEV,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,IAAI,EAAE,MAHR;AAIEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAJf;AAKEC,EAAAA,aAAa,EAAGC,KAAD,iBACb,QAAC,SAAD,CACE;AADF;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAOD,KAAK,CAACE,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAFnB;AAGE,IAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AANJ,CAtBc,EAmCd;AACEV,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,IAAI,EAAE,MAHR;AAIEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAJf;AAKEC,EAAAA,aAAa,EAAGC,KAAD,iBACb,QAAC,SAAD,CACE;AADF;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAOD,KAAK,CAACE,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAFnB;AAGE,IAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AANJ,CAnCc,CAAhB;AAkDA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,YADmC;AAEnCC,EAAAA,eAFmC;AAGnCC,EAAAA;AAHmC,CAAtB,EAIZ;AAAA;;AACD,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA;AAAhC,MAAkDzB,YAAY,EAApE;AACA,QAAM0B,eAAe,GAAGzB,kBAAkB,EAA1C;AACA,QAAM0B,YAAY,GAAGzB,eAAe,EAApC;AACA,QAAM0B,eAAe,GAAGzB,kBAAkB,EAA1C;AACC,QAAM;AAAE0B,IAAAA;AAAF,MAAqB/B,mBAAmB,EAA9C;AACA,QAAM;AACJgC,IAAAA,sBADI;AAEJC,IAAAA,oBAFI;AAGJ;AACA;AACA;AACAC,IAAAA;AANI,MAOFjC,mBAAmB,EAPvB;AASAR,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,aAAa,CAACI,cAAD,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMI,YAAY,GAAIC,IAAD,IAAU;AAC7BP,IAAAA,YAAY,CAAC,EAAE,GAAGO,IAAL;AAAWC,MAAAA,KAAK,EAAEN;AAAlB,KAAD,CAAZ;AAED,GAHD;;AAKA,QAAMO,eAAe,GAAIF,IAAD,IAAU;AAChC,UAAM;AAAEG,MAAAA;AAAF,QAASH,IAAf;AACAN,IAAAA,eAAe,CAACS,EAAD,CAAf,CAFgC,CAGhC;AACA;AACA;;AACAP,IAAAA,sBAAsB,CAACD,cAAD,CAAtB;AACD,GAPD;;AAQA,QAAMS,YAAY,GAAG,MAAM;AACxBR,IAAAA,sBAAsB,CAACD,cAAD,CAAtB;AACF,GAFD;;AAIA,QAAMU,eAAe,GAAIL,IAAD,IAAU;AAChC,UAAM;AAAEG,MAAAA,EAAF;AAAMG,MAAAA,MAAN;AAAcC,MAAAA,SAAd;AAAyB,SAAGC;AAA5B,QAAuCR,IAA7C;AACAS,IAAAA,UAAU,CAAC,MAAM,CAAE,CAAT,EAAW,IAAX,CAAV;AAEAC,IAAAA,cAAc,CAAC;AAAEP,MAAAA,EAAF;AAAM,SAAGK;AAAT,KAAD,CAAd;AACA,UAAMG,GAAG,GAAGd,oBAAoB,CAACR,MAArB,CAA6BuB,CAAD,IAAOA,CAAC,CAACT,EAAF,KAASA,EAA5C,CAAZ;AACAQ,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOE,SAAP,GAAmBb,IAAI,CAACa,SAAxB;AACAF,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOG,MAAP,GAAgBd,IAAI,CAACc,MAArB;AACAH,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOI,SAAP,GAAmBf,IAAI,CAACe,SAAxB;AACAJ,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOK,OAAP,GAAiBhB,IAAI,CAACgB,OAAtB;AACAL,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOM,WAAP,GAAqBjB,IAAI,CAACiB,WAA1B,CAVgC,CAWhC;AACA;AACD,GAbD;;AAcA,MAAInB,4BAAJ,EAAkC;AAChC,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACgC,IAAxB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAElD,OADX;AAEE,QAAA,IAAI,EAAE2B,oBAFR;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,QAAQ,EAAE;AACRwB,UAAAA,QAAQ,EAAGC,OAAD,IACR,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BhB,YAAAA,UAAU,CAAC,MAAM;AACf;AACAV,cAAAA,YAAY,CAACuB,OAAD,CAAZ;AACAE,cAAAA,OAAO;AACR,aAJS,EAIP,IAJO,CAAV;AAKD,WAND,CAFM;AASRE,UAAAA,WAAW,EAAE,CAACJ,OAAD,EAAUK,OAAV,KACX,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BhB,YAAAA,UAAU,CAAC,MAAM;AACf;AACA;AACA;AACA;AACAJ,cAAAA,eAAe,CAACiB,OAAD,CAAf;AACAE,cAAAA,OAAO;AACR,aAPS,EAOP,IAPO,CAAV;AAQD,WATD,CAVM;AAoBRI,UAAAA,WAAW,EAAGD,OAAD,IACX,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BhB,YAAAA,UAAU,CAAC,MAAM;AACf;AACA;AACA;AACA;AACAP,cAAAA,eAAe,CAACyB,OAAD,CAAf;AACAH,cAAAA,OAAO;AACR,aAPS,EAOP,IAPO,CAAV;AAQD,WATD;AArBM,SAJZ;AAoCE,QAAA,OAAO,EAAE;AACPK,UAAAA,SAAS,EAAE,IADJ;AAEPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,QADN;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAFN;AAMPC,UAAAA,SAAS,EAAE;AANJ,SApCX;AA4CE,QAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAGzD,KAAD,iBACP;AAAA,oCACE,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,KAAK,EAAE;AAAE0D,gBAAAA,OAAO,EAAE;AAAX,eAAZ;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,OAAO,EAAC,WAFV;AAGE,gBAAA,KAAK,EAAC,WAHR;AAIE,gBAAA,SAAS,EAAEjD,OAAO,CAACkD,MAJrB;AAKE,gBAAA,OAAO,EAAEhC,YALX;AAAA,mDAOS,QAAC,IAAD;AAAM,kBAAA,SAAS,EAAElB,OAAO,CAACmD,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ;AA5Cd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqED;;GApIuBvD,Y;UAKNK,S,EACuCrB,Y,EAChCC,kB,EACHC,e,EACGC,kB,EACIL,mB,EAQvBC,mB;;;KAlBkBiB,Y;AAsIxB,MAAMK,SAAS,GAAG3B,UAAU,CAAE8E,KAAD,KAAY;AACvCpB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\nimport { useUpdateTrainings } from \"./trainings/useUpdateTrainings\";\r\nimport { useAddTrainings } from \"./trainings/useAddTrainings\";\r\nimport { useDeleteTrainings } from \"./trainings/useDeleteTrainings\";\r\nconst columns = [\r\n  {\r\n    title: \"Institute\",\r\n    field: \"institute\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function Emp_Training({\r\n  trainingdata,\r\n  setTrainingdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n const { trainings, filter, setFilter, setTrainingId } = useTrainings();\r\n const updateTrainings = useUpdateTrainings();\r\n const addTrainings = useAddTrainings();\r\n const deleteTrainings = useDeleteTrainings();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    getSingleBatchTraining,\r\n    singlebatch_training,\r\n    //addTraining,\r\n    //deleteTraining,\r\n    //updateTraining,\r\n    singlebatch_training_loading,\r\n  } = useTrainingsContext();\r\n\r\n  useEffect(() => {\r\n    setTrainingId(editEmployeeID);\r\n  }, []);\r\n \r\n\r\n  const add_Training = (data) => {\r\n    addTrainings({ ...data, empid: editEmployeeID });\r\n    \r\n  };\r\n\r\n  const delete_Training = (data) => {\r\n    const { id } = data;\r\n    deleteTrainings(id);\r\n    // const index = data.tableData.id;\r\n    // const rec = singlebatchfamily\r\n    // rec.splice(index, 1);\r\n    getSingleBatchTraining(editEmployeeID);\r\n  };\r\n  const Refresh_Data = () => {\r\n     getSingleBatchTraining(editEmployeeID);\r\n  };\r\n  \r\n  const update_Training = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    setTimeout(() => {}, 1000);\r\n\r\n    updateTraining({ id, ...fields });\r\n    const rec = singlebatch_training.filter((i) => i.id === id);\r\n    rec[0].institute = data.institute;\r\n    rec[0].course = data.course;\r\n    rec[0].from_date = data.from_date;\r\n    rec[0].to_date = data.to_date;\r\n    rec[0].expiry_date = data.expiry_date;\r\n    //loadSingleBatchFamily(editEmployeeID);\r\n    //loadSingleBatchFamily(editEmployeeID);\r\n  };\r\n  if (singlebatch_training_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Training</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_training}\r\n          title=\"Training\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setTrainingdata([...trainingdata, newData]);\r\n                  add_Training(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataUpdate = [...trainingdata];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataUpdate[index] = newData;\r\n                  // setTrainingdata([...dataUpdate]);\r\n                  update_Training(newData)\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataDelete = [...trainingdata];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataDelete.splice(index, 1);\r\n                  // setTrainingdata([...dataDelete]);\r\n                  delete_Training(oldData)\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Refresh_Data}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}