{"ast":null,"code":"import React,{useEffect}from\"react\";import MaterialTable,{MTableToolbar}from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import{useHistory,Link}from\"react-router-dom\";import{useSetRecoilState,useRecoilValue}from\"recoil\";import{payPeriodState,payPeriodEndMonthState,payPeriodEmpIdState}from\"./data/atomdata\";import{usePayslipsContext}from\"../context/payslips_context\";import{useEmployeesContext}from\"../context/employees_context\";import{jsx as _jsx}from\"react/jsx-runtime\";var FILTERSTRING=\"Pending\";var columns=[{title:\"Batch\",field:\"payrun\",editable:\"never\"},{title:\"Period\",field:\"period\",editable:\"never\"},{title:\"PayDate\",field:\"pay_date\",type:\"date\",dateSetting:{locale:\"en-GB\"},editable:\"never\"},{title:\"Payroll\",field:\"totalpayroll\",type:\"currency\",editable:\"never\"},// { title: \"Bank Name\", field: \"bank_name\" },\n// { title: \"Bank AC No\", field: \"bank_accno\" },\n{title:\"Status\",field:\"status\",editable:\"never\"}];export default function PayslipTableVIew(){var history=useHistory();var classes=useStyles();var setPayPeriodEmpId=useSetRecoilState(payPeriodEmpIdState);var _usePayslipsContext=usePayslipsContext(),payrun=_usePayslipsContext.payrun,getPayrun=_usePayslipsContext.getPayrun,payrun_loading=_usePayslipsContext.payrun_loading,loadPendingPayslips=_usePayslipsContext.loadPendingPayslips;//const { loadEmployees, employees } = useEmployeesContext();\nuseEffect(function(){getPayrun();},[]);if(payrun_loading){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Loading.....Payslips\"})});}return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:payrun,title:\"Payslips\",options:{filtering:false,search:false,toolbar:false,headerStyle:{backgroundColor:\"orange\",color:\"#FFF\"},showTitle:false}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/PayslipTableView.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","makeStyles","useHistory","Link","useSetRecoilState","useRecoilValue","payPeriodState","payPeriodEndMonthState","payPeriodEmpIdState","usePayslipsContext","useEmployeesContext","FILTERSTRING","columns","title","field","editable","type","dateSetting","locale","PayslipTableVIew","history","classes","useStyles","setPayPeriodEmpId","payrun","getPayrun","payrun_loading","loadPendingPayslips","root","maxWidth","paddingTop","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,aAAP,EAAwBC,aAAxB,KAA6C,gBAA7C,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,kBAAjC,CACA,OAASC,iBAAT,CAA4BC,cAA5B,KAAkD,QAAlD,CACA,OACEC,cADF,CAEEC,sBAFF,CAGEC,mBAHF,KAIO,iBAJP,CAKA,OAASC,kBAAT,KAAmC,6BAAnC,CACA,OAASC,mBAAT,KAAoC,8BAApC,C,2CAEA,GAAMC,CAAAA,YAAY,CAAG,SAArB,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,OADT,CAEEC,KAAK,CAAE,QAFT,CAGEC,QAAQ,CAAE,OAHZ,CADc,CAMd,CAAEF,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CAAoCC,QAAQ,CAAE,OAA9C,CANc,CAOd,CACEF,KAAK,CAAE,SADT,CAEEC,KAAK,CAAE,UAFT,CAGEE,IAAI,CAAE,MAHR,CAIEC,WAAW,CAAE,CAAEC,MAAM,CAAE,OAAV,CAJf,CAKEH,QAAQ,CAAE,OALZ,CAPc,CAed,CACEF,KAAK,CAAE,SADT,CAEEC,KAAK,CAAE,cAFT,CAGEE,IAAI,CAAE,UAHR,CAIED,QAAQ,CAAE,OAJZ,CAfc,CAqBd;AACA;AACA,CAAEF,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CAAoCC,QAAQ,CAAE,OAA9C,CAvBc,CAAhB,CA0BA,cAAe,SAASI,CAAAA,gBAAT,EAA4B,CACzC,GAAIC,CAAAA,OAAO,CAAGlB,UAAU,EAAxB,CACA,GAAMmB,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CACA,GAAMC,CAAAA,iBAAiB,CAAGnB,iBAAiB,CAACI,mBAAD,CAA3C,CAHyC,wBAKvCC,kBAAkB,EALqB,CAIjCe,MAJiC,qBAIjCA,MAJiC,CAIzBC,SAJyB,qBAIzBA,SAJyB,CAIfC,cAJe,qBAIfA,cAJe,CAICC,mBAJD,qBAICA,mBAJD,CAMzC;AAEA7B,SAAS,CAAC,UAAM,CACd2B,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIC,cAAJ,CAAoB,CAClB,mBACE,kCACE,4CADF,EADF,CAKD,CACD,mBACE,YAAK,SAAS,CAAEL,OAAO,CAACO,IAAxB,uBACE,YAAK,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAAoBC,UAAU,CAAE,KAAhC,CAAZ,uBACE,KAAC,aAAD,EACE,OAAO,CAAElB,OADX,CAEE,IAAI,CAAEY,MAFR,CAGE,KAAK,CAAC,UAHR,CAIE,OAAO,CAAE,CACPO,SAAS,CAAE,KADJ,CAEPC,MAAM,CAAE,KAFD,CAGPC,OAAO,CAAE,KAHF,CAIPC,WAAW,CAAE,CACXC,eAAe,CAAE,QADN,CAEXC,KAAK,CAAE,MAFI,CAJN,CAQPC,SAAS,CAAE,KARJ,CAJX,EADF,EADF,EADF,CAqBD,CAED,GAAMf,CAAAA,SAAS,CAAGrB,UAAU,CAAC,SAACqC,KAAD,QAAY,CACvCV,IAAI,CAAE,CACJW,OAAO,CAAE,CADL,CADiC,CAAZ,EAAD,CAA5B","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"PayDate\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIew() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { payrun, getPayrun,payrun_loading, loadPendingPayslips } =\r\n    usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    getPayrun();\r\n  }, []);\r\n\r\n  if (payrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}