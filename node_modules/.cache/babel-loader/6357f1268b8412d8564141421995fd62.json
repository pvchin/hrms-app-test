{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { family_url } from \"../../utils/constants\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getFamily() {\n  _s();\n\n  const [filter, setFilter] = useState('all');\n  const {\n    data\n  } = await axios.get(`${family_url}`);\n  return data;\n}\n\n_s(getFamily, \"W/UjwQokI5qYZ80z+yO8skpbfNg=\");\n\nexport function useFamily() {\n  _s2();\n\n  const fallback = [];\n  const {\n    data: family = fallback\n  } = useQuery(queryKeys.family, getFamily);\n  return {\n    family\n  };\n}\n\n_s2(useFamily, \"PV1FCwr+UE8via6vHGNbqL5Ro08=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/components/family/useFamily.js"],"names":["useQuery","family_url","axios","queryKeys","getFamily","filter","setFilter","useState","data","get","useFamily","fallback","family"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,SAAf,GAA2B;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,KAAD,CAApC;AAEF,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAER,UAAW,EAAxB,CAAvB;AACA,SAAOO,IAAP;AACD;;GALcJ,S;;AAOf,OAAO,SAASM,SAAT,GAAqB;AAAA;;AAC1B,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEH,IAAAA,IAAI,EAAEI,MAAM,GAAGD;AAAjB,MAA8BX,QAAQ,CAACG,SAAS,CAACS,MAAX,EAAmBR,SAAnB,CAA5C;AAEA,SAAO;AAAEQ,IAAAA;AAAF,GAAP;AACD;;IALeF,S;UAEsBV,Q","sourcesContent":["\r\nimport { useQuery } from \"react-query\";\r\nimport { family_url } from \"../../utils/constants\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getFamily() {\r\n    const [filter, setFilter] = useState('all');\r\n\r\n  const { data } = await axios.get(`${family_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useFamily() {\r\n  const fallback = [];\r\n  const { data: family = fallback } = useQuery(queryKeys.family, getFamily);\r\n\r\n  return { family };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}