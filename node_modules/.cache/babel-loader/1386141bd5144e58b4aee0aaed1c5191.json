{"ast":null,"code":"import _slicedToArray from\"D:/react-myprojects/hrms-airtable-july2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{ChakraProvider}from\"@chakra-ui/react\";import{createMuiTheme,ThemeProvider}from\"@material-ui/core/styles\";import CssBaseline from\"@material-ui/core/CssBaseline\";import Switch from\"@material-ui/core/Switch\";import{theme}from\"./components/theme\";import{orange,lightBlue,deepPurple,deepOrange}from\"@material-ui/core/colors\";import DashboardMain from\"./components/DashboardMain\";import Main from\"./components/Main\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),darkState=_useState2[0],setDarkState=_useState2[1];var palletType=darkState?\"dark\":\"light\";var mainPrimaryColor=darkState?orange[500]:lightBlue[500];var mainSecondaryColor=darkState?deepOrange[900]:deepPurple[500];var darkTheme=createMuiTheme({palette:{type:palletType,primary:{main:mainPrimaryColor},secondary:{main:mainSecondaryColor}}});var lightTheme=createMuiTheme({palette:{type:palletType,primary:{main:\"#4dabf5\"},secondary:{main:\"#f73378\"}}});var handleThemeChange=function handleThemeChange(){setDarkState(!darkState);};return/*#__PURE__*/_jsxs(ChakraProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(React.Suspense,{fallback:/*#__PURE__*/_jsx(\"h1\",{children:\"Loading profile...\"}),children:/*#__PURE__*/_jsx(Main,{})})})]});};export default App;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable-july2/src/App.js"],"names":["React","useState","ChakraProvider","createMuiTheme","ThemeProvider","CssBaseline","Switch","theme","orange","lightBlue","deepPurple","deepOrange","DashboardMain","Main","App","darkState","setDarkState","palletType","mainPrimaryColor","mainSecondaryColor","darkTheme","palette","type","primary","main","secondary","lightTheme","handleThemeChange"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,OAASC,cAAT,CAAyBC,aAAzB,KAA8C,0BAA9C,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,KAAT,KAAsB,oBAAtB,CACA,OACEC,MADF,CAEEC,SAFF,CAGEC,UAHF,CAIEC,UAJF,KAKO,0BALP,CAMA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACkBb,QAAQ,CAAC,KAAD,CAD1B,wCACTc,SADS,eACEC,YADF,eAEhB,GAAMC,CAAAA,UAAU,CAAGF,SAAS,CAAG,MAAH,CAAY,OAAxC,CACA,GAAMG,CAAAA,gBAAgB,CAAGH,SAAS,CAAGP,MAAM,CAAC,GAAD,CAAT,CAAiBC,SAAS,CAAC,GAAD,CAA5D,CACA,GAAMU,CAAAA,kBAAkB,CAAGJ,SAAS,CAAGJ,UAAU,CAAC,GAAD,CAAb,CAAqBD,UAAU,CAAC,GAAD,CAAnE,CACA,GAAMU,CAAAA,SAAS,CAAGjB,cAAc,CAAC,CAC/BkB,OAAO,CAAE,CACPC,IAAI,CAAEL,UADC,CAEPM,OAAO,CAAE,CACPC,IAAI,CAAEN,gBADC,CAFF,CAKPO,SAAS,CAAE,CACTD,IAAI,CAAEL,kBADG,CALJ,CADsB,CAAD,CAAhC,CAWA,GAAMO,CAAAA,UAAU,CAAGvB,cAAc,CAAC,CAChCkB,OAAO,CAAE,CACPC,IAAI,CAAEL,UADC,CAEPM,OAAO,CAAE,CACPC,IAAI,CAAE,SADC,CAFF,CAKPC,SAAS,CAAE,CACTD,IAAI,CAAE,SADG,CALJ,CADuB,CAAD,CAAjC,CAYA,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BX,YAAY,CAAC,CAACD,SAAF,CAAZ,CACD,CAFD,CAIA,mBACE,MAAC,cAAD,EAAgB,KAAK,CAAER,KAAvB,wBAEE,KAAC,WAAD,IAFF,cAGE,kCACE,KAAC,KAAD,CAAO,QAAP,EAAgB,QAAQ,cAAE,0CAA1B,uBAEE,KAAC,IAAD,IAFF,EADF,EAHF,GADF,CAeD,CA/CD,CAiDA,cAAeO,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { theme } from \"./components/theme\";\nimport {\n  orange,\n  lightBlue,\n  deepPurple,\n  deepOrange,\n} from \"@material-ui/core/colors\";\nimport DashboardMain from \"./components/DashboardMain\";\nimport Main from \"./components/Main\";\n\nconst App = () => {\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n      },\n    },\n  });\n  const lightTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: \"#4dabf5\",\n      },\n      secondary: {\n        main: \"#f73378\",\n      },\n    },\n  });\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  return (\n    <ChakraProvider theme={theme}>\n      {/* <ThemeProvider theme={lightTheme}> */}\n      <CssBaseline />\n      <div>\n        <React.Suspense fallback={<h1>Loading profile...</h1>}>\n          {/* <DashboardMain /> */}\n          <Main />\n        </React.Suspense>\n      </div>\n      {/* <Switch checked={darkState} onChange={handleThemeChange} /> */}\n\n      {/* </ThemeProvider> */}\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}