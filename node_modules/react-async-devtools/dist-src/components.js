function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable react/prop-types */
import React from "react";
export const Root = props => React.createElement("div", _extends({}, props, {
  style: _objectSpread({
    position: "absolute",
    top: "1em",
    right: "1em",
    width: "15em",
    boxSizing: "border-box",
    border: "1px solid #0366d6",
    borderRadius: "1em",
    boxShadow: "0 2px 1em #00000022",
    background: "white",
    padding: "1em",
    color: "#000",
    fontSize: "1rem",
    fontFamily: `-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif`
  }, props.style)
}));
export const Range = props => React.createElement("input", _extends({
  type: "range",
  role: "slider"
}, props, {
  style: {
    fontSize: "inherit",
    display: "block",
    width: "100%",
    margin: "1em 0"
  }
}));
export const Checkbox = props => React.createElement("input", _extends({
  type: "checkbox"
}, props, {
  style: _objectSpread({
    fontSize: "inherit",
    marginRight: "0.5em",
    verticalAlign: "bottom"
  }, props.style)
}));
export const Label = props => React.createElement("label", _extends({}, props, {
  style: _objectSpread({
    fontSize: "inherit",
    display: "block",
    marginBottom: "1.5em"
  }, props.style)
}));
export const Small = props => React.createElement("small", _extends({}, props, {
  style: _objectSpread({
    display: "block",
    marginTop: "0.5em",
    fontSize: "0.75em",
    textTransform: "uppercase",
    opacity: "0.5"
  }, props.style)
}));
export const Ol = props => React.createElement("ol", _extends({}, props, {
  style: _objectSpread({
    margin: "0",
    padding: "0",
    listStyle: "none",
    lineHeight: "2em"
  }, props.style)
}));
export const Li = props => React.createElement("li", _extends({}, props, {
  style: _objectSpread({
    display: "flex",
    justifyContent: "space-between"
  }, props.style)
}));
export const Button = props => React.createElement("button", _extends({}, props, {
  style: _objectSpread({
    height: "1.6rem",
    padding: "2px 6px",
    border: "0",
    borderRadius: "0.5em",
    background: "#0366d6",
    fontSize: "0.75em",
    color: "#fff"
  }, props.style)
}));